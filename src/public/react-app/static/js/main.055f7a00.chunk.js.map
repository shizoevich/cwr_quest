{"version":3,"sources":["pages/NewPatientsDashboard/components/PatientCard/index.module.scss","pages/NewPatientsDashboard/components/AddPatientModal/components/DiagnosesSelect/index.module.scss","components/Modals/PatientFormsModal/components/FormRequestLog/index.module.scss","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/ActionsButton/index.module.scss","pages/NewPatientsDashboard/components/AddPatientModal/components/ExpandableForm/index.module.scss","components/Inputs/FormListInput/index.module.scss","pages/NewPatientsDashboard/components/FilterMultipleSelect/index.module.scss","components/Notifications/index.module.scss","components/Sidebar/components/Messages/index.module.scss","components/CallResultModal/components/AppointmentScheduledModal/index.module.scss","components/TabMate/index.module.scss","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/StageSelect/index.module.scss","pages/SecretaryDashboard/index.module.scss","components/InsuranceAuthorizationNumber/index.module.scss","pages/NewPatientsDashboard/components/AddPatientModal/index.module.scss","pages/PatientTransfersDashboard/index.module.scss","components/Inputs/InputSearch/index.module.scss","pages/Faxes/components/FaxLogs/index.module.scss","components/CircleLoader/index.module.scss","pages/NewPatientsDashboard/components/AddPatientModal/components/Patient/index.module.scss","pages/NewPatientsDashboard/components/FileTypeSelectorModal/components/CustomSelect/index.module.scss","pages/NewPatientsDashboard/components/FormStatusIndicator/index.module.scss","pages/NewPatientsDashboard/components/PatientDetailsModal/index.module.scss","components/ToggleSwitch/index.module.scss","components/Table/components/DataIsLoading/index.module.scss","pages/Faxes/components/FaxToolbar/index.module.scss","pages/NewPatientsDashboard/components/AddPatientModal/components/InsuranceOption/index.module.scss","pages/NewPatientsDashboard/components/FileTypeSelectorModal/components/CustomOption/index.module.scss","pages/SupervisorDashboard/components/SuperviseeBlock/index.module.scss","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/SendDocumentByEmailModal/index.module.scss","layouts/AppMainLayout/index.module.scss","pages/Faxes/components/ButtonOptions/index.module.scss","components/Table/index.module.scss","pages/Faxes/components/FaxView/index.module.scss","components/Sidebar/components/TridiumAppointmentsInfo/index.module.scss","components/StarRating/index.module.scss","pages/NewPatientsDashboard/components/AddPatientModal/components/ExistingPatientDialog/index.module.scss","pages/NewPatientsDashboard/components/SourceTag/index.module.scss","pages/NewPatientsDashboard/components/ThreeDotsMenu/index.module.scss","components/SearchInput/index.module.scss","pages/NewPatientsDashboard/components/CustomLaneHeader/index.module.scss","pages/Faxes/index.module.scss","components/Sidebar/index.module.scss","components/HelpIcon/index.module.scss","components/PatientStatusDateTooltip/index.module.scss","pages/SecretaryDashboard/components/CallButtonWithModals/index.module.scss","components/CircleLoaderWithOverlay/index.module.scss","components/Modals/PatientFormsModal/index.module.scss","pages/NewPatientsDashboard/components/DurationIndicator/index.module.scss","pages/SupervisorDashboard/index.module.scss","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/SendDocumentByFaxModal/index.module.scss","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/StageChangeHistoryModal/index.module.scss","pages/ReauthorizationRequestsDashboard/components/UpcomingReauthorizationRequests/components/CreateRequestButton/index.module.scss","pages/DoctorsRequestsDashboard/index.module.scss","assets/icons/minus.svg","constants/index.js","components/NavBar/components/BurgerButton/index.js","components/NavBar/index.js","api/common/navBar.js","layouts/AppMainLayout/index.js","contexts/FaxPageContext.js","api/pages/faxes-page.js","pages/Faxes/components/ButtonUnread/index.js","assets/icons/arrow-left.svg","contexts/NotificationsContext.js","components/Modals/FaxDetachAlert/index.js","webpack:///./src/assets/icons/plus.svg?c3b5","assets/icons/clear-circle.svg","assets/icons/download.svg","utilities/patientStatusColor.js","pages/Faxes/components/AssigneeForm/index.js","pages/Faxes/components/ButtonAssign/index.js","pages/Faxes/components/ButtonOptions/index.js","components/ToggleSwitch/index.js","pages/Faxes/components/ToolsBar/index.js","utilities/changeTimeConvention.js","utilities/formattedFaxDate.js","assets/icons/search.svg","assets/icons/fax.svg","pages/Faxes/components/FilterByPatient/index.js","components/Table/components/DataIsLoading/index.js","components/Table/components/NoData/index.js","components/Table/index.js","components/Buttons/ButtonBackward/index.js","pages/Faxes/components/ButtonBack/index.js","components/Inputs/InputSearch/index.js","pages/Faxes/components/SearchBar/index.js","pages/Faxes/components/FaxList/index.js","assets/icons/chevron.svg","pages/Faxes/components/FaxLogs/index.js","pages/Faxes/components/FaxToolbar/index.js","pages/Faxes/components/FaxView/index.js","hooks/useDraggableScroll.js","utilities/getVisiblePages.js","components/Pagination/index.js","constants/faxes.js","pages/Faxes/index.js","api/common/sidebar.js","components/Sidebar/components/Messages/index.js","utilities/moment-config.js","assets/icons/success.svg","components/HelpIcon/index.js","constants/reauthorization-request-dashboard.js","utilities/reauthorizationRequestsDashboardUtils.js","components/PatientStatusDateTooltip/index.js","pages/SecretaryDashboard/components/CustomBadge/index.js","mixins/cells-functions.js","mixins/sorting-functions.js","pages/SecretaryDashboard/components/FormStatusBadge/index.js","assets/icons/telephone-fill.svg","api/common/ringCentral.js","store/reducers/app.reducer.js","mixins/phone-format.js","components/Inputs/PhoneInput/index.js","constants/new-patients-dashboard.js","components/CallModal/index.js","mixins/date-format.js","contexts/CallResultContext.js","components/CallResultModal/components/CommentModal/index.js","api/pages/new-patients-dashboard-page.js","store/reducers/newPatientsDashboard.reducer.js","components/CallResultModal/components/AppointmentScheduledModal/index.js","contexts/SurveyModalContext.js","components/StarRating/index.js","components/CallResultModal/components/SurveyModal/components/SurveyAppointmentsInfo/index.js","components/CallResultModal/components/SurveyModal/components/InitialSurveyModal/index.js","components/CallResultModal/components/SurveyModal/components/SecondSurveyModal/index.js","components/CallResultModal/components/SurveyModal/index.js","components/CallResultModal/index.js","pages/SecretaryDashboard/components/CallButtonWithModals/index.js","utilities/hexToRgba.js","store/reducers/secretaryDashboard.reducer.js","components/CircleLoader/index.js","assets/icons/page-loader.gif","assets/icons/sync-icon.svg","components/Sidebar/components/TridiumAppointmentsInfo/index.js","api/pages/secretary-dashboard-page.js","components/Sidebar/index.js","components/TabMate/index.js","pages/SecretaryDashboard/components/ImportantForTodayTable/index.js","pages/SecretaryDashboard/components/ImportantForToday/index.js","pages/SecretaryDashboard/components/LostPatients/index.js","pages/SecretaryDashboard/components/NewPatients/index.js","pages/SecretaryDashboard/components/NewLostPatients/index.js","pages/SecretaryDashboard/index.js","assets/icons/edit.svg","assets/icons/filter.svg","pages/NewPatientsDashboard/components/FilterMultipleSelect/index.js","assets/icons/bin-white.svg","pages/NewPatientsDashboard/components/ArchivePatientModal/index.js","assets/icons/add-patient-inquiry.svg","assets/icons/plus.svg","pages/NewPatientsDashboard/components/AddPatientModal/components/InsuranceOption/index.js","pages/NewPatientsDashboard/components/AddPatientModal/components/DiagnosesSelect/index.js","pages/NewPatientsDashboard/components/AddPatientModal/formDataDefaults.js","utilities/react-select-styles.js","pages/NewPatientsDashboard/components/AddPatientModal/selectStyles.js","pages/NewPatientsDashboard/components/AddPatientModal/enums.js","pages/NewPatientsDashboard/components/AddPatientModal/utils.js","pages/NewPatientsDashboard/components/AddPatientModal/date-picker-theme.js","pages/NewPatientsDashboard/components/AddPatientModal/components/ExpandableForm/index.js","pages/NewPatientsDashboard/components/AddPatientModal/components/Patient/index.js","pages/NewPatientsDashboard/components/AddPatientModal/components/ExistingPatientDialog/index.js","pages/NewPatientsDashboard/utils.js","pages/NewPatientsDashboard/components/AddPatientModal/index.js","components/CircleLoaderWithOverlay/index.js","assets/icons/details.svg","assets/icons/chart.svg","assets/icons/create-patient.svg","assets/icons/call.svg","assets/icons/hex-cross.svg","components/Modals/PatientFormsModal/components/FormRequestLog/FormRequestLogsTable.js","api/common/patientForms.js","components/Inputs/FormListInput/index.js","assets/icons/mail-icon.svg","assets/icons/phone-icon.svg","assets/icons/caret-icon.svg","assets/icons/check-icon.svg","utilities/newPatientsCrmUtils.js","components/Modals/PatientFormsModal/components/ConfirmSendingDocumentRequestModal/index.js","utilities/validation.js","components/Modals/PatientFormsModal/index.js","pages/NewPatientsDashboard/components/SourceTag/index.js","assets/icons/dots-vertical.svg","pages/NewPatientsDashboard/components/ThreeDotsMenu/index.js","pages/NewPatientsDashboard/components/PatientDetailsModal/components/PatientLeadDocumentComment/index.js","pages/NewPatientsDashboard/components/PatientDetailsModal/components/PatientAlertComment/index.js","pages/NewPatientsDashboard/components/PatientDetailsModal/components/InitialSurveyCompleteComment/index.js","pages/NewPatientsDashboard/components/PatientDetailsModal/components/OnboardingCompleteComment/index.js","pages/NewPatientsDashboard/components/PatientDetailsModal/components/DefaultComment/index.js","pages/NewPatientsDashboard/components/PatientDetailsModal/components/SecondSurveyCompleteComment/index.js","pages/NewPatientsDashboard/components/PatientDetailsModal/index.js","pages/NewPatientsDashboard/components/PatientDetailsModal/utils.js","assets/icons/change-stage.svg","contexts/MoveCardContext.js","pages/NewPatientsDashboard/components/CardMoveAcrossLanesModal/components/CommentModal/index.js","pages/NewPatientsDashboard/components/CardMoveAcrossLanesModal/components/MoveToAppointmentScheduledStageModal/date-picker-theme.js","pages/NewPatientsDashboard/components/CardMoveAcrossLanesModal/components/MoveToAppointmentScheduledStageModal/index.js","pages/NewPatientsDashboard/components/CardMoveAcrossLanesModal/index.js","pages/NewPatientsDashboard/components/FileTypeSelectorModal/components/CustomOption/index.js","pages/NewPatientsDashboard/components/FileTypeSelectorModal/components/CustomSelect/index.js","pages/NewPatientsDashboard/components/FileTypeSelectorModal/index.js","assets/icons/search-icon.svg","components/SearchInput/index.js","assets/icons/stethoscope.svg","assets/icons/bin-red.svg","assets/icons/forms-not-send.svg","assets/icons/forms-send.svg","assets/icons/forms-signed.svg","pages/NewPatientsDashboard/components/FormStatusIndicator/index.js","pages/NewPatientsDashboard/components/DurationIndicator/index.js","pages/NewPatientsDashboard/components/PatientCard/index.js","pages/NewPatientsDashboard/components/CustomLaneHeader/index.js","pages/NewPatientsDashboard/components/EnhancedTrelloBoard/index.js","pages/NewPatientsDashboard/index.js","components/Modals/AreYouStillHereModal/index.js","api/pages/supervisor-dashboard-page.js","store/reducers/supervisorDashboard.reducer.js","pages/SupervisorDashboard/components/SuperviseeBlock/index.js","pages/SupervisorDashboard/index.js","components/CrossSvg/index.js","api/pages/reauthorization-request-dashboard-page.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/SendDocumentByFaxModal/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/SendDocumentByEmailModal/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/SaveLogModal/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/StageChangeHistoryModal/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/ActionsButton/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/CommentModal/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/date-picker-theme.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/ApprovalReceivedStageModal/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/AuthUpdatedStageModal/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/StageSelect/index.js","components/InsuranceAuthorizationNumber/index.js","pages/ReauthorizationRequestsDashboard/components/UpcomingReauthorizationRequests/components/CreateRequestButton/index.js","store/reducers/reauthorizationRequestsDashboard.reducer.js","pages/ReauthorizationRequestsDashboard/components/UpcomingReauthorizationRequests/index.js","pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/index.js","pages/ReauthorizationRequestsDashboard/index.js","pages/DoctorsRequestsDashboard/selectStyles.js","pages/DoctorsRequestsDashboard/components/PatientNoteUnlockRequests/components/ApprovePatientNoteUnlockModal/index.js","api/pages/doctors-requests-dashboard-page.js","pages/DoctorsRequestsDashboard/components/PatientNoteUnlockRequests/components/DeclinePatientNoteUnlockModal/index.js","pages/DoctorsRequestsDashboard/components/PatientNoteUnlockRequests/components/ActionsButton/index.js","pages/DoctorsRequestsDashboard/components/PatientRemovalRequests/components/ApprovePatientRemovalModal/index.js","pages/DoctorsRequestsDashboard/components/PatientRemovalRequests/components/DeclinePatientRemovalModal/index.js","pages/DoctorsRequestsDashboard/components/PatientRemovalRequests/components/ActionsButton/index.js","store/reducers/doctorsRequestsDashboard.reducer.js","pages/DoctorsRequestsDashboard/components/PatientRemovalRequests/index.js","pages/DoctorsRequestsDashboard/components/PatientNoteUnlockRequests/index.js","pages/DoctorsRequestsDashboard/index.js","pages/PatientTransfersDashboard/components/UnassignedPatients/сomponents/AssignPatientButton/index.js","pages/PatientTransfersDashboard/components/UnassignedPatients/сomponents/ArchivePatientButton/index.js","pages/PatientTransfersDashboard/components/AssignedPatients/components/UnassignPatientButton/index.js","pages/PatientTransfersDashboard/components/AssignedPatients/components/TransferPatientButton/index.js","store/reducers/patientTransfersDashboard.reducer.js","api/pages/patient-transfer-dashboard-page.js","pages/PatientTransfersDashboard/components/AssignedPatients/components/UnassignPatientInfo/index.js","pages/PatientTransfersDashboard/components/AssignedPatients/components/UnassignPatientHelpText/index.js","pages/PatientTransfersDashboard/components/AssignedPatients/components/UnassignPatientAlert/index.js","pages/PatientTransfersDashboard/components/AssignedPatients/components/UnassignPatientModal/index.js","pages/PatientTransfersDashboard/selectStyles.js","pages/PatientTransfersDashboard/components/AssignedPatients/components/TransferPatientModal/index.js","pages/PatientTransfersDashboard/components/AssignedPatients/index.js","pages/PatientTransfersDashboard/components/UnassignedPatients/сomponents/ArchivePatientModal/index.js","pages/PatientTransfersDashboard/components/UnassignedPatients/сomponents/AssignPatientModal/index.js","pages/PatientTransfersDashboard/components/UnassignedPatients/index.js","pages/PatientTransfersDashboard/index.js","App.js","api/common/user.js","assets/icons/error.svg","components/Notifications/index.js","store/store.js","index.js","pages/NewPatientsDashboard/components/CardMoveAcrossLanesModal/components/MoveToAppointmentScheduledStageModal/index.module.scss","pages/SecretaryDashboard/components/CustomBadge/index.module.scss","pages/ReauthorizationRequestsDashboard/index.module.scss","pages/Faxes/components/AssigneeForm/index.module.scss","components/Modals/PatientFormsModal/components/ConfirmSendingDocumentRequestModal/index.module.scss"],"names":["module","exports","_path","ROW_NUMBER_COLUMN","ACTIVE_APPOINTMENT_TYPE","RESCHEDULED_APPOINTMENT_TYPE","BurgerButton","_ref","click","on","setRef","ref","useRef","useEffect","_jsx","onClick","className","children","Navbar","Toggle","_jsxs","classNames","NavBar","_menu$links","user","useSelector","state","app","_useState","useState","_useState2","_slicedToArray","menu","setMenu","_useState3","_useState4","expanded","setExpanded","_useState5","_useState6","burgerButtonRef","setBurgerButtonRef","navbarCollapseRef","useOnClickOutside","e","current","contains","target","handleLogout","preventDefault","document","getElementById","submit","axios","get","then","data","expand","role","id","dropdownClasses","concat","Container","fluid","Brand","href","Collapse","Nav","links","map","item","submenu","itemTitle","name","items_count","index","NavDropdown","title","subItem","Item","link","Link","align","user_name","user_links","img","src","url","alt","action","method","hidden","AppMainLayout","_Fragment","style","header","main","FaxPageContext","React","createContext","getFaxes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","type","page","wrap","_context","prev","next","t0","abrupt","sent","t1","response","stop","_x","_x2","apply","arguments","getUnreadCount","catch","error","searchFaxesByPatient","_ref2","_callee2","searchParams","searchType","typeParam","encodedParams","_context2","encodeURIComponent","console","_x3","_x4","getFaxesByPatientId","_ref3","_callee3","patientId","faxId","_context3","_x5","_x6","getFaxesByPatientLeadId","_ref4","_callee4","patientLeadId","_context4","_x7","_x8","setFaxAsRead","_ref5","_callee5","row","_context5","post","fax_id","_x9","setFaxAsUnread","_ref6","_callee6","rows","requestIds","_context6","forEach","push","_x10","attachFaxToPatient","_ref7","_callee7","faxPatient","faxName","faxStatus","faxComment","_context7","assign","fax_name","content","document_type_id","patient_id","only_for_admin","comment","status","_x11","_x12","_x13","_x14","_x15","attachFaxToPatientLead","_ref8","_callee8","_context8","_x16","_x17","_x18","_x19","_x20","detachFaxFromPatient","_ref9","_callee9","_context9","detach_pdf","_x21","detachFaxFromPatientLead","_ref10","_callee10","_context10","patient_lead_id","_x22","downloadFax","_ref11","_callee11","_context11","download","responseType","headers","Accept","filename","split","replaceAll","log","window","URL","createObjectURL","Blob","createElement","setAttribute","body","appendChild","_x23","showFaxView","_ref12","_callee12","_context12","blob","_x24","getFaxLogs","_ref13","_callee13","_args13","_context13","length","undefined","_x25","ButtonUnread","_useContext","useContext","selectedRow","markedRows","setLoading","setUnreadCount","Button","is_read","meta","total","finally","markedArray","original","toggleRowSelected","variant","disabled","includeSelected","filter","unreadButtonCounter","_excluded","_extends","Object","bind","i","source","key","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgMinus","svgRef","titleId","props","width","height","viewBox","fill","xmlns","d","_path2","ForwardRef","NotificationsContext","FaxDetachAlert","handleDecline","handleAccept","Modal","show","backdrop","onHide","centered","Body","maxWidth","margin","lineHeight","phone","patient","SvgArrowLeft","stroke","strokeLinecap","strokeLinejoin","SvgPlus","SvgClearCircle","_path3","colorCondition","AssigneeForm","handlePatientSearch","handlePatientChoice","attachButtonHandler","useNavigate","forwardRef","event","IconPlus","DropDownMenu","_searchInputRef$curre","attachStage","setAttachStage","patientsList","setPatientsList","setFaxPatient","_useState7","_useState8","setFaxComment","_useState9","_useState10","setFaxName","_useState11","_useState12","setFaxStatus","searchInputRef","styles","formWrapper","stopPropagation","patientSearch","autoFocus","input","placeholder","onInput","value","InputClearIcon","patientSearchClear","list","patient_status","stepTwo","buttonBack","ArrowLeft","onSubmit","textareaBox","required","textarea","onChange","checked","checkbox","htmlFor","Dropdown","as","Menu","renderOnMount","ButtonAssign","enqueueNotification","_useContext2","updateData","activeTab","currentPage","alertState","setAlertState","debounceHandleSearchRequest","debounce","trim","detachAlertState","patient_lead","IconMinus","recipient","setPatientChoice","detachButtonHandler","SvgDownload","icon","ButtonOptions","autoClose","optionDownloadFax","DownLoadIcon","ToggleSwitch","buttons","_ref$className","ToggleButtonGroup","button","ToggleButton","toggleButton","activeButton","label","counter","ToolsBar","setActiveTab","unreadCount","setButtonBackState","ButtonToolbar","rel","changeTimeConvention","date","hours","getHours","minutes","getMinutes","ampm","_circle","SvgSearch","cx","cy","r","FilterByPatient","cell","setTableData","setTableParams","setSearchBarState","setSearchParams","getFaxesMethod","faxes","clickHandler","SearchIcon","DataIsLoading","showLabelNotLoaded","labelNotLoaded","colSpan","NoData","IndeterminateCheckbox","indeterminate","_ref$isVerticallyCent","isVerticallyCentered","rest","defaultRef","resolvedRef","padding","_objectSpread","Table","columns","dataIsLoaded","_ref2$pageSize","pageSize","_ref2$currentPage","withCheckbox","_ref2$checkboxVertica","checkboxVerticallyCentered","_ref2$className","_ref2$rowIsClickable","rowIsClickable","_ref2$showLabelNotLoa","_ref2$labelNotLoaded","_ref2$options","options","applyMinHeightToHeader","setMarkedRows","setSelectedRow","faxViewRef","loading","tableData","setPdfFile","unread","selected","_useTable","useTable","initialState","pageIndex","sortBy","useSortBy","usePagination","useRowSelect","useFlexLayout","hooks","visibleColumns","minWidth","Header","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","_toConsumableArray","getTableProps","getTableBodyProps","headerGroups","prepareRow","nextPage","previousPage","setSortBy","selectedFlatRows","targetPage","pagesToMove","goToPage","hasSorting","disableSortBy","checkSorting","headerGroup","getHeaderGroupProps","column","headerProps","getHeaderProps","getSortByToggleProps","flex","render","extendedHeight","canSort","Icon","path","mdiMenuUp","size","marginBottom","color","isSorted","isSortedDesc","mdiMenuDown","rowIndex","getRowProps","find","count","rowSelectHandler","row_class_name","cells","cellProperties","getCellProps","borderBottom","rowValue","isLink","textColor","ButtonBackward","ButtonBack","InputSearch","_inputRef$current","inputRef","box","search","handelChange","clear","SearchBar","searchBarState","debounceInputHandler","current_page","last_page","per_page","FaxList","tableParams","buttonBackState","hasLink","inquiry_id","getLink","useMemo","accessor","timeStamp","Date","currentDay","getDate","currentMonth","getMonth","currentYear","getFullYear","currentDate","initialDate","time","newDateMonth","newDateDay","newDateYear","generateDate","generatedOffsetTime","getTime","formattedMonth","formattedDay","formattedYear","timeObject","formattedFaxDate","SvgFax","_g","_defs","SvgChevron","clipPath","transform","formattedTime","datePart","timePart","formattedDatePart","formattedTimePart","slice","convertedTimeConvention","FaxLogs","_props$logs$data","setFaxLogs","open","setOpen","setNextPage","totalPages","setTotalPages","infiniteList","firstLoad","setFirstLoad","_props$logs$meta","logs","scrollTop","setLogs","setState","prevState","toggleHandler","marginRight","Spinner","animation","Chevron","in","collapse","onScroll","element","scrollHeight","clientHeight","throttle","request","faxInfiniteLoading","singleLog","created_at","test","subject","FaxToolbar","scale","setScale","zoom","Math","round","FaxLoader","message","FaxIcon","FaxView","faxLogs","pdfFile","setCurrentPage","scalePage","setScalePage","pdfViewRef","_useDraggableScroll","direction","initialPosition","scrollLeft","mouseX","mouseY","mouseMoveHandler","dx","clientX","dy","clientY","mouseUpHandler","cursor","removeEventListener","onMouseDown","userSelect","addEventListener","useDraggableScroll","position","minHeight","paddingTop","paddingBottom","scroll","Document","file","noData","workerSrc","PDFJSWorker","onLoadSuccess","numPages","Array","from","Waypoint","onEnter","bottomOffset","Page","canvas","pageNumber","renderTextLayer","renderAnnotationLayer","getVisiblePages","Pagination","params","visiblePages","setVisiblePages","initialTableParams","Faxes","previousTab","setPreviousTab","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_response$data$faxes","location","Provider","container","Col","getMessages","deleteMessage","payload","Messages","_React$useState","_React$useState2","_React$useState3","_React$useState4","messages","setMessages","_React$useState5","_React$useState6","pagination","setPagination","_React$useState7","_React$useState8","allDataIsLoaded","setAllDataIsLoaded","_React$useState9","_React$useState10","loadingEl","loaderRef","getProviderMessages","prevMessages","refreshMessages","initIntersectionObserver","deleteMessageClick","mention_id","finish","observer","IntersectionObserver","isIntersecting","newPage","root","threshold","observe","messagesCard","whiteSpace","statusColor","status_color","model","comment_id","inquiry","openMessage","text","first_name","last_name","middle_initial","provider","provider_name","right","mdiCloseCircle","display","loader","globalTimezone","process","REACT_APP_TIMEZONE","moment","tz","setDefault","HelpIcon","helpIcon","mdiHelpCircle","EMAIL_SEND_METHOD_NAME","getSendMethodNameFromId","getFirstElementFromLogsAndSharedDocuments","firstLog","firstSharedDocument","firstLogDate","firstSharedDocumentDate","isBefore","getStageChangeHistory","requestForm","stage_change_history","firstname","lastname","old_stage","new_stage","format","PatientStatusDateTooltip","patientStatusDate","tooltipText","__html","OverlayTrigger","placement","overlay","Tooltip","dangerouslySetInnerHTML","CustomBadge","_ref$background","background","_ref$textColor","statusUpdatedAt","badgeClasses","badge","alignItems","patientNameValueCell","dateValueCell","yesterdayDate","subtract","todayDate","tomorrowDate","add","creditCardBadgeCell","now","expirationDate","set","month","exp_month","year","exp_year","formattedExpirationDate","clone","isSameOrBefore","sortingName","rowA","rowB","columnId","nameA","values","toLowerCase","nameB","sortingTimeFormatAmPm","columnName","timeA","timeB","sortingDate","valueA","valueB","sortingStatus","statusA","statusB","localeCompare","FormStatusBadge","formStatus","red","createdAt","sent_to_phone","sent_to_phone_error","green","arrayOfKeys","checkingProperties","reason","changePropertyNameToDisplay","join","getRingCentralNumbers","patientRingOutCall","patientLogExternalRingOutCall","updateRingOutCall","put","createSlice","ringCentralNumbers","callLog","userData","isOnlyAdmin","isLoadedIsOnlyAdmin","queryParams","reducers","setRingCentralNumbersAC","numbers","setCallLogAC","setUserAC","setQueryParamsAC","setUserDataIsOnlyAdminAC","setUserDataIsLoadedIsOnlyAdminAC","appReducer","reducer","_slice$actions","actions","getUsFormat","phoneTo","findNumbers","v2","number","country","parsePhoneNumber","nationalNumber","formatNational","PhoneInput","setPhone","_ref$placeholder","_ref$disabled","_ref$error","_ref$alwaysShowMask","alwaysShowMask","InputMask","mask","NEW_PATIENTS_DASHBOARD_STAGES","NEW_PATIENTS_DASHBOARD_PROBLEMATIC_CARDS","initialCallData","phoneFrom","customFrom","playPrompt","CallModal","patientType","showModal","closeModal","openCallResultModal","dispatch","useDispatch","_useSelector2","newPatientsDashboard","lanes","callModalData","setPatient","callData","setCallData","errors","setErrors","submitDisabled","setSubmitDisabled","getCurrentInquiry","lane","cards","card","isPatientCreated","inquirable","getRingCentralPatientCallDetails","err","currentInquiry","stageId","onboarding_phone","cell_phone","home_phone","work_phone","getPhoneTo","replace","onlyForAdmin","_errors","patient_type","phone_from","phone_to","play_prompt","call_log","setTimeout","logExternalCall","_errors2","makeExternalCall","a","remove","closeButton","defaultValue","phoneNumber","defaultChecked","ringcentral_call_logs","_log$user","_log$user2","call_status_title","Footer","CallResultContext","initialFormData","CommentModal","clearError","isSaving","handleSubmit","formData","setFormData","validate","handleSaveClick","handleCloseModal","resetModal","getInquiriesByStage","getArchivedInquiries","getInquirablesWithoutActiveInquiries","limit","search_query","searchQuery","getInquiryComments","changeState","createOnboardingCompleteComment","createInitialSurveyComment","createSecondSurveyComment","getProviders","getInsurances","getEligibilityPayers","getDiagnoses","_ref12$query","query","titleText","lastPage","filters","searchValue","showAddPatientModal","selectedCardData","fileTypeSelection","fileId","patientIsCreated","removeCardData","moveCardData","eventBus","registrationMethods","channels","sources","languages","patientsData","lastPageIndex","providersData","insurancesData","eligibilityPayersData","insuranceProcedures","diagnoses","therapyTypes","preferredPhoneList","documentTypes","providersDatasetForTribute","setLanesInTableAC","setDataInLaneAC","_action$payload","laneId","laneIndex","findIndex","String","cardMoveAcrossLanesAC","_action$payload$data","fromLaneId","toLaneId","cardId","cardDetails","fromLaneIndex","toLaneIndex","splice","Number","addCardAC","_action$payload2","unshift","updateCardDataAC","cardIndex","deleteCardAC","_action$payload3","setShowAddPatientModalAC","setSelectedCardDataAC","addCommentToSelectedCardDataAC","comments","setRemoveCardDataAC","setMoveCardDataAC","setEventBusAC","setSearchValueAC","setFiltersAC","setRegistrationMethodsAC","setChannelsAC","setSourcesAC","addValueToSourcesAC","_action$payload4","channel_id","channel","setLanguagesAC","setPatientsDataAC","setProvidersDataAC","setInsurancesDataAC","setEligibilityPayersDataAC","setInsuranceProceduresAC","setDiagnosesAC","setTherapyTypesAC","setCallModalDataAC","setLoadingAC","setFileTypeSelectionAC","setDocumentTypesAC","setCommentsInSelectedCardDataAC","setProvidersDatasetForTributeAC","newPatientsDashboardReducer","AppointmentScheduledModal","_currentInquiry$inqui","_currentInquiry$inqui2","_useSelector","_yield$Promise$all","_yield$Promise$all2","commentResult","onboardingCompleteComment","updatedCardData","Promise","all","admin","NewPatientsDashboardReducer","publish","onboardingDate","onboardingTime","formattedOnboardingDate","formattedOnboardingTime","coPay","deductible","alert","co_pay","onboardingPhone","formsIsFilled","Boolean","last_document","requireCreditCard","last_document_request","items","some","form_type_id","indicator","yellow","mdiCheckBold","mdiExclamationThick","mdiClose","SurveyModalContext","StarRating","fieldName","_ref$handleStarClick","handleStarClick","_ref$readOnly","readOnly","hoveredIndexService","setHoveredIndexService","getPath","mdiStar","mdiStarOutline","handleMouseEnter","handleStarHoverService","handleMouseLeave","getClassName","star","starHover","_","onMouseEnter","onMouseLeave","SurveyAppointmentsInfo","appointments","appointment","date_of_service","comment_type","appointment_id","metadata","service_rate","provider_rate","suggestions","InitialSurveyModal","completedAppointments","setCompletedAppointments","handleInputComment","hasSuggestions","handleHasSuggestionsChange","handleInputSuggestions","updateCardOnBoard","updatedCard","initialSurveyComplete","therapist_understanding_support_rate","therapy_atmosphere_rate","therapist_openness_share_rate","therapy_session_after_feelings_rate","SecondSurveyModal","secondSurveyComplete","SurveyModal","setHasSuggestions","surveyModalComponent","component","getSurveyModalComponent","_defineProperty","CallResultModal","setIsSaving","isPatientLead","call_subject_type","call_subject_id","modalComponent","getModalComponent","newErrors","cloneDeep","CallButtonWithModals","showCallModal","setShowCallModal","showCallResultModal","setShowCallResultModal","callButton","PhoneIcon","hexToRgba","hex","alpha","parseInt","g","b","withoutCompletedForms","tableColumns","sortType","hex_color","_rowA$original$column","_rowB$original$column","requireEligibilityCheck","withDeductible","withNegativeCreditCardBalance","withNoFutureAppointments","cashPayment","newPatients","inactivePatients","lostPatients","_ref14","tridiuumAppointmentsCount","isRestartingTridiuumParsers","setDataInTableAC","tableName","setDataIsLoadedAC","setCurrentPageInTableAC","setLastPageInTableAC","setTotalInTableAC","_action$payload5","setTridiuumAppointmentsCountAC","setIsRestartingTridiuumParsersAC","secretaryDashboardReducer","CircleLoader","_ref$absolute","absolute","_ref$color","_ref$size","getSpinnerBorderSizeClassName","TridiumAppointmentsInfo","secretaryDashboard","loadTridiuumAppointmentsData","is_restarting_tridiuum_parsers","checkTridiuumAppointmentsDataWithTimeout","tridiumAppointmentsInfo","PageLoader","SyncIcon","btnRestartTridiuumParsers","Sidebar","sidebar","TabMate","defaultActiveKey","tabs","tabStyles","onSelect","activeKey","setActiveKey","Tab","tabsContainer","flexWrap","border","tab","eventKey","numberOfRecords","active","Row","Content","Pane","ImportantForTodayTable","table","ImportantForToday","tableNames","getPatientFullName","timeFrame","startDate","endDate","getDataForImportantForTodayCard","startOf","endOf","getTableNameFromKey","el","_el$provider","appointment_status","patient_name","therapist_name","first_visit","first_visit_date","count_visits","appointments_count","form_status","_el$provider2","credit_card","last_eligibility_check","date_created","deductible_met","deductible_remaining","insurance_pay","reference_number","_el$provider3","current_balance","preprocessed_balance","balance_after_transaction","co_payment","visit_copay","_el$provider4","_el$provider5","getTableData","ceil","LostPatients","NewPatients","NewLostPatients","getFullName","firstName","lastName","getPatientStatusData","status_updated_at","patient_status_updated_at","patient_creation_date","created_patient_date","count_calls","ringcentral_call_logs_count","date_of_last_call","last_ringcentral_call_log","caller","_el$last_appointment","_el$last_appointment2","last_appointment","date_of_last_visit","SecretaryDashboard","FilterMultipleSelect","setFilters","titleRef","optionsRef","showOptions","setShowOptions","groupedSources","reduce","groups","option","channelName","sourcesString","s","handleOptionChange","filterKey","newFilters","addOptionToFilter","removeOptionFromFilter","filterMultipleSelect","FilterIcon","arrow","allSourceIds","entries","channelId","_ref3$","includes","ArchivePatientModal","setComment","showHelpText","setShowHelpText","isLoadingArchive","setIsLoadingArchive","close","archive","archiveInquiry","res","ModalHeader","patientName","ModalBody","backgroundColor","BinIcon","InsuranceOption","innerProps","insurance","address","address_line_1","city","zip","DiagnosesSelect","searchDiagnosesText","setSearchDiagnosesText","diagnosesSelect","diagnose","full_name","inputSelect","selectedDiagnose","newDiagnoses","defaultTemplatesRow","pos","cpt","modifier_a","modifier_b","modifier_c","modifier_d","diagnose_pointer","isUserChangesDiagnosePointer","isUserChangesModifierA","isUserChangesCharge","isDiagnosePointerError","charge","days_or_units","patient_insurances_procedure_id","inquirable_id","auth_number","date_of_birth","sex","preferred_language_id","email","secondary_email","preferred_phone","visits_auth","visits_auth_left","address_2","provider_id","insurance_id","eff_start_date","eff_stop_date","subscriber_id","is_self_pay","self_pay","eligibility_payer_id","plan_name","templates","therapist_manage_timesheet","is_payment_forbidden","source_id","therapy_type_id","getSelectStyles","fontSize","control","baseStyles","isFocused","selectProps","boxShadow","valueContainer","fontWeight","overflow","zIndex","selectStyles","sexList","stateList","selectDefaultValue","getSourceValue","getSourceOptionValueAndLabel","getCptValue","getOptionValueAndLabel","valueKey","labelKey","selectedData","isArray","_step","_iterator","_createForOfIteratorHelper","n","done","f","datepickerTheme","createTheme","components","MuiInputBase","styleOverrides","MuiOutlinedInput","ownerState","focused","notchedOutline","DEDUCTIBLE_FIELD_NAME","DEDUCTIBLE_MET_FIELD_NAME","DEDUCTIBLE_REMAINING_FIELD_NAME","ExpandableForm","memo","setShow","formName","languageValue","utils","primaryProviderValue","providerList","primaryProvider","primary_provider","preferredPhoneValue","stateValue","insuranceValue","insurancesList","selectedInsurance","eligibilityPayerValue","eligibilityPayersList","eligibility_payer","selectedPayer","buttonText","loadMoreInsurances","NewPatientsDashboardApi","addedTemplateRow","handleInputNumberBlur","fieldValue","toString","formattedValue","formatNumberWithTwoDecimalPlaces","updatedFormData","updateDeductibleFieldsIfNeeded","newFormData","currentFieldValue","sum","toFixed","showFormButton","Select","selectedOption","language","isSearchable","onMenuScrollToBottom","providersList","providers","preferredPhone","Option","min","step","onBlur","onWheel","blur","inputNumber","LocalizationProvider","dateAdapter","AdapterDayjs","ThemeProvider","theme","DatePicker","dayjs","openTo","template","code","removeTemplateRow","DeleteIcon","PlusIcon","Patient","years","dateObject","yearsDifference","diff","formatDateToYears","getSexTitle","getStatusText","getStatusColor","ExistingPatientDialog","setSelectedPatient","existingPatientDialog","_e$target","loadMorePatients","processCardData","stage_id","has_cancelled_appointment","next_appointment","stage_changed_at","is_patient_created","registrationMethod","registration_method","nextAppointment","rescheduledAppointment","rescheduled_appointment","isArchived","is_archived","initialAppointmentIsCompleted","initial_appointment_is_completed","initial_survey_complete","second_survey_complete","onboarding_complete_comment","stageChangedAt","onboarding_date","onboarding_time","NO_ACTIVE_APPOINTMENT_REASON","ONBOARDING_NO_COMPLETED_REASON","APPOINTMENT_DATE_ALREADY_PASSED_REASON","AUTO_TRANSFER_REASON","getValidateError","columnRules","_columnRules","check","unix","getDisplayedProviderForInquiry","past_appointment_provider","AddPatientModal","setDataIsLoaded","showAddAdditionalPatientInformation","setShowAddAdditionalPatientInformation","showAddInsuranceInformation","setShowAddInsuranceInformation","showAddDiagnosisCodes","setShowAddDiagnosisCodes","showAddTemplateBillableLineItems","setshowAddTemplateBillableLineItems","searchPatientName","setSearchPatientName","selectedPatient","showExistingPatientDialog","setShowExistingPatientDialog","isLoadingSave","setIsLoadingSave","sourceValue","setSourceValue","acc","sourceOptions","setSourceOptions","isLoadingSource","setIsLoadingSource","requiredFields","errorText","forNewPatients","sexValue","registrationMethodValue","registration_method_id","therapyTypeValue","addCard","newCard","handleModalClose","_error$response","_i","_Object$entries","_Object$entries$_i","handleSourceInputChange","handleInputChange","handleCreateSource","sourceName","newSource","groupName","groupIndex","group","newOptions","fetchData","languagesRes","patientsRes","providersRes","insurancesRes","eligibilityPayersRes","insuranceProceduresRes","diagnosesRes","insurance_procedures","inquiries","insurance_plan","AddPatientIcon","patientInfo","onFocus","btnClearSelectedPatient","clearSelectedPatientIcon","maxDate","CreatableSelect","onCreateOption","isLoading","formatGroupLabel","marketing_activity","forms","field","CircleLoaderWithOverlay","FormRequestLogsTable","needTooltip","showSentAtTooltip","setShowSentAtTooltip","isFailure","rejected_at","bounced_at","soft_bounced_at","spam_at","unsub_at","deferral_at","hard_bounced_at","getFailureTitle","getFailureDate","getFormattedDateTime","printDocuments","documents","documentId","documentsId","docId","pop","documentBase64","resolve","printJS","printable","base64","onPrintDialogClose","downloadDocuments","documentsIds","doc","downloadPatientDocuments","original_document_name","removeChild","getPaymentForServiceTooltipText","paymentForServiceRequestItem","_paymentForServiceReq","payment_for_session_not_converted","charge_for_cancellation","other_charges_price","other_charges","tableCaption","tableLogs","eventFailed","eventSucceed","sent_at","paymentForServiceLogTooltip","filled_at","send_by","sent_to_email","tdActions","btnTableAction","FontAwesomeIcon","faDownload","faPrint","FormListInput","listData","setListData","inputValue","setInputValue","getMaxId","idList","max","addListItem","newListData","formListInput","formListInputField","onKeyDownCapture","formListInputBtn","faPlus","formTagList","formTagListItem","formTag","formTagText","formTagRemove","faXmark","getInquirableFullname","ConfirmSendingDocumentRequestModal","selectedFormsData","sendFormsMethod","onSuccessfulSend","isSendMethodEmail","isSendMethodPhone","getFormattedPhone","rawPhone","setEmail","isLoadingSendForms","setIsLoadingSendForms","formattedPhone","isValidEmail","dialogClassName","modalDialog","form","unordered","exchange_with","CheckIcon","formGroup","formGroupHasError","formLabel","formInput","formErrors","borderTop","send_via_email","send_via_sms","sendPatientForms","fieldsToValidate","requiredWith","sendFormsMethods","MailIcon","PatientFormsModal","_patientForms$payment","_patientForms$confide","_patientForms$credit_","_patientForms$support","_patientForms$telehea","patientForms","setPatientForms","isLoadingPatientForms","setIsLoadingPatientForms","isAllFormsChecked","setIsAllFormsChecked","initialPatientForms","setInitialPatientForms","payment_for_service","confidential_information","supporting_documents","license","setSendFormsMethod","showSendFormsDropdown","setShowSendFormsDropdown","showConfirmSendingDocumentRequestModal","setShowConfirmSendingDocumentRequestModal","formsErrors","isFormsInvalid","fetchPatientForms","requests","is_required","patient_can_skip_form","visible_in_modal","visible_in_tab","isOpened","primary_insurance","setFormDataField","needToValidate","credit_card_on_file","telehealth","setPatientFormsProperty","property","newPatientForms","_i2","_Object$keys","CaretIcon","ChevronDown","noValidate","SourceTag","sourceTag","sourceTageLarge","ThreeDotsMenu","onAction","showMenu","setShowMenu","dotsRef","menuRef","dotsIcon","DotsVerticalIcon","menuDialog","PatientLeadDocumentComment","systemComment","document_uploader","full_admin_name","document_type","PatientAlertComment","InitialSurveyCompleteComment","provider_name_from_appointment","comment_metadata","OnboardingCompleteComment","DefaultComment","additionalInfo","appointmentDate","visitReason","visit_reason","newAppointmentDate","new_appointment","old_time","new_time","old_value","new_value","SecondSurveyCompleteComment","PatientDetailsModal","_selectedCardData$nex","_selectedCardData$com3","_selectedCardData$ins","dateString","navigate","commentsObserverRef","dotsIconRef","sendFormDialogRef","commentRef","commentsPage","setCommentsPage","commentsPageCount","setCommentsPageCount","newComment","setNewComment","showSendFormDialog","setShowSendFormDialog","isLoadingComments","setIsLoadingComments","commentIsSaving","setCommentIsSaving","isLoadingAdditionalComments","setIsLoadingAdditionalComments","isLoadingCreatePatient","setIsLoadingCreatePatient","dateOfBirth","age","birthDate","nextAppointmentDateTime","displayedProvider","nextAppointmentType","threeDotsText","clearComment","innerHTML","localStorage","removeItem","_selectedCardData$com","newPatientsDashboardApi","_localStorage$getItem","getItem","_localStorage$getItem2","fetchAdditionalComments","disconnect","trigger","selectTemplate","Tribute","attach","attachTributeToComment","setItem","_localStorage$getItem3","_localStorage$getItem4","scrollToCommentById","commentElement","scrollIntoView","behavior","block","lastCommentIndex","_selectedCardData$com2","getCommentComponent","DetailsIcon","commentTextarea","contentEditable","clip","mdiAttachment","selectedFile","files","FormData","append","uuidv4","new_file_id","patientDetails","ChartIcon","CreatePatientIcon","CallIcon","HexCrossIcon","info","therapy_type","_selectedCardData$onb","adminName","createdAtTime","_selectedCardData$ale","getOnboardingInfo","MoveCardContext","fromLaneTitle","toLaneTitle","handleConfirmCardMoveAcrossLanes","handleModalConfirm","resetModalData","handleModalCancel","ChangeStageIcon","PAYMENT_FOR_SERVICE_FORM_NAME","CONFIDENTIAL_INFORMATION_FORM_NAME","initialForms","initialOnboardingFormData","MoveToAppointmentScheduledStageModal","setForms","onboardingFormData","setOnboardingFormData","allFormsCheckbox","setAllFormsCheckbox","requireCreditCardCheckbox","setRequireCreditCardCheckbox","sendViaEmail","setSendViaEmail","sendViaSms","setSendViaSms","exchangeWithName","setExchangeWithName","openTimepicker","setOpenTimepicker","isValidPhoneNumber","send_via","confidentialInformationForm","exchange_with_name","paymentForServiceForm","getFormData","onboarding_data","changePaymentFormServiceMetadata","updatedForms","clearErrorsArray","initPatientData","_moveCardData$cardDet","primaryInsurance","initExchangeWithInForms","batchChangePaymentFormServiceMetadata","patientAlert","exchangeWith","removeEchangeWithValue","onOpen","onClose","minDate","slotProps","CardMoveAcrossLanesModal","CustomOption","level","optionStyle","paddingLeft","isGroupTitle","optionComponent","groupTitle","childOption","CustomSelect","handleOptionClick","selectInput","FileTypeSelectorModal","selectedTypeId","setSelectedTypeId","visibleOnlyForAdmin","setVisibleOnlyForAdmin","setIsLoading","formattedData","node","result","processNode","currentNode","childs","nestedOptions","convertToFormat","selectedTypeValue","findDocumentTypeById","foundOption","deleteDocument","delete","onbeforeunload","resetState","document_id","other_document_type","visible_only_for_admin","handleSuccessChangeType","_res$data","SearchInput","searchIcon","searchInput","FormStatusIndicator","FORMS_NOT_SEND","FORMS_SEND","FORMS_SIGNED","statusData","FormsNotSendIcon","FormsSendIcon","FormsSignedIcon","DurationIndicator","formattedDate","daysOnTheStage","currentDateTime","duration","days","getDaysOnTheStage","daysOnTheStageTooltipText","singular","plural","daysText","getDaysOnTheStageTooltipText","durationIndicator","PatientCard","isNextAppointmentStatusTooltipVisible","setNextAppointmentStatusTooltipVisible","showFormStatusIndicator","generatePatientName","nextAppointmentTooltipHtml","html","oldAppointmentDateTime","getNextAppointmentTooltipHtml","getSexLabel","tooltipProviders","patientCard","archived","threeDotsButton","patientStatus","mdiFileDocumentCheck","therapistInfo","providerName","StethoscopeIcon","nexAppointmentDate","CustomLaneHeader","currentLane","laneHeader","EnhancedTrelloBoard","eventBusHandle","handleDragEnd","onLaneScroll","Card","LaneHeader","Board","gap","cardDraggable","hideCardDeleteIcon","laneStyle","NewPatientsDashboard","boardData","setBoardData","isLoadedData","setIsLoadedData","isShowArchived","searchValueState","setSearchValueState","filtersState","setFiltersState","serializeLaneData","uploadInquiries","boardLanes","promisesArray","promise","search_text","_response$data","serializedData","loadInitialData","registrationMethodsPromise","channelsPromise","sourcesPromise","documentTypesPromise","providersDatasetPromise","therapyTypesPromise","callNumbersPromise","providersDataset","callNumbersResponse","sourceIds","AppReducer","therapy_types","handleLaneScroll","loadMoreInquiries","updateBoardData","newLanes","prevBoardData","selectedCard","selectedCardId","_selectedCard","processSelectedCard","JSON","stringify","newData","showButtonIsDisabled","EditIcon","sourceLaneId","targetLaneId","columnRule","errorMessage","AreYouStillHereModal","showModalTimeoutId","logoutTimeoutId","modalHasShownState","setModalHasShownState","modalHasShown","show_modal_timeout_mins","showModalTimeout","storageEventListener","parse","newValue","resetTimer","setupTimers","debounceResetTimerOnServer","startTimer","handleShowModalTimeout","clearTimeout","handleLogoutTimeout","logoutTimeout","getSupervisees","supervisees","setSuperviseesAC","supervisorDashboardReducer","SuperviseeBlock","supervisee","supervisorDashboard","patients","patient_insurance","date_of_assignment","Accordion","accordion","deleted_at","SupervisorDashboard","supervisorsList","setSupervisorsList","selectedSupervisorId","setSelectedSupervisorId","userIsProvider","getContentForSupervisor","selectedSupervisorValue","supervisor","getSelectedSupervisorValue","supervisor_id","selectSupervisorBlock","CrossSvg","handleClick","focusable","changeReauthorizationRequestFormStage","createLog","saveFutureInsuranceReauthorizationData","SendDocumentByFaxModal","reauthorizationRequestsDashboard","documentDefaultFaxesList","submittedReauthorizationRequestForms","selectedFaxInitialValue","selectedFax","setSelectedFax","customPhone","setCustomPhone","getDocumentModel","parts","updateTableData","ReauthorizationRequestsDashboardReducer","sendByFaxDialog","fax","handleCustomPhoneInput","ModalFooter","newDocumentShared","sharedDocuments","document_shared","send_method","sendDocumentFax","document_model","patient_documents_id","SendDocumentByEmailModal","documentDefaultEmailsList","selectedEmailInitialValue","selectedEmail","setSelectedEmail","customEmail","setCustomEmail","customPassword","setCustomPassword","getSharedLinkPassword","password","sendByEmailDialog","sendMethod","sendDocumentEmail","shared_link_password","SaveLogModal","confirmClick","StageChangeHistoryModal","tableWrapper","ActionsButton","showSendByEmailModal","setShowSendByEmailModal","showSendByFaxModal","setShowSendByFaxModal","showEmailLogModal","setShowEmailLogModal","showFaxLogModal","setShowFaxLogModal","showLogPhoneCallModal","setShowLogPhoneCallModal","showStageHistory","setShowStageHistory","handleCreateLog","log_type","newTableData","newLog","newLogs","createLogModals","actionsButton","mdiDotsVertical","menuItem","documentModel","aws_document_name","modal","newStageId","stages","oldStageName","stage","newStageName","font","ApprovalReceivedStageModal","parentCallback","inputBackgroundColor","handleUpdateClick","AuthUpdatedStageModal","getInitialFormData","future_auth_number_data","StageSelect","selectedStages","showCommentModal","setShowCommentModal","showApprovalReceivedStageModal","setShowApprovalReceivedStageModal","showAuthUpdatedStageModal","setShowAuthUpdatedStageModal","selectedStageId","setSelectedStageId","handleSaveCommentClick","setStage","handleChangeStageToApprovalReceived","authNumberData","stage_changed_on","stage_comment","handleChangeStageToAuthUpdated","auth_number_data","insurance_authorization_number","insurance_visits_auth","insurance_visits_auth_left","insurance_eff_start_date","insurance_eff_stop_date","newRequestForm","_args4","customSelectStyles","top","menuList","maxHeight","indicatorsContainer","indicatorSeparator","stageIsDisabled","_requestForm$auth_num2","isOverdue","_requestForm$auth_num","reauthorization_notification_days_count","reauthorization_notification_visits_count","daysDiff","isAlmostOverdue","stageValue","currentStage","getCurrentStageValue","isDisabled","stageSelect","authNumber","visitsAuth","effStartDate","effStopDate","tooltipFieldName","getHelpIconWithTooltip","InsuranceAuthorizationNumber","insurance_requires_verification","getAuthorizationNumberTooltipText","overdue","almostOverdue","CreateRequestButton","getInsuranceAuthorizationNumberData","is_verification_required","updateSubmittedReauthorizationRequestFormsTableData","newRequest","_reauthorizationReque","newReauthorizationRequestForm","secondary_insurance","submitted_by","submitted_at","createReauthorizationRequestForm","upcomingReauthorizationRequests","can_create_reauthorization_form","updateUpcomingReauthorizationRequestsTableData","tableActionButton","patientStatuses","requires_reauthorization_document","therapistName","selectedPatientStatuses","expirationsList","selectedExpiration","searchText","_cell$row$original$do","charAt","toUpperCase","firstElement","submittedBy","setPatientStatusesAC","setProvidersListAC","setDocumentDefaultFaxesListAC","setDocumentDefaultEmailsListAC","setUpcomingReauthorizationTherapistNameAC","setUpcomingReauthorizationSelectedPatientStatusesAC","setUpcomingReauthorizationExpirationsListAC","setUpcomingReauthorizationSelectedExpirationAC","setUpcomingReauthorizationSearchTextAC","setRequestFormStagesAC","setRequestFormSubmittedByAC","setRequestFormSelectedPatientStatusesAC","setRequestFormSelectedStagesAC","setRequestFormSearchTextAC","reauthorizationRequestsDashboardReducer","UpcomingReauthorizationRequests","submittedBySelectStyles","paddingRight","getRowClassName","getCanCreateReauthorizationForm","insurance_reauthorization_request_forms","fetchTableData","patient_statuses","expiration","getParams","_el$last_appointment$","reauhtorization_request_document","portalDOM","createPortal","submittedBySelect","cross","submittedByCross","searchCross","isMulti","closeMenuOnSelect","btnFetchTableData","SubmittedReauthorizationRequestForms","getSubmittedByValue","submitter","_submitter$meta","getSubmittedAtValue","getSendMethod","shared_method","getSentAt","ReauthorizationRequestsDashboardReduced","future_insurance_reauthorization_data","ReauthorizationRequestsDashboard","currentTableName","loadingData","responses","borderRadius","tabKey","defaultSelectStyles","ApprovePatientNoteUnlockModal","requestId","isLoadingConfirm","setIsLoadingConfirm","doctorsRequestsDashboard","patientNoteUnlockRequests","request_id","acceptPatientNoteUnlockRequest","removeItemFromTableDataByIdAC","DeclinePatientNoteUnlockModal","setReason","reasonError","setReasonError","declinePatientNoteUnlockRequest","showApprovePatientNoteUnlockModal","setShowApprovePatientNoteUnlockModal","showDeclinePatientNoteUnlockModal","setShowDeclinePatientNoteUnlockModal","ApprovePatientRemovalModal","acceptPatientRemovalRequest","DeclinePatientRemovalModal","declinePatientRemovalRequest","showApprovePatientRemovalModal","setShowApprovePatientRemovalModal","showDeclinePatientRemovalModal","setShowDeclinePatientRemovalModal","filtersData","requestStatusesData","requestStatuses","patientRemovalRequests","request_status","PatientRemovalRequestsActionsButton","patients_id","PatientNoteUnlockRequestsActionsButton","setRequestStatusesFilterInTable","_action$payload6","_action$payload7","PatientRemovalRequests","getPatientRemovalRequestsList","request_statuses","_el$patient","_filtersData$requestS","_el$approver","_el$approver2","_el$approver2$meta","requested_at","approver","approver_comment","approved_at","multiSelectStyles","selectBlock","dashboardTableWrapper","PatientNoteUnlockRequests","getPatientNoteUnlockRequestsList","progress_note","patient_note","DoctorsRequestsDashboard","AssignPatientButton","patientTransfersDashboard","unassignedPatients","assignData","archiveData","isLoadingAssign","loadingPatients","setUnassignedPatientsAssignDataPatientId","ArchivePatientButton","setUnassignedPatientsArchiveDataPatientId","UnassignPatientButton","assignedPatients","transferData","isLoadingUnassign","unassignData","isLoadingTransfer","setAssignedPatientsUnassignDataPatientIdAC","TransferPatientButton","setAssignedPatientsTransferDataPatientIdAC","statusesData","statuses","insurances","dateOfUnassignmentData","intervals","dateOfPatientCreationData","filteredTableData","isLoaded","old_provider","date_of_unassignment","date_of_patient_creation","show_archived_patients","setUserDataIsOnlyAdmin","setUserDataIsLoadedIsOnlyAdmin","setFiltersDataProvidersDataProvidersAC","setFiltersDataProvidersDataIsLoadingAC","setFiltersDataStatusesDataStatusesAC","setFiltersDataStatusesDataIsLoadingAC","setFiltersDataInsurancesDataInsurancesAC","setFiltersDataInsurancesDataIsLoadingAC","setAssignedPatientsTableDataAC","_item$patient_has_pro","_item$insurance","_item$insurance2","patient_has_providers","providers_id","patient_insurance_id","patient_sex","patient_age","missing_notes_count","drafts_count","visits_count","upcoming_appointments_count","last_visit_date","next_appointment_date","setAssignedPatientsFilteredTableDataAC","updateAssignedPatientsFilteredTableDataAC","searchInputLowerCase","filterStatusesLabels","setAssignedPatientsCurrentPageAC","setAssignedPatientsIsLoadingAC","setAssignedPatientsIsLoadedAC","setAssignedPatientsFiltersProviderAC","setAssignedPatientsFiltersSearchAC","setAssignedPatientsFiltersStatusesAC","setAssignedPatientsFiltersInsuranceAC","addAssignedPatientsUnassignDataLoadingPatientsAC","removePatientIdFromAssignedPatientsUnassignDataLoadingPatientsAC","addAssignedPatientsTransferDataLoadingPatientsAC","removePatientIdFromAssignedPatientsTransferDataLoadingPatientsAC","deletePatientFromAssignedPatientsTableDataAC","setUnassignedPatientsTableDataAC","_item$patient$insuran","_item$patient$insuran2","_item$old_provider","_item$old_provider2","middle_name","unassigned_at","setUnassignedPatientsFilteredTableDataAC","setUnassignedPatientsCurrentPageAC","setUnassignedPatientsIsLoadingAC","setUnassignedPatientsFiltersOldProviderAC","setUnassignedPatientsFiltersSearchAC","setUnassignedPatientsFiltersStatusesAC","setUnassignedPatientsFiltersInsuranceAC","setUnassignedPatientsFiltersDateOfUnassignAC","setUnassignedPatientsFiltersDateOfPatientCreationAC","setUnassignedPatientsFiltersShowArchivedPatientsAC","updateUnassignedPatientsFilteredTableDataAC","minDateOfPatientUnassignment","minDateOfPatientCreation","addPatientIdToUnassignedPatientsArchiveDataLoadingPatients","removePatientIdFromUnassignedPatientsArchiveDataLoadingPatients","addPatientIdToUnassignedPatientsAssignDataLoadingPatients","removePatientIdFromUnassignedPatientsAssignDataLoadingPatients","deletePatientFromUnassignedPatientTableData","patientTransfersDashboardReducerReducer","getPatientTransfers","UnassignPatientInfo","_supervisor$provider","patientData","otherProviders","UnassignPatientHelpText","warnings","UnassignPatientAlert","UnassignPatientModal","setIsLoadingUnassign","unassignAllProviders","setUnassignAllProviders","supervisee_id","chart_read_only","hasDraftsAndProgressNotes","canUnassignProvider","handleClose","formCheck","formCheckInput","formCheckLabel","providerId","unassignProviderFromPatient","getBorderStyle","TransferPatientModal","_providers$filter$","newProviderId","setNewProviderId","newProviderName","oldProvider","newProviderIdSelectStyles","hasError","oldProviderId","old_provider_id","new_provider_id","transferPatient","AssignedPatients","_filters$insurance","paginationParams","statusesSelectStyles","insuranceSelectStyles","selectCross","commentError","setCommentError","status_id","archivePatientById","AssignPatientModal","setIsLoadingAssign","setProviderId","providerIdError","setProviderIdError","providerIdSelectStyles","assignProviderToPatient","UnassignedPatients","_filters$old_provider","_filters$old_provider2","marginTop","PatientTransfersDashboard","with_trashed","App","useLocation","URLSearchParams","updateQueryParams","Routes","Route","SvgSuccess","SvgError","fillRule","clipRule","Notification","dequeueNotification","Toast","toast","toastError","delay","autohide","toastHeader","Error","toastIcon","Success","toastHeaderTitle","toastBody","NotificationsContainer","notificationsQueue","ToastContainer","notification","NotificationsProvider","setNotificationsQueue","notifications","queue","rootReducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","prepend","thunkMiddleware","ReactDOM","createRoot","BrowserRouter"],"mappings":"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","file":"static/js/main.055f7a00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"patientCard\":\"PatientCard_patientCard__2NLBI\",\"patientInfo\":\"PatientCard_patientInfo__1Molq\",\"patientName\":\"PatientCard_patientName__2Z6Ey\",\"patientStatus\":\"PatientCard_patientStatus__GOXVJ\",\"dates\":\"PatientCard_dates__2N6WQ\",\"therapistInfo\":\"PatientCard_therapistInfo__3dqu2\",\"providerName\":\"PatientCard_providerName__1N96q\",\"active\":\"PatientCard_active__3Bo3t\",\"completed\":\"PatientCard_completed__2grnu\",\"rescheduled\":\"PatientCard_rescheduled__4KkJB\",\"archived\":\"PatientCard_archived__3-ANZ\",\"threeDotsButton\":\"PatientCard_threeDotsButton__2vqRF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"diagnosesSelect\":\"DiagnosesSelect_diagnosesSelect__2KMpF\",\"header\":\"DiagnosesSelect_header__2LKmf\",\"diagnose\":\"DiagnosesSelect_diagnose__14te_\",\"inputSelect\":\"DiagnosesSelect_inputSelect__3hvAW\",\"arrow\":\"DiagnosesSelect_arrow__2uzA5\",\"options\":\"DiagnosesSelect_options__2gPgB\",\"option\":\"DiagnosesSelect_option__2JF1R\",\"noData\":\"DiagnosesSelect_noData__kZu63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableCaption\":\"FormRequestLog_tableCaption__voV77\",\"tableLogs\":\"FormRequestLog_tableLogs__1C9lY\",\"empty\":\"FormRequestLog_empty__D2oc3\",\"tdActions\":\"FormRequestLog_tdActions__yXghf\",\"buttons\":\"FormRequestLog_buttons__3S5yZ\",\"btnTableAction\":\"FormRequestLog_btnTableAction__LQEPo\",\"eventSucceed\":\"FormRequestLog_eventSucceed__2EC1A\",\"eventFailed\":\"FormRequestLog_eventFailed__mOhCu\",\"paymentForServiceLogTooltip\":\"FormRequestLog_paymentForServiceLogTooltip__48o27\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsButton\":\"ActionsButton_actionsButton__2L5I1\",\"menuDialog\":\"ActionsButton_menuDialog__3vech\",\"menuItem\":\"ActionsButton_menuItem__1ochd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"showFormButton\":\"ExpandableForm_showFormButton__GwbzT\",\"inputNumber\":\"ExpandableForm_inputNumber__sY3Np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formListInput\":\"FormListInput_formListInput__2p7LT\",\"formListInputField\":\"FormListInput_formListInputField__3955K\",\"has-error\":\"FormListInput_has-error__zlDRS\",\"formListInputBtn\":\"FormListInput_formListInputBtn__2pOim\",\"hidden\":\"FormListInput_hidden__1ltzz\",\"formTagList\":\"FormListInput_formTagList__Aewyx\",\"formTagListItem\":\"FormListInput_formTagListItem__3UiWF\",\"formTag\":\"FormListInput_formTag__17bFe\",\"formTagText\":\"FormListInput_formTagText__2IvKg\",\"formTagRemove\":\"FormListInput_formTagRemove__qr9MK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterMultipleSelect\":\"FilterMultipleSelect_filterMultipleSelect__1z4H6\",\"title\":\"FilterMultipleSelect_title__3m_nD\",\"arrow\":\"FilterMultipleSelect_arrow__e8SLX\",\"showOptions\":\"FilterMultipleSelect_showOptions__20Kny\",\"options\":\"FilterMultipleSelect_options__2UB3z\",\"option\":\"FilterMultipleSelect_option__2dNob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toast\":\"Notifications_toast__2w3Hf\",\"toastError\":\"Notifications_toastError__2NszH\",\"toastIcon\":\"Notifications_toastIcon__1tO8H\",\"toastHeader\":\"Notifications_toastHeader__2cgQ7\",\"toastBody\":\"Notifications_toastBody__3M3Te\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messagesCard\":\"Messages_messagesCard__d1Ni5\",\"title\":\"Messages_title__thL6O\",\"text\":\"Messages_text__1o3ez\",\"loader\":\"Messages_loader__3zis5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"indicator\":\"AppointmentScheduledModal_indicator__34kt5\",\"green\":\"AppointmentScheduledModal_green__2oeyA\",\"yellow\":\"AppointmentScheduledModal_yellow__3SpZT\",\"red\":\"AppointmentScheduledModal_red__18n22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tabsContainer\":\"TabMate_tabsContainer__14oQy\",\"tabs\":\"TabMate_tabs__jGO6x\",\"tab\":\"TabMate_tab__1L9qO\",\"active\":\"TabMate_active__2-ePC\",\"title\":\"TabMate_title__lgYNs\",\"text\":\"TabMate_text__1JG9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stageSelect\":\"StageSelect_stageSelect__3oR2k\",\"tooltipFieldName\":\"StageSelect_tooltipFieldName__3BVgX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardCard\":\"SecretaryDashboard_dashboardCard__2EBUf\",\"title\":\"SecretaryDashboard_title__2USlT\",\"dashboardTableWrapper\":\"SecretaryDashboard_dashboardTableWrapper__1U5kw\",\"tabLink\":\"SecretaryDashboard_tabLink__2oSvD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helpIcon\":\"InsuranceAuthorizationNumber_helpIcon__3gX75\",\"almostOverdue\":\"InsuranceAuthorizationNumber_almostOverdue__2S0xK\",\"overdue\":\"InsuranceAuthorizationNumber_overdue__gUXln\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"AddPatientModal_body__2kzKN\",\"patientInfo\":\"AddPatientModal_patientInfo__p_Ih-\",\"forms\":\"AddPatientModal_forms__2FHQO\",\"clearSelectedPatientIcon\":\"AddPatientModal_clearSelectedPatientIcon__2f7Yy\",\"btnClearSelectedPatient\":\"AddPatientModal_btnClearSelectedPatient__G0bdF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardCard\":\"PatientTransfersDashboard_dashboardCard__33CnN\",\"title\":\"PatientTransfersDashboard_title__2oqnx\",\"dashboardTableWrapper\":\"PatientTransfersDashboard_dashboardTableWrapper__2a_Ft\",\"selectBlock\":\"PatientTransfersDashboard_selectBlock__1eR1G\",\"disabled\":\"PatientTransfersDashboard_disabled__1JAOL\",\"cross\":\"PatientTransfersDashboard_cross__1wkJR\",\"selectCross\":\"PatientTransfersDashboard_selectCross__jUZxe\",\"searchInput\":\"PatientTransfersDashboard_searchInput__2FAOk\",\"formCheck\":\"PatientTransfersDashboard_formCheck__1F_WQ\",\"formCheckInput\":\"PatientTransfersDashboard_formCheckInput__1dnWT\",\"formCheckLabel\":\"PatientTransfersDashboard_formCheckLabel__1kTI7\",\"tableActionButton\":\"PatientTransfersDashboard_tableActionButton__1R1Ot\",\"formGroup\":\"PatientTransfersDashboard_formGroup__2j1pS\",\"formInput\":\"PatientTransfersDashboard_formInput__3cCt5\",\"formLabel\":\"PatientTransfersDashboard_formLabel__60bqV\",\"formGroupHasError\":\"PatientTransfersDashboard_formGroupHasError__14tjG\",\"formErrors\":\"PatientTransfersDashboard_formErrors__3RCtf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"InputSearch_box__25p-I\",\"search\":\"InputSearch_search__tKINX\",\"clear\":\"InputSearch_clear__3uRSS\",\"input\":\"InputSearch_input__1vrSU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logs\":\"FaxLogs_logs__1p0N4\",\"singleLog\":\"FaxLogs_singleLog__22bbD\",\"test\":\"FaxLogs_test__3gTdF\",\"collapse\":\"FaxLogs_collapse__13zSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle-loader\":\"CircleLoader_circle-loader__1hgea\",\"circle-loader--absolute\":\"CircleLoader_circle-loader--absolute__3-XG1\",\"spinner-border-small\":\"CircleLoader_spinner-border-small__1tVqi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"patient\":\"Patient_patient__2U3f1\",\"name\":\"Patient_name__3hViN\",\"email\":\"Patient_email__MnDNg\",\"status\":\"Patient_status__3YetR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectInput\":\"CustomSelect_selectInput__14niP\",\"arrow\":\"CustomSelect_arrow__1lukE\",\"options\":\"CustomSelect_options__3u7fe\",\"isFocused\":\"CustomSelect_isFocused__WuDU2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FormStatusIndicator_status__1mGrJ\",\"notSend\":\"FormStatusIndicator_notSend__1vyOZ\",\"send\":\"FormStatusIndicator_send__1wa2J\",\"signed\":\"FormStatusIndicator_signed__3MSZk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PatientDetailsModal_header__19AaK\",\"age\":\"PatientDetailsModal_age__gLxVK\",\"patientDetails\":\"PatientDetailsModal_patientDetails__2MxGQ\",\"title\":\"PatientDetailsModal_title__3koep\",\"info\":\"PatientDetailsModal_info__1KXzm\",\"field\":\"PatientDetailsModal_field__VgSzd\",\"value\":\"PatientDetailsModal_value__1ACVD\",\"fieldTag\":\"PatientDetailsModal_fieldTag__271LT\",\"sendFormDialog\":\"PatientDetailsModal_sendFormDialog__1C6dZ\",\"commentTextarea\":\"PatientDetailsModal_commentTextarea__NzQ72\",\"clip\":\"PatientDetailsModal_clip__2TlV7\",\"active\":\"PatientDetailsModal_active__2kBTg\",\"completed\":\"PatientDetailsModal_completed___srvM\",\"rescheduled\":\"PatientDetailsModal_rescheduled__2K7vJ\",\"comment\":\"PatientDetailsModal_comment__19khK\",\"name\":\"PatientDetailsModal_name__1fMpP\",\"date\":\"PatientDetailsModal_date__2zYch\",\"systemComment\":\"PatientDetailsModal_systemComment__2PJwL\",\"content\":\"PatientDetailsModal_content__s2XIS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"ToggleSwitch_default__1wA2v\",\"toggleButton\":\"ToggleSwitch_toggleButton__pdV0L\",\"activeButton\":\"ToggleSwitch_activeButton__31Qg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dot-1\":\"DataIsLoading_dot-1__3uPds\",\"dot-animation\":\"DataIsLoading_dot-animation__1qa5S\",\"dot-2\":\"DataIsLoading_dot-2__f1PbM\",\"dot-3\":\"DataIsLoading_dot-3__3IIHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"FaxToolbar_box__Sky7r\",\"counter\":\"FaxToolbar_counter__1dVfT\",\"zoom\":\"FaxToolbar_zoom__iSwx3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"insurance\":\"InsuranceOption_insurance__P0V4f\",\"name\":\"InsuranceOption_name__vjWSS\",\"address\":\"InsuranceOption_address__37YS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"optionComponent\":\"CustomOption_optionComponent__el8zx\",\"option\":\"CustomOption_option__1VaZg\",\"groupTitle\":\"CustomOption_groupTitle__3tpwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"SuperviseeBlock_header__1t_Lz\",\"body\":\"SuperviseeBlock_body__rRieW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendByEmailDialog\":\"SendDocumentByEmailModal_sendByEmailDialog__2ImwB\",\"label\":\"SendDocumentByEmailModal_label__1UDCF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppMainLayout_header__1EZBb\",\"main\":\"AppMainLayout_main__2OOCG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ButtonOptions_menu__2-6B1\",\"link\":\"ButtonOptions_link__38_Ec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Table_default__1ubRV\",\"extendedHeight\":\"Table_extendedHeight__1TcC_\",\"faxes\":\"Table_faxes__2xZAI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scroll\":\"FaxView_scroll__2mXlD\",\"canvas\":\"FaxView_canvas__1G-8i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tridiumAppointmentsInfo\":\"TridiumAppointmentsInfo_tridiumAppointmentsInfo__3oEdo\",\"btnRestartTridiuumParsers\":\"TridiumAppointmentsInfo_btnRestartTridiuumParsers__S3OcF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"StarRating_star__3XRcL\",\"starHover\":\"StarRating_starHover__OWGjB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"existingPatientDialog\":\"ExistingPatientDialog_existingPatientDialog__1UaHS\",\"noData\":\"ExistingPatientDialog_noData__1ITmG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sourceTag\":\"SourceTag_sourceTag__ZWJds\",\"sourceTageLarge\":\"SourceTag_sourceTageLarge__1Xzd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dotsIcon\":\"ThreeDotsMenu_dotsIcon__2Ap7E\",\"menuDialog\":\"ThreeDotsMenu_menuDialog__2YATw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchIcon\":\"SearchInput_searchIcon__1fjdD\",\"searchInput\":\"SearchInput_searchInput__2OZ7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"laneHeader\":\"CustomLaneHeader_laneHeader__1cujr\",\"label\":\"CustomLaneHeader_label__1PpS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Faxes_container__3okwz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3SUcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helpIcon\":\"HelpIcon_helpIcon__1083V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"helpIcon\":\"PatientStatusDateTooltip_helpIcon__38Ygs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callButton\":\"CallButtonWithModals_callButton__2ggC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"CircleLoaderWithOverlay_overlay__2ZwUZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalDialog\":\"PatientFormsModal_modalDialog__3nVIu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"durationIndicator\":\"DurationIndicator_durationIndicator__p5hkM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectSupervisorBlock\":\"SupervisorDashboard_selectSupervisorBlock__131O5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sendByFaxDialog\":\"SendDocumentByFaxModal_sendByFaxDialog__3E-70\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"StageChangeHistoryModal_tableWrapper__2IWBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableActionButton\":\"CreateRequestButton_tableActionButton__2zDKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboardCard\":\"DoctorsRequestsDashboard_dashboardCard__1gQ0g\",\"title\":\"DoctorsRequestsDashboard_title__uYPPt\",\"dashboardTableWrapper\":\"DoctorsRequestsDashboard_dashboardTableWrapper__1gxyv\",\"tabLink\":\"DoctorsRequestsDashboard_tabLink__1FxmA\",\"formGroup\":\"DoctorsRequestsDashboard_formGroup__3CbPm\",\"formInput\":\"DoctorsRequestsDashboard_formInput__1vro2\",\"formLabel\":\"DoctorsRequestsDashboard_formLabel__2y7kb\",\"formGroupHasError\":\"DoctorsRequestsDashboard_formGroupHasError__43eAE\",\"formErrors\":\"DoctorsRequestsDashboard_formErrors__2Sxu0\",\"tableActionButton\":\"DoctorsRequestsDashboard_tableActionButton__2FOkG\",\"searchInput\":\"DoctorsRequestsDashboard_searchInput__1AtvD\",\"selectBlock\":\"DoctorsRequestsDashboard_selectBlock__3vIR5\",\"disabled\":\"DoctorsRequestsDashboard_disabled__2d4Z6\",\"actionsButton\":\"DoctorsRequestsDashboard_actionsButton__RMhs-\",\"menuDialog\":\"DoctorsRequestsDashboard_menuDialog__XIdKT\",\"menuItem\":\"DoctorsRequestsDashboard_menuItem__1nOJw\"};","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgMinus(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 17,\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.6666 8.49992C12.6666 8.86811 12.3682 9.16659 12 9.16659H3.99998C3.63179 9.16659 3.33331 8.86811 3.33331 8.49992C3.33331 8.13173 3.63179 7.83325 3.99998 7.83325H12C12.3682 7.83325 12.6666 8.13173 12.6666 8.49992Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMinus);\nexport default __webpack_public_path__ + \"static/media/minus.9f0ca1df.svg\";\nexport { ForwardRef as ReactComponent };","export const STILL_HERE_MODAL_TIMEOUT = 3000;\r\n\r\nexport const LOGOUT_TIMEOUT_IF_MODAL_OPEN = 600;\r\n\r\nexport const ADMIN_ROLE_ID = 1;\r\n\r\nexport const SECRETARY_ROLE_ID = 2;\r\n\r\nexport const PROVIDER_ROLE_ID = 3;\r\n\r\nexport const ROW_NUMBER_COLUMN = \"row_number\";\r\n\r\nexport const ACTIVE_APPOINTMENT_TYPE = \"active\";\r\n\r\nexport const RESCHEDULED_APPOINTMENT_TYPE = \"rescheduled\";\r\n\r\nexport const DEFAULT_CANCELLATION_FEE = 100;\r\n","import classNames from \"classnames\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport \"./index.scss\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nconst BurgerButton = ({ click, on, setRef }) => {\r\n    const ref = useRef();\r\n\r\n    useEffect(() => {\r\n        setRef(ref);\r\n    }, []);\r\n    return (\r\n        <div onClick={click} className=\"burger-button\" ref={ref}>\r\n            <Navbar.Toggle\r\n                className=\"shadow-none\"\r\n                aria-controls=\"basic-navbar-nav\">\r\n                <div className={classNames(\"burger-icon\", on && \"show\")}>\r\n                    <div className=\"bar\"></div>\r\n                    <div className=\"bar\"></div>\r\n                    <div className=\"bar\"></div>\r\n                </div>\r\n            </Navbar.Toggle>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BurgerButton;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Container, Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { getMenuList } from \"../../api/common/navBar\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { PROVIDER_ROLE_ID } from \"../../constants\";\r\nimport BurgerButton from \"./components/BurgerButton\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport \"./index.scss\";\r\n\r\nconst NavBar = () => {\r\n    const { user } = useSelector((state) => state.app);\r\n\r\n    const [menu, setMenu] = useState(null);\r\n    const [expanded, setExpanded] = useState(false);\r\n    const [burgerButtonRef, setBurgerButtonRef] = useState(null);\r\n\r\n    const navbarCollapseRef = useRef();\r\n\r\n    useOnClickOutside(navbarCollapseRef, (e) => {\r\n        if (\r\n            !burgerButtonRef.current ||\r\n            !burgerButtonRef.current.contains(e.target)\r\n        ) {\r\n            setExpanded(false);\r\n        }\r\n    });\r\n\r\n    const toggleMenuClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    const handleLogout = (e) => {\r\n        e.preventDefault();\r\n        document.getElementById(\"logout-form\").submit();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMenuList().then(({ data }) => setMenu(data));\r\n    }, []);\r\n\r\n    const expand = user.role.id === PROVIDER_ROLE_ID ?  \"md\" : \"xxxl\";\r\n    const dropdownClasses = [\r\n        `d-none d-${expand}-flex`,\r\n        `d-${expand}-none custom-dropdown`,\r\n    ];\r\n\r\n    return (\r\n        <Navbar expand={expand} expanded={expanded} className=\"custom-navbar\">\r\n            <Container fluid>\r\n                <div className=\"container\">\r\n                    <Navbar.Brand href=\"/\">Change Within Reach</Navbar.Brand>\r\n                    <BurgerButton\r\n                        click={toggleMenuClick}\r\n                        on={expanded}\r\n                        setRef={setBurgerButtonRef}\r\n                    />\r\n                </div>\r\n                <div className=\"nav-container\">\r\n                    <Navbar.Collapse\r\n                        id=\"basic-navbar-nav\"\r\n                        ref={navbarCollapseRef}>\r\n                        <Nav className=\"me-auto links\">\r\n                            {menu &&\r\n                                menu.links?.map((item) => {\r\n                                    if (item.submenu) {\r\n                                        if (\"items_count\" in item) {\r\n                                            const itemTitle = (\r\n                                                <span>\r\n                                                    <span>{item.name}</span>\r\n                                                    {item.items_count ? (\r\n                                                        <span className=\"counter ms-1 text-red\">\r\n                                                            ({item.items_count})\r\n                                                        </span>\r\n                                                    ) : null}\r\n                                                </span>\r\n                                            );\r\n                                            return dropdownClasses.map(\r\n                                                (className, index) => (\r\n                                                    <NavDropdown\r\n                                                        key={`${item.name}-${index}`}\r\n                                                        className={className}\r\n                                                        title={itemTitle}>\r\n                                                        {item.submenu.map(\r\n                                                            (subItem, index) => {\r\n                                                                return (\r\n                                                                    <NavDropdown.Item\r\n                                                                        key={`${subItem.name}-${index}`}\r\n                                                                        href={\r\n                                                                            subItem.link\r\n                                                                        }>\r\n                                                                        <span>\r\n                                                                            {\r\n                                                                                subItem.name\r\n                                                                            }\r\n                                                                        </span>\r\n                                                                        {subItem.items_count ? (\r\n                                                                            <span className=\"counter ms-1 text-danger\">\r\n                                                                                (\r\n                                                                                {\r\n                                                                                    subItem.items_count\r\n                                                                                }\r\n\r\n                                                                                )\r\n                                                                            </span>\r\n                                                                        ) : null}\r\n                                                                    </NavDropdown.Item>\r\n                                                                );\r\n                                                            },\r\n                                                        )}\r\n                                                    </NavDropdown>\r\n                                                ),\r\n                                            );\r\n                                        } else {\r\n                                            return dropdownClasses.map(\r\n                                                (className, index) => (\r\n                                                    <NavDropdown\r\n                                                        key={`${item.name}-${index}`}\r\n                                                        className={className}\r\n                                                        title={item.name}>\r\n                                                        {item.submenu.map(\r\n                                                            (subItem, index) => {\r\n                                                                return (\r\n                                                                    <NavDropdown.Item\r\n                                                                        key={`${subItem.name}-${index}`}\r\n                                                                        href={\r\n                                                                            subItem.link\r\n                                                                        }>\r\n                                                                        {\r\n                                                                            subItem.name\r\n                                                                        }\r\n                                                                    </NavDropdown.Item>\r\n                                                                );\r\n                                                            },\r\n                                                        )}\r\n                                                    </NavDropdown>\r\n                                                ),\r\n                                            );\r\n                                        }\r\n                                    } else {\r\n                                        return (\r\n                                            <Nav.Item key={item.name}>\r\n                                                <Nav.Link href={item.link}>\r\n                                                    {item.name}\r\n                                                    {item.items_count ? (\r\n                                                        <span className=\"counter ms-1 text-red\">\r\n                                                            ({item.items_count})\r\n                                                        </span>\r\n                                                    ) : null}\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        );\r\n                                    }\r\n                                })}\r\n                        </Nav>\r\n\r\n                        {menu && (\r\n                            <Nav\r\n                                className={`ms-auto d-none d-${expand}-flex user-name-dropdown`}>\r\n                                <NavDropdown\r\n                                    align={\"end\"}\r\n                                    title={menu.user_name}>\r\n                                    {menu.user_links.map((link) => {\r\n                                        if (link.link === \"/logout\") {\r\n                                            return (\r\n                                                <NavDropdown.Item\r\n                                                    key={link.name}\r\n                                                    href=\"#\"\r\n                                                    onClick={handleLogout}>\r\n                                                    {link.img && (\r\n                                                        <img\r\n                                                            className=\"icon\"\r\n                                                            src={link.img.url}\r\n                                                            alt={link.img.alt}\r\n                                                        />\r\n                                                    )}\r\n                                                    {link.name}\r\n                                                </NavDropdown.Item>\r\n                                            );\r\n                                        }\r\n                                        return (\r\n                                            <NavDropdown.Item key={link.name} href={link.link}>\r\n                                                {link.img && (\r\n                                                    <img\r\n                                                        className=\"icon\"\r\n                                                        src={link.img.url}\r\n                                                        alt={link.img.alt}\r\n                                                    />\r\n                                                )}\r\n                                                {link.name}\r\n                                            </NavDropdown.Item>\r\n                                        );\r\n                                    })}\r\n                                </NavDropdown>\r\n                            </Nav>\r\n                        )}\r\n\r\n                        {menu && (\r\n                            <Nav className={`ms-auto d-${expand}-none`}>\r\n                                <hr />\r\n                                <Nav.Item className=\"user-name\">\r\n                                    {menu.user_name}\r\n                                </Nav.Item>\r\n                                {menu.user_links.map((link) => {\r\n                                    if (link.link === \"/logout\") {\r\n                                        return (\r\n                                            <Nav.Item key={link.name}>\r\n                                                <Nav.Link\r\n                                                    href=\"#\"\r\n                                                    onClick={handleLogout}>\r\n                                                    {link.img && (\r\n                                                        <img\r\n                                                            className=\"icon\"\r\n                                                            src={link.img.url}\r\n                                                            alt={link.img.alt}\r\n                                                        />\r\n                                                    )}\r\n                                                    {link.name}\r\n                                                </Nav.Link>\r\n                                            </Nav.Item>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <Nav.Item key={link.name}>\r\n                                            <Nav.Link href={link.link}>\r\n                                                {link.img && (\r\n                                                    <img\r\n                                                        className=\"icon\"\r\n                                                        src={link.img.url}\r\n                                                        alt={link.img.alt}\r\n                                                    />\r\n                                                )}\r\n                                                {link.name}\r\n                                            </Nav.Link>\r\n                                        </Nav.Item>\r\n                                    );\r\n                                })}\r\n                            </Nav>\r\n                        )}\r\n\r\n                        <form\r\n                            id=\"logout-form\"\r\n                            action=\"/logout\"\r\n                            method=\"POST\"\r\n                            hidden\r\n                        />\r\n                    </Navbar.Collapse>\r\n                </div>\r\n            </Container>\r\n            <hr className=\"additional-border\" />\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import axios from \"axios\"\r\n\r\nexport const getMenuList = () => {\r\n  return axios.get(`/api/menu-api`);\r\n}","import React from 'react'\r\n\r\nimport NavBar from '../../components/NavBar'\r\n\r\nimport style from './index.module.scss'\r\n\r\nconst AppMainLayout = ({children}) => {\r\nreturn (\r\n    <>\r\n        <header className={style.header}>\r\n            <NavBar />\r\n        </header>\r\n\r\n        <main className={style.main}>\r\n            {children}\r\n        </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AppMainLayout","import React from \"react\"\r\n\r\nconst FaxPageContext = React.createContext({})\r\n\r\nexport default FaxPageContext\r\n","import axios from \"axios\";\r\n\r\nexport const getFaxes = async (type, page) => {\r\n    try {\r\n        switch (type) {\r\n            case \"all\":\r\n                return await axios.get(`api/ringcentral/faxes?page=${page}`);\r\n            case \"unread\":\r\n                return await axios.get(\r\n                    `api/ringcentral/faxes?page=${page}&unread=false`,\r\n                );\r\n            case \"unassigned\":\r\n                return await axios.get(\r\n                    `api/ringcentral/faxes?page=${page}&unassigned=false`,\r\n                );\r\n            default:\r\n                return await axios.get(`api/ringcentral/faxes?page=${page}`);\r\n        }\r\n    } catch (error) {\r\n        return error.response;\r\n    }\r\n};\r\n\r\nexport const getUnreadCount = () => {\r\n    return axios\r\n        .get(`api/ringcentral/faxes?unread=false`)\r\n        .then((response) => {\r\n            return response;\r\n        })\r\n        .catch((error) => {\r\n            return error.response;\r\n        });\r\n};\r\n\r\nexport const searchFaxesByPatient = async (searchParams, searchType) => {\r\n    let typeParam;\r\n    let encodedParams = encodeURIComponent(searchParams);\r\n\r\n    switch (searchType) {\r\n        case \"all\":\r\n            typeParam = \"\";\r\n            break;\r\n        case \"unread\":\r\n            typeParam = \"unread=false\";\r\n            break;\r\n        case \"targetSearch\":\r\n            typeParam = \"unread=false\";\r\n            break;\r\n        default:\r\n            console.error(\"Unexpected table data\");\r\n    }\r\n\r\n    return await axios\r\n        .get(`api/ringcentral/faxes?${typeParam}&search=${encodedParams}`)\r\n        .catch((error) => {\r\n            return error.response;\r\n        });\r\n};\r\n\r\nexport const getFaxesByPatientId = async (patientId, faxId) => {\r\n    return await axios.get(`api/patients/${patientId}/faxes`);\r\n};\r\n\r\nexport const getFaxesByPatientLeadId = async (patientLeadId, faxId) => {\r\n    return await axios.get(`api/leads/${patientLeadId}/faxes`);\r\n};\r\n\r\nexport const searchByPatient = (name) => {\r\n    return axios\r\n        .get(`api/ringcentral/patients?search=${name}`)\r\n        .catch((error) => {\r\n            return error.response;\r\n        });\r\n};\r\n\r\nexport const setFaxAsRead = async (row) => {\r\n    return await axios.post(\"api/ringcentral/faxes/read-status\", {\r\n        fax_id: [row.id],\r\n    });\r\n};\r\n\r\nexport const setFaxAsUnread = async (rows) => {\r\n    const requestIds = [];\r\n    rows.forEach((row) => requestIds.push(row.id));\r\n    return await axios.post(\"api/ringcentral/faxes/unread-status\", {\r\n        fax_id: requestIds,\r\n    });\r\n};\r\n\r\nexport const attachFaxToPatient = async (\r\n    row,\r\n    faxPatient,\r\n    faxName,\r\n    faxStatus,\r\n    faxComment,\r\n) => {\r\n    await axios.post(\"api/ringcentral/faxes/patient-add-pdf\", {\r\n        assign: 1,\r\n        fax_id: row.id,\r\n        fax_name: faxName,\r\n        content: faxComment,\r\n        document_type_id: 70,\r\n        patient_id: faxPatient.id,\r\n        only_for_admin: faxStatus ? 1 : 0,\r\n    });\r\n\r\n    await axios.post(\"api/ringcentral/fax-attach\", {\r\n        fax_id: row.id,\r\n        comment: faxComment,\r\n        patient_id: faxPatient.id,\r\n        status: faxStatus ? \"private\" : \"public\",\r\n    });\r\n};\r\n\r\nexport const attachFaxToPatientLead = async (\r\n    row,\r\n    faxPatient,\r\n    faxName,\r\n    faxStatus,\r\n    faxComment,\r\n) => {\r\n    await axios.post(`api/leads/${faxPatient.id}/attach-fax/${row.id}`, {\r\n        comment: faxComment,\r\n        fax_name: faxName,\r\n        only_for_admin: faxStatus ? 1 : 0,\r\n        status: faxStatus ? \"private\" : \"public\",\r\n    });\r\n};\r\n\r\nexport const detachFaxFromPatient = async (row) => {\r\n    await axios.post(\"api/ringcentral/faxes/patient-remove-pdf\", {\r\n        detach_pdf: 1,\r\n        fax_id: row.id,\r\n        patient_id: row.patient_id,\r\n    });\r\n\r\n    await axios.post(\"api/ringcentral/fax-detach\", {\r\n        fax_id: row.id,\r\n    });\r\n};\r\n\r\nexport const detachFaxFromPatientLead = async (row) => {\r\n    await axios.post(`api/leads/${row.patient_lead_id}/detach-fax/${row.id}`);\r\n};\r\n\r\nexport const downloadFax = async (faxId) => {\r\n    await axios.post(\"/api/ringcentral/fax-logging\", {\r\n        fax_id: faxId,\r\n        download: true,\r\n    });\r\n\r\n    await axios\r\n        .get(`api/ringcentral/fax-download?fax_id=${faxId}`, {\r\n            responseType: \"arraybuffer\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/pdf\",\r\n            },\r\n        })\r\n        .then((response) => {\r\n            const filename = response.headers[\"content-disposition\"]\r\n                .split(\"filename=\")[1]\r\n                .replaceAll('\"', \"\");\r\n            console.log(filename);\r\n            const url = window.URL.createObjectURL(new Blob([response.data]));\r\n            const link = document.createElement(\"a\");\r\n            link.href = url;\r\n            link.setAttribute(\"download\", filename);\r\n            console.log(link);\r\n            document.body.appendChild(link);\r\n            link.click();\r\n        });\r\n};\r\n\r\nexport const showFaxView = async (faxId) => {\r\n    await axios.post(\"/api/ringcentral/fax-logging\", {\r\n        fax_id: faxId,\r\n    });\r\n\r\n    return await axios\r\n        .get(`api/ringcentral/fax-view?fax_id=${faxId}`, {\r\n            responseType: \"arraybuffer\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Accept: \"application/pdf\",\r\n            },\r\n        })\r\n        .then((response) => {\r\n            const blob = new Blob([response.data], { type: \"application/pdf\" });\r\n            return `${window.URL.createObjectURL(blob)}`;\r\n        })\r\n        .catch((error) => {\r\n            return error.response;\r\n        });\r\n};\r\n\r\nexport const getFaxLogs = async (faxId, page = 1) => {\r\n    return await axios\r\n        .get(`api/ringcentral/fax-logs?fax_id=${faxId}&page=${page}`)\r\n        .then((response) => {\r\n            return response.data;\r\n        });\r\n};\r\n","import React, {useContext} from 'react'\r\nimport {Button} from \"react-bootstrap\"\r\nimport {getUnreadCount, setFaxAsUnread} from \"../../../../api/pages/faxes-page\"\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\"\r\n\r\nconst ButtonUnread = () => {\r\n\r\n  const {\r\n    selectedRow,\r\n    markedRows,\r\n    setLoading,\r\n    setUnreadCount\r\n  } = useContext(FaxPageContext)\r\n\r\n  const unreadButtonHandler = () => {\r\n    setLoading(true)\r\n    if (!markedRows.length && selectedRow) {\r\n      setFaxAsUnread([selectedRow])\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            selectedRow.is_read = false\r\n            getUnreadCount().then((response) => {\r\n              setUnreadCount(response.data.meta.total)\r\n            })\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setLoading(false)\r\n        })\r\n    }\r\n\r\n    if (markedRows.length && !selectedRow) {\r\n      let markedArray = []\r\n      markedRows.forEach(row => {markedArray.push(row.original)})\r\n      setFaxAsUnread([...markedArray])\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            let changedRowArray = [...markedArray]\r\n            changedRowArray.forEach(row => {\r\n              row.is_read = false\r\n            })\r\n            getUnreadCount().then((response) => {\r\n              setUnreadCount(response.data.meta.total)\r\n            })\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setLoading(false)\r\n          markedRows.forEach(row => row.toggleRowSelected())\r\n        })\r\n    }\r\n\r\n    if (markedRows.length && selectedRow) {\r\n      let markedArray = []\r\n      markedRows.forEach(row => {markedArray.push(row.original)})\r\n      setFaxAsUnread([selectedRow, ...markedArray])\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            let changedRowArray = [selectedRow, ...markedArray]\r\n            changedRowArray.forEach(row => {\r\n              row.is_read = false\r\n            })\r\n            getUnreadCount().then((response) => {\r\n              setUnreadCount(response.data.meta.total)\r\n            })\r\n          }\r\n        })\r\n        .finally(() => {\r\n          setLoading(false)\r\n          markedRows.forEach(row => row.toggleRowSelected())\r\n        })\r\n    }\r\n  }\r\n\r\n  const unreadButtonCounter = () => {\r\n    const includeSelected = markedRows.filter(row => row.original === selectedRow)\r\n\r\n    if (markedRows.length && selectedRow && !includeSelected.length) {\r\n      return `(${markedRows.length + 1})`\r\n    }\r\n\r\n    if (markedRows.length && selectedRow && includeSelected.length) {\r\n      return `(${markedRows.length})`\r\n    }\r\n\r\n    if (!selectedRow && markedRows.length) {\r\n      return `(${markedRows.length})`\r\n    }\r\n\r\n    if (!markedRows.length && selectedRow) {\r\n      return `(${1})`\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      className={'d-flex align-items-center text-body me-2'}\r\n      onClick={unreadButtonHandler}\r\n      variant={\"outline-secondary\"}\r\n      disabled={!(selectedRow || markedRows.length)}\r\n    >\r\n      <span>Mark as unread</span>\r\n      <div className={'ms-1'}>\r\n        { unreadButtonCounter() }\r\n      </div>\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ButtonUnread","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrowLeft(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 13,\n    viewBox: \"0 0 12 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2.125 6.36279H9.625\",\n    stroke: \"#3E4855\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M5.1499 3.3505L2.1249 6.3625L5.1499 9.375\",\n    stroke: \"#3E4855\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrowLeft);\nexport default __webpack_public_path__ + \"static/media/arrow-left.655679fe.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\"\r\n\r\nconst NotificationsContext = React.createContext({})\r\n\r\nexport default NotificationsContext","import React from 'react'\r\nimport {Button, Modal} from \"react-bootstrap\"\r\n\r\nconst FaxDetachAlert = ({data, state, handleDecline, handleAccept}) => {\r\n\r\n  return (\r\n    <Modal show={state} backdrop=\"true\" onHide={handleDecline} centered>\r\n      <Modal.Body className={'pt-4'}>\r\n        <div className={'text-center mb-4'}>\r\n          <p className={'mb-4'}><b>Are you sure you want to detach the Fax?</b></p>\r\n          <p style={{maxWidth: '260px', margin: '0 auto', lineHeight: '160%'}}>\r\n            This action can’t be undone!\r\n            <br/>\r\n            You will detach Fax <b>{data?.phone}</b> from\r\n            <br/>\r\n            {data?.patient} patient’s card\r\n          </p>\r\n        </div>\r\n        <div className={'d-flex justify-content-center gap-2 pt-2'}>\r\n          <Button className={'text-white'} variant=\"primary\" onClick={handleDecline}>\r\n            Cancel\r\n          </Button>\r\n          <Button className={'text-body'} variant=\"outline-secondary\" onClick={handleAccept}>\r\n            Yes, Detach\r\n          </Button>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default FaxDetachAlert","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 17,\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.6668 8.49992C12.6668 8.86811 12.3684 9.16659 12.0002 9.16659H4.00016C3.63197 9.16659 3.3335 8.86811 3.3335 8.49992C3.3335 8.13173 3.63197 7.83325 4.00016 7.83325H12.0002C12.3684 7.83325 12.6668 8.13173 12.6668 8.49992Z\",\n    fill: \"white\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.00033 13.1668C7.63214 13.1668 7.33366 12.8684 7.33366 12.5002L7.33366 4.50016C7.33366 4.13197 7.63214 3.8335 8.00033 3.8335C8.36852 3.8335 8.66699 4.13197 8.66699 4.50016L8.66699 12.5002C8.66699 12.8684 8.36851 13.1668 8.00033 13.1668Z\",\n    fill: \"white\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.285ecca2.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgClearCircle(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 13,\n    viewBox: \"0 0 12 13\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.5498 2.9498C7.5998 0.999805 4.3998 0.999805 2.4498 2.9498C0.499805 4.8998 0.499805 8.0998 2.4498 10.0498C4.3998 11.9998 7.5498 11.9998 9.4998 10.0498C11.4498 8.0998 11.4998 4.8998 9.5498 2.9498ZM7.3998 8.5998L5.9998 7.1998L4.5998 8.5998L3.8998 7.8998L5.2998 6.4998L3.8998 5.0998L4.5998 4.3998L5.9998 5.7998L7.3998 4.3998L8.0998 5.0998L6.6998 6.4998L8.0998 7.8998L7.3998 8.5998Z\",\n    fill: \"#3E4855\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgClearCircle);\nexport default __webpack_public_path__ + \"static/media/clear-circle.4160981b.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDownload(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 17,\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8.08122 10.7905L8.08122 2.76318\",\n    stroke: \"#3E4855\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.0254 8.83887L8.08139 10.7909L6.13739 8.83887\",\n    stroke: \"#3E4855\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M11.17 5.91846H11.792C13.1487 5.91846 14.248 7.01779 14.248 8.37512L14.248 11.6311C14.248 12.9845 13.1514 14.0811 11.798 14.0811L4.37138 14.0811C3.01471 14.0811 1.91471 12.9811 1.91471 11.6245L1.91471 8.36779C1.91471 7.01512 3.01205 5.91846 4.36471 5.91846H4.99271\",\n    stroke: \"#3E4855\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDownload);\nexport default __webpack_public_path__ + \"static/media/download.0e66b8d9.svg\";\nexport { ForwardRef as ReactComponent };","import classNames from \"classnames\";\r\n\r\nexport const colorCondition = (status) =>\r\n    classNames(\r\n        { \"patient-status--active\": status === \"Active\" },\r\n        { \"patient-status--archived\": status === \"Archived\" },\r\n        { \"patient-status--discharged\": status === \"Discharged\" },\r\n        { \"patient-status--inactive\": status === \"Inactive\" },\r\n        { \"patient-status--lost\": status === \"Lost\" },\r\n        { \"patient-status--new \": status === \"New\" },\r\n        { \"patient-status--other\": status === \"Other\" },\r\n        { \"patient-status--other\": status === \"Not created\" },\r\n    );\r\n","import React, { forwardRef, useRef, useState } from \"react\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { ReactComponent as ArrowLeft } from \"../../../../assets/icons/arrow-left.svg\";\r\nimport { ReactComponent as IconPlus } from \"../../../../assets/icons/plus.svg\";\r\nimport { ReactComponent as InputClearIcon } from \"../../../../assets/icons/clear-circle.svg\";\r\n\r\nimport styles from \"./index.module.scss\";\r\n\r\nimport { colorCondition } from \"../../../../utilities/patientStatusColor\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AssigneeForm = ({\r\n    handlePatientSearch,\r\n    handlePatientChoice,\r\n    attachButtonHandler,\r\n    row,\r\n    disabled,\r\n}) => {\r\n    const navigate = useNavigate();\r\n\r\n    const Toggle = forwardRef(({ onClick }, ref) => (\r\n        <button\r\n            className={\r\n                \"d-flex align-items-center text-white btn btn-primary me-2\"\r\n            }\r\n            disabled={disabled}\r\n            ref={ref}\r\n            onClick={(event) => {\r\n                event.preventDefault();\r\n                onClick(event);\r\n            }}>\r\n            <span className={\"me-2\"}>Assign to patient</span>\r\n            <IconPlus />\r\n        </button>\r\n    ));\r\n\r\n    const DropDownMenu = forwardRef(({ children, style, className }, ref) => {\r\n        const [attachStage, setAttachStage] = useState(1);\r\n        const [patientsList, setPatientsList] = useState([]);\r\n\r\n        const [faxPatient, setFaxPatient] = useState([]);\r\n        const [faxComment, setFaxComment] = useState(\"\");\r\n        const [faxName, setFaxName] = useState(\"\");\r\n        const [faxStatus, setFaxStatus] = useState(true);\r\n\r\n        const searchInputRef = useRef();\r\n\r\n        return (\r\n            <>\r\n                <div\r\n                    ref={ref}\r\n                    style={style}\r\n                    className={`${className} ${styles.formWrapper}`}\r\n                    onClick={(event) => event.stopPropagation()}>\r\n                    <div\r\n                        className={\r\n                            attachStage === 1 ? `visible` : \"visually-hidden\"\r\n                        }\r\n                        style={{ width: \"200px\" }}>\r\n                        <div className={styles.title}>\r\n                            Search by patient:\r\n                        </div>\r\n\r\n                        <div className={styles.patientSearch}>\r\n                            <input\r\n                                autoFocus\r\n                                type=\"text\"\r\n                                ref={searchInputRef}\r\n                                className={styles.input}\r\n                                placeholder=\"Start typing name\"\r\n                                onInput={(event) =>\r\n                                    handlePatientSearch(\r\n                                        event.target.value,\r\n                                        setPatientsList,\r\n                                    )\r\n                                }\r\n                            />\r\n\r\n                            {searchInputRef.current?.value && (\r\n                                <InputClearIcon\r\n                                    className={styles.patientSearchClear}\r\n                                    onClick={() => {\r\n                                        handlePatientSearch(\r\n                                            \"\",\r\n                                            setPatientsList,\r\n                                        );\r\n                                        searchInputRef.current.value = \"\";\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </div>\r\n\r\n                        <ul className={styles.list}>\r\n                            {patientsList.map((item, index) => {\r\n                                if (item.patient_status) {\r\n                                    return (\r\n                                        <li\r\n                                            key={index}\r\n                                            className={colorCondition(\r\n                                                item.patient_status,\r\n                                            )}\r\n                                            onClick={(event) =>\r\n                                                handlePatientChoice(\r\n                                                    event,\r\n                                                    item,\r\n                                                    setFaxPatient,\r\n                                                    setAttachStage,\r\n                                                )\r\n                                            }>\r\n                                            {item.patient}\r\n                                        </li>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <li\r\n                                            key={index}\r\n                                            onClick={(event) =>\r\n                                                handlePatientChoice(\r\n                                                    event,\r\n                                                    item,\r\n                                                    setFaxPatient,\r\n                                                    setAttachStage,\r\n                                                )\r\n                                            }>\r\n                                            {item.patient} (Not Created)\r\n                                        </li>\r\n                                    );\r\n                                }\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={\r\n                            attachStage === 2\r\n                                ? `${styles.stepTwo} visible`\r\n                                : \"visually-hidden\"\r\n                        }\r\n                        style={{ width: \"367px\" }}>\r\n                        <div\r\n                            role=\"button\"\r\n                            className={styles.buttonBack}\r\n                            onClick={() => setAttachStage(1)}>\r\n                            <div className={\"d-flex me-2 flex-shrink-0\"}>\r\n                                <ArrowLeft />\r\n                            </div>\r\n                            <div className={\"d-flex\"}>\r\n                                <small>Back to search</small>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={styles.patient}>\r\n                            <small>Assign Fax to patient:</small>\r\n                            <small\r\n                                className={`flex-shrink-0 ms-2 ${colorCondition(\r\n                                    faxPatient.patient_status,\r\n                                )}`}>\r\n                                {faxPatient.patient}\r\n                            </small>\r\n                        </div>\r\n\r\n                        <form onSubmit={(event) => event.preventDefault()}>\r\n                            <div className={styles.textareaBox}>\r\n                                <textarea\r\n                                    rows={3}\r\n                                    required={true}\r\n                                    value={faxComment}\r\n                                    className={styles.textarea}\r\n                                    placeholder=\"Add comment which will be added to patient’s chart*\"\r\n                                    onChange={(event) =>\r\n                                        setFaxComment(event.target.value)\r\n                                    }\r\n                                />\r\n\r\n                                <input\r\n                                    type={\"text\"}\r\n                                    checked={faxStatus}\r\n                                    id={\"set-fax-name\"}\r\n                                    placeholder=\"Set fax name\"\r\n                                    className={`${styles.textarea} mb-1`}\r\n                                    onChange={(event) =>\r\n                                        setFaxName(event.target.value)\r\n                                    }\r\n                                />\r\n                            </div>\r\n                            <div className={styles.checkbox}>\r\n                                <input\r\n                                    id={\"make-private\"}\r\n                                    type={\"checkbox\"}\r\n                                    checked={faxStatus}\r\n                                    onChange={(event) =>\r\n                                        setFaxStatus(event.target.checked)\r\n                                    }\r\n                                />\r\n\r\n                                <div className={\"d-grid m-0 ms-2\"}>\r\n                                    <label\r\n                                        htmlFor={\"make-private\"}\r\n                                        className={\"m-0\"}>\r\n                                        Make private\r\n                                    </label>\r\n                                    <span>\r\n                                        (visible for Admin and Secretary only)\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-grid gap-2 mt-3\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary text-white\"\r\n                                    onClick={() =>\r\n                                        attachButtonHandler(\r\n                                            row,\r\n                                            faxPatient,\r\n                                            faxName,\r\n                                            faxStatus,\r\n                                            faxComment,\r\n                                        )\r\n                                    }>\r\n                                    Assign to {faxPatient.patient}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <Dropdown>\r\n            <Dropdown.Toggle as={Toggle} />\r\n            <Dropdown.Menu\r\n                as={DropDownMenu}\r\n                align={\"end\"}\r\n                renderOnMount={true}\r\n            />\r\n        </Dropdown>\r\n    );\r\n};\r\n\r\nexport default AssigneeForm;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { debounce } from \"throttle-debounce\";\r\n\r\nimport { ReactComponent as IconMinus } from \"../../../../assets/icons/minus.svg\";\r\n\r\nimport NotificationsContext from \"../../../../contexts/NotificationsContext\";\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\";\r\n\r\nimport {\r\n    attachFaxToPatient,\r\n    attachFaxToPatientLead,\r\n    detachFaxFromPatient,\r\n    detachFaxFromPatientLead,\r\n    getFaxes,\r\n    searchByPatient,\r\n} from \"../../../../api/pages/faxes-page\";\r\n\r\nimport FaxDetachAlert from \"../../../../components/Modals/FaxDetachAlert\";\r\nimport AssigneeForm from \"../AssigneeForm\";\r\n\r\nconst ButtonAssign = ({ state }) => {\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n    const { selectedRow, setLoading, updateData, activeTab, currentPage } =\r\n        useContext(FaxPageContext);\r\n\r\n    const [alertState, setAlertState] = useState(false);\r\n\r\n    const attachButtonHandler = (\r\n        selectedRow,\r\n        faxPatient,\r\n        faxName,\r\n        faxStatus,\r\n        faxComment,\r\n    ) => {\r\n        if (!faxComment.length) {\r\n            return false;\r\n        } else {\r\n            let attachMethod;\r\n            if (faxPatient.patient_status) {\r\n                attachMethod = attachFaxToPatient;\r\n            } else {\r\n                attachMethod = attachFaxToPatientLead;\r\n            }\r\n            attachMethod(\r\n                selectedRow,\r\n                faxPatient,\r\n                faxName,\r\n                faxStatus,\r\n                faxComment,\r\n            )\r\n                .then(() => {\r\n                    setLoading(true);\r\n                    getFaxes(activeTab, currentPage).then((response) => {\r\n                        updateData(response);\r\n                        const recipient = selectedRow.phone\r\n                            ? selectedRow.phone\r\n                            : \"Fax\";\r\n                        enqueueNotification(\r\n                            \"Success\",\r\n                            `${recipient} successfully assigned to ${faxPatient.patient}`,\r\n                        );\r\n                    });\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handlePatientChoice = (\r\n        event,\r\n        item,\r\n        setPatientChoice,\r\n        setAttachStage,\r\n    ) => {\r\n        event.stopPropagation();\r\n        setPatientChoice(item);\r\n        setAttachStage(2);\r\n    };\r\n\r\n    const handleSearchRequest = (value, setPatientsList) => {\r\n        if (value.trim().length) {\r\n            searchByPatient(value.trim()).then((response) => {\r\n                if (response.status === 404) {\r\n                    setPatientsList([]);\r\n                } else {\r\n                    setPatientsList(response.data.data);\r\n                }\r\n            });\r\n        } else {\r\n            setPatientsList([]);\r\n        }\r\n    };\r\n\r\n    const debounceHandleSearchRequest = debounce(300, handleSearchRequest);\r\n\r\n    const detachAlertState = (state) => {\r\n        setAlertState(state);\r\n    };\r\n\r\n    const detachButtonHandler = (selectedRow) => {\r\n        let detachMethod;\r\n        if (selectedRow.patient) {\r\n            detachMethod = detachFaxFromPatient;\r\n        } else {\r\n            detachMethod = detachFaxFromPatientLead;\r\n        }\r\n\r\n        detachMethod(selectedRow).then(() => {\r\n            setLoading(true);\r\n            detachAlertState(false);\r\n            getFaxes(activeTab, currentPage)\r\n                .then((response) => {\r\n                    updateData(response);\r\n                    enqueueNotification(\"Success\", `Successfully unattached`);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {selectedRow?.patient || selectedRow?.patient_lead ? (\r\n                <Button\r\n                    className={\"d-flex align-items-center text-white me-2\"}\r\n                    disabled={state}\r\n                    onClick={() => detachAlertState(true)}>\r\n                    <span className={\"me-2\"}>Detach Fax </span>\r\n                    <IconMinus />\r\n                </Button>\r\n            ) : (\r\n                <AssigneeForm\r\n                    row={selectedRow}\r\n                    disabled={state}\r\n                    handlePatientSearch={debounceHandleSearchRequest}\r\n                    attachButtonHandler={attachButtonHandler}\r\n                    handlePatientChoice={handlePatientChoice}\r\n                />\r\n            )}\r\n\r\n            <FaxDetachAlert\r\n                data={selectedRow}\r\n                state={alertState}\r\n                handleAccept={() => detachButtonHandler(selectedRow)}\r\n                handleDecline={() => detachAlertState(false)}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ButtonAssign;\r\n","import React, {forwardRef, useContext} from 'react'\r\nimport {Dropdown} from \"react-bootstrap\"\r\nimport {ReactComponent as DownLoadIcon} from \"../../../../assets/icons/download.svg\";\r\n\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\"\r\nimport {downloadFax} from \"../../../../api/pages/faxes-page\"\r\n\r\nimport style from \"./index.module.scss\"\r\n\r\nconst Toggle = forwardRef(({ children, onClick, disabled: state }, ref) => (\r\n  <button className={'d-flex align-items-center text-body btn btn-outline-secondary'} disabled={state} ref={ref} onClick={(event) => {onClick(event)}}>\r\n    <span>•••</span>\r\n  </button>\r\n))\r\n\r\nconst Link = (props) => (\r\n  <li className={`${style.link} ${props.className}`} onClick={props.onClick}>\r\n    <props.icon/>\r\n    <span>{props.children}</span>\r\n  </li>\r\n)\r\n\r\nconst optionDownloadFax = (selectedRow) => {\r\n  downloadFax(selectedRow.id).then((response) => (response))\r\n}\r\n\r\nconst ButtonOptions = ({state}) => {\r\n\r\n  const {selectedRow} = useContext(FaxPageContext)\r\n\r\n  return (\r\n    <div>\r\n      <Dropdown align=\"start\" autoClose={\"outside\"}>\r\n        <Dropdown.Toggle as={Toggle} disabled={state} variant=\"success\"/>\r\n        <Dropdown.Menu className={style.menu} as={\"ul\"} align={'end'} renderOnMount={true}>\r\n          <Dropdown.Item as={Link} onClick={() => optionDownloadFax(selectedRow)} icon={DownLoadIcon}>\r\n            Download Fax\r\n          </Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonOptions;","import classNames from 'classnames'\r\nimport React from 'react'\r\nimport { ToggleButton, ToggleButtonGroup } from \"react-bootstrap\"\r\nimport styles from './index.module.scss'\r\n\r\nconst ToggleSwitch = ({ type, name, value, onChange, buttons, className = 'default' }) => {\r\n    return (\r\n        <ToggleButtonGroup type={type} name={name} value={value} onChange={onChange} className={styles[className]}>\r\n            {buttons.map((button) => (\r\n                <ToggleButton variant=\"outline-secondary outline-toggle\" id={button.id} value={button.value} key={button.id} className={classNames(styles.toggleButton, value === button.value ? styles.activeButton : '')}>\r\n                    <span>{button.label}</span>\r\n                    {button.counter && <span className={'counter ms-1'}>{`(${button.counter})`}</span>}\r\n                </ToggleButton>\r\n            ))}\r\n        </ToggleButtonGroup>\r\n    )\r\n}\r\n\r\nexport default ToggleSwitch\r\n","import React, { useContext } from 'react'\r\nimport { ButtonToolbar } from \"react-bootstrap\"\r\n\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\"\r\n\r\nimport { getFaxes } from \"../../../../api/pages/faxes-page\";\r\n\r\nimport ButtonUnread from \"../ButtonUnread\"\r\nimport ButtonAssign from \"../ButtonAssign\"\r\nimport ButtonOptions from \"../ButtonOptions\"\r\nimport ToggleSwitch from '../../../../components/ToggleSwitch/index';\r\n\r\nconst ToolsBar = () => {\r\n\r\n  const {\r\n    activeTab,\r\n    setActiveTab,\r\n    selectedRow,\r\n    markedRows,\r\n    unreadCount,\r\n    updateData,\r\n    setLoading,\r\n    setButtonBackState,\r\n  } = useContext(FaxPageContext)\r\n\r\n  const buttonAssignCondition = () => {\r\n    if (selectedRow && !markedRows.length) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const buttonUnreadCondition = () => {\r\n    if (markedRows.length && selectedRow === null && markedRows.length === 1) {\r\n      return false\r\n    }\r\n    if (selectedRow && markedRows.length === 0) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const changeTabHandler = (value) => {\r\n    setActiveTab(value)\r\n    setLoading(true)\r\n    getFaxes(value, 1)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          updateData(response)\r\n        } else {\r\n          updateData(response)\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n        setButtonBackState(false)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ButtonToolbar>\r\n        <ToggleSwitch type=\"radio\"\r\n          name=\"tabs-buttons\"\r\n          value={activeTab}\r\n          onChange={changeTabHandler}\r\n          buttons={[\r\n            { id: \"tab-btn-1\", value: \"all\", label: \"All Faxes\" },\r\n            { id: \"tab-btn-2\", value: \"unread\", label: \"Unread\", counter: unreadCount },\r\n            { id: \"tab-btn-3\", value: \"unassigned\", label: \"Unassigned\" },\r\n          ]}\r\n          className='faxes'\r\n        />\r\n\r\n      </ButtonToolbar>\r\n\r\n      <ButtonToolbar>\r\n\r\n        <ButtonAssign state={buttonAssignCondition()} />\r\n\r\n        <ButtonUnread state={buttonUnreadCondition()} />\r\n\r\n        <ButtonOptions state={!selectedRow} />\r\n\r\n        <a\r\n          type={'button'}\r\n          rel=\"noreferrer\"\r\n          target={'_blank'}\r\n          title={'How to use Faxes?'}\r\n          className={'d-flex align-items-center text-body ms-2 btn btn-outline-secondary'}\r\n          href={'https://cwr.zendesk.com/hc/en-us/articles/4413923854866-How-to-use-Faxes'}\r\n        >\r\n          ?\r\n        </a>\r\n\r\n      </ButtonToolbar>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ToolsBar","export function changeTimeConvention(date) {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n    let ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n    hours = hours % 12;\r\n    hours = hours ? hours : 12;\r\n    return `${hours}:${minutes} ${ampm}`;\r\n}\r\n","import { changeTimeConvention } from \"./changeTimeConvention\";\r\n\r\nexport const formattedFaxDate = (data) => {\r\n    const timeOffset = 7200000;\r\n\r\n    const timeStamp = new Date();\r\n\r\n    const currentDay = timeStamp.getDate();\r\n    const currentMonth =\r\n        timeStamp.getMonth() + 1 > 10\r\n            ? timeStamp.getMonth() + 1\r\n            : \"0\" + (timeStamp.getMonth() + 1);\r\n    const currentYear = timeStamp.getFullYear();\r\n\r\n    const currentDate = `${currentMonth}:${currentDay}:${currentYear}`;\r\n\r\n    const initialDate = data.split(\" \");\r\n    const date = initialDate[0];\r\n    const time = initialDate[1].split(\":\");\r\n\r\n    let newDateMonth = date.split(\":\")[0];\r\n    let newDateDay = date.split(\":\")[1];\r\n    let newDateYear = date.split(\":\")[2];\r\n\r\n    let generateDate = new Date(\r\n        newDateYear,\r\n        newDateMonth - 1,\r\n        newDateDay,\r\n        time[0],\r\n        time[1],\r\n        time[2],\r\n    );\r\n    let generatedOffsetTime = new Date(generateDate.getTime() + timeOffset);\r\n\r\n    const formattedMonth =\r\n        generatedOffsetTime.getMonth() + 1 >= 10\r\n            ? generatedOffsetTime.getMonth() + 1\r\n            : \"0\" + (generatedOffsetTime.getMonth() + 1);\r\n    const formattedDay =\r\n        generatedOffsetTime.getDate() >= 10\r\n            ? generatedOffsetTime.getDate()\r\n            : \"0\" + generatedOffsetTime.getDate();\r\n    const formattedYear = generatedOffsetTime.getFullYear();\r\n\r\n    const formattedDate = `${formattedMonth}:${formattedDay}:${formattedYear}`;\r\n\r\n    if (formattedDate === currentDate) {\r\n        let timeObject = {\r\n            hours:\r\n                generatedOffsetTime.getHours() >= 10\r\n                    ? generatedOffsetTime.getHours()\r\n                    : \"0\" + generatedOffsetTime.getHours(),\r\n            minutes:\r\n                generatedOffsetTime.getMinutes() >= 10\r\n                    ? generatedOffsetTime.getMinutes()\r\n                    : \"0\" + generatedOffsetTime.getMinutes(),\r\n            getHours() {\r\n                return this.hours;\r\n            },\r\n            getMinutes() {\r\n                return this.minutes;\r\n            },\r\n        };\r\n\r\n        changeTimeConvention(timeObject);\r\n        return changeTimeConvention(timeObject);\r\n    }\r\n\r\n    return `${formattedMonth}/${formattedDay}/${formattedYear}`;\r\n};\r\n","var _circle, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSearch(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 7.84442,\n    cy: 7.84394,\n    r: 5.99237,\n    stroke: \"#3E4855\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.0122 12.3232L14.3616 14.6665\",\n    stroke: \"#3E4855\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearch);\nexport default __webpack_public_path__ + \"static/media/search.c78841c8.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFax(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 33,\n    viewBox: \"0 0 32 33\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.9998 7.70005C7.9998 7.06353 8.25266 6.45308 8.70275 6.00299C9.15284 5.55291 9.76329 5.30005 10.3998 5.30005H21.5998C22.2363 5.30005 22.8468 5.55291 23.2969 6.00299C23.747 6.45308 23.9998 7.06353 23.9998 7.70005V11.7H22.3998V7.70005C22.3998 7.48788 22.3155 7.28439 22.1655 7.13436C22.0155 6.98433 21.812 6.90005 21.5998 6.90005H10.3998C10.1876 6.90005 9.98415 6.98433 9.83412 7.13436C9.68409 7.28439 9.5998 7.48788 9.5998 7.70005V13.3H18.3998C18.0439 13.7733 17.7979 14.3198 17.6798 14.9H7.9998C7.57546 14.9 7.16849 15.0686 6.86843 15.3687C6.56838 15.6687 6.3998 16.0757 6.3998 16.5V25.3001C6.3998 25.5122 6.48409 25.7157 6.63412 25.8657C6.78415 26.0158 6.98763 26.1 7.1998 26.1H17.6798C17.7998 26.6921 18.0494 27.2361 18.3998 27.7001H7.1998C6.56329 27.7001 5.95284 27.4472 5.50275 26.9971C5.05266 26.547 4.7998 25.9366 4.7998 25.3001V16.5C4.7998 15.6514 5.13695 14.8374 5.73706 14.2373C6.33718 13.6372 7.15111 13.3 7.9998 13.3V7.70005ZM19.1998 15.7C19.1998 15.0635 19.4527 14.4531 19.9027 14.003C20.3528 13.5529 20.9633 13.3 21.5998 13.3H24.7998C25.4363 13.3 26.0468 13.5529 26.4969 14.003C26.9469 14.4531 27.1998 15.0635 27.1998 15.7V25.3001C27.1998 25.9366 26.9469 26.547 26.4969 26.9971C26.0468 27.4472 25.4363 27.7001 24.7998 27.7001H21.5998C20.9633 27.7001 20.3528 27.4472 19.9027 26.9971C19.4527 26.547 19.1998 25.9366 19.1998 25.3001V15.7ZM21.5998 14.9C21.3876 14.9 21.1841 14.9843 21.0341 15.1344C20.8841 15.2844 20.7998 15.4879 20.7998 15.7V25.3001C20.7998 25.5122 20.8841 25.7157 21.0341 25.8657C21.1841 26.0158 21.3876 26.1 21.5998 26.1H24.7998C25.012 26.1 25.2155 26.0158 25.3655 25.8657C25.5155 25.7157 25.5998 25.5122 25.5998 25.3001V15.7C25.5998 15.4879 25.5155 15.2844 25.3655 15.1344C25.2155 14.9843 25.012 14.9 24.7998 14.9H21.5998ZM8.9998 16.5C9.26502 16.5 9.51938 16.6054 9.70691 16.7929C9.89445 16.9805 9.9998 17.2348 9.9998 17.5C9.9998 17.7653 9.89445 18.0196 9.70691 18.2072C9.51938 18.3947 9.26502 18.5 8.9998 18.5C8.73459 18.5 8.48023 18.3947 8.2927 18.2072C8.10516 18.0196 7.9998 17.7653 7.9998 17.5C7.9998 17.2348 8.10516 16.9805 8.2927 16.7929C8.48023 16.6054 8.73459 16.5 8.9998 16.5ZM8.9998 20.1C9.26502 20.1 9.51938 20.2054 9.70691 20.3929C9.89445 20.5805 9.9998 20.8348 9.9998 21.1C9.9998 21.3653 9.89445 21.6196 9.70691 21.8072C9.51938 21.9947 9.26502 22.1 8.9998 22.1C8.73459 22.1 8.48023 21.9947 8.2927 21.8072C8.10516 21.6196 7.9998 21.3653 7.9998 21.1C7.9998 20.8348 8.10516 20.5805 8.2927 20.3929C8.48023 20.2054 8.73459 20.1 8.9998 20.1ZM13.5998 21.3001C13.5998 21.0348 13.4944 20.7805 13.3069 20.5929C13.1194 20.4054 12.865 20.3 12.5998 20.3C12.3346 20.3 12.0802 20.4054 11.8927 20.5929C11.7052 20.7805 11.5998 21.0348 11.5998 21.3001C11.5998 21.5653 11.7052 21.8196 11.8927 22.0072C12.0802 22.1947 12.3346 22.3001 12.5998 22.3001C12.865 22.3001 13.1194 22.1947 13.3069 22.0072C13.4944 21.8196 13.5998 21.5653 13.5998 21.3001ZM12.5998 16.5C12.865 16.5 13.1194 16.6054 13.3069 16.7929C13.4944 16.9805 13.5998 17.2348 13.5998 17.5C13.5998 17.7653 13.4944 18.0196 13.3069 18.2072C13.1194 18.3947 12.865 18.5 12.5998 18.5C12.3346 18.5 12.0802 18.3947 11.8927 18.2072C11.7052 18.0196 11.5998 17.7653 11.5998 17.5C11.5998 17.2348 11.7052 16.9805 11.8927 16.7929C12.0802 16.6054 12.3346 16.5 12.5998 16.5Z\",\n    fill: \"#3E4855\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFax);\nexport default __webpack_public_path__ + \"static/media/fax.648ad16e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext } from \"react\";\r\n\r\nimport { ReactComponent as SearchIcon } from \"../../../../assets/icons/search.svg\";\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\";\r\nimport {\r\n    getFaxesByPatientId,\r\n    getFaxesByPatientLeadId,\r\n    searchFaxesByPatient,\r\n} from \"../../../../api/pages/faxes-page\";\r\n\r\nconst FilterByPatient = ({ cell }) => {\r\n    const {\r\n        activeTab,\r\n        setTableData,\r\n        setTableParams,\r\n        setSearchBarState,\r\n        setButtonBackState,\r\n        setLoading,\r\n        searchParams,\r\n        setSearchParams,\r\n    } = useContext(FaxPageContext);\r\n\r\n    const clickHandler = (cell, event) => {\r\n        const value = cell.value;\r\n        event.stopPropagation();\r\n        if (value) {\r\n            let getFaxesMethod;\r\n            if (cell.row.original.patient_id) {\r\n                getFaxesMethod = getFaxesByPatientId(\r\n                    cell.row.original.patient_id,\r\n                );\r\n            } else {\r\n                getFaxesMethod = getFaxesByPatientLeadId(\r\n                    cell.row.original.patient_lead_id,\r\n                );\r\n            }\r\n            setSearchBarState(false);\r\n            setButtonBackState(true);\r\n            setLoading(true);\r\n            getFaxesMethod\r\n                .then((response) => {\r\n                    setTableData(response.data.faxes);\r\n                    setTableParams(response.data.meta);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                    setSearchParams(value);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {cell.value && (\r\n                <div\r\n                    role={\"button\"}\r\n                    className={`d-flex p-1 pt-0 pb-0 ${\r\n                        activeTab === \"targetSearch\" ? \"d-none\" : \"\"\r\n                    }`}\r\n                    onClick={(event) => clickHandler(cell, event)}>\r\n                    {!searchParams && <SearchIcon />}\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilterByPatient;\r\n","import React from 'react'\r\nimport styles from './index.module.scss'\r\n\r\nconst DataIsLoading = ({showLabelNotLoaded, labelNotLoaded}) => {\r\n    return (\r\n        <tr>\r\n            <td colSpan=\"3\" className='text-center p-5 h6'>\r\n                {showLabelNotLoaded && labelNotLoaded ?\r\n                    <span>{labelNotLoaded}</span> :\r\n                    <>\r\n                        <span>Data is loading </span>\r\n                        <span className={styles['dot-1']}>.</span>\r\n                        <span className={styles['dot-2']}>.</span>\r\n                        <span className={styles['dot-3']}>.</span>\r\n                    </>\r\n                }\r\n\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default DataIsLoading","import React from 'react'\r\n\r\nconst NoData = () => {\r\n    return (\r\n        <tr>\r\n            <td colSpan=\"3\" className='text-center p-5 h6'>\r\n                No data\r\n            </td>\r\n        </tr>)\r\n}\r\n\r\nexport default NoData","import React, { forwardRef, useContext, useEffect, useState } from 'react'\r\nimport {\r\n  useTable, useSortBy,\r\n  usePagination, useRowSelect, useFlexLayout\r\n} from 'react-table'\r\n\r\nimport { mdiMenuUp, mdiMenuDown } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\n\r\nimport { setFaxAsRead, showFaxView } from '../../api/pages/faxes-page'\r\nimport FaxPageContext from \"../../contexts/FaxPageContext\"\r\nimport classNames from 'classnames';\r\nimport DataIsLoading from './components/DataIsLoading';\r\nimport NoData from './components/NoData';\r\nimport { ROW_NUMBER_COLUMN } from '../../constants';\r\nimport styles from './index.module.scss'\r\n\r\nconst IndeterminateCheckbox = forwardRef(({ indeterminate,isVerticallyCentered = false, ...rest }, ref) => {\r\n  const defaultRef = React.useRef()\r\n  const resolvedRef = ref || defaultRef\r\n\r\n  useEffect(() => {\r\n    resolvedRef.current.indeterminate = indeterminate\r\n  }, [resolvedRef, indeterminate])\r\n\r\n  return (\r\n      <div className={classNames(isVerticallyCentered && ' d-flex align-items-center h-100')}>\r\n        <label\r\n            style={{ padding: '8px' }}\r\n            onClick={(event => event.stopPropagation())}\r\n        >\r\n          <input className={'position-relative'} type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </label>\r\n      </div>\r\n  )\r\n})\r\n\r\nconst Table = ({\r\n                 columns,\r\n                 data,\r\n                 dataIsLoaded,\r\n                 pageSize = 10000,\r\n                 currentPage = 1,\r\n                 withCheckbox,\r\n                 checkboxVerticallyCentered = false,\r\n                 className = 'default',\r\n                 rowIsClickable = false,\r\n                 showLabelNotLoaded= false,\r\n                 labelNotLoaded = '',\r\n                 options = {\r\n                     applyMinHeightToHeader: false,\r\n                 }\r\n}) => {\r\n\r\n  const {\r\n    setMarkedRows,\r\n    selectedRow,\r\n    setSelectedRow,\r\n    faxViewRef,\r\n    loading,\r\n    tableData,\r\n    setUnreadCount,\r\n    setPdfFile\r\n  } = useContext(FaxPageContext)\r\n\r\n  const rowSelectHandler = (row) => {\r\n    if (rowIsClickable) {\r\n      setSelectedRow(row)\r\n      if (!row.is_read) {\r\n        setFaxAsRead(row).then((response) => {\r\n          if (response.status === 200) {\r\n            tableData.find(item => item.id === row.id).is_read = true\r\n            setUnreadCount(count => (count - 1))\r\n          }\r\n        })\r\n      }\r\n      if (row.id !== selectedRow?.id) {\r\n        showFaxView(row.id, faxViewRef).then((response) => {\r\n          setPdfFile(response)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const unread = (row) => row.is_read === false ? 'unread' : ''\r\n  const selected = (row) => row.id === selectedRow?.id ? 'selected' : ''\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    setSortBy,\r\n    selectedFlatRows,\r\n    state\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n    initialState: { pageSize: pageSize, pageIndex: currentPage - 1, sortBy: [] }\r\n  }, useSortBy, usePagination,\r\n    useRowSelect, useFlexLayout, hooks => {\r\n      withCheckbox && hooks.visibleColumns.push(columns => [\r\n        {\r\n          id: 'selection',\r\n          minWidth: 35,\r\n          width: 35,\r\n          isVerticallyCentered: true,\r\n          Header: ({ getToggleAllRowsSelectedProps }) => (\r\n            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} isVerticallyCentered={checkboxVerticallyCentered}/>\r\n          ),\r\n          Cell: ({ row }) => (\r\n            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} isVerticallyCentered={checkboxVerticallyCentered}/>\r\n          ),\r\n        },\r\n        ...columns,\r\n      ])\r\n    })\r\n\r\n    const goToPage = (targetPage) => {\r\n        const pagesToMove = targetPage - state.pageIndex -1;\r\n        if (pagesToMove === 0) {\r\n          return;\r\n        }\r\n        \r\n        if (pagesToMove > 0) {\r\n            for (let i = 0; i < pagesToMove; i++) {\r\n                nextPage();\r\n            }\r\n        } else if (pagesToMove < 0) {\r\n            for (let i = 0; i < -pagesToMove; i++) {\r\n                previousPage();\r\n            }\r\n        }\r\n        setSortBy(state.sortBy);\r\n    };\r\n\r\n    useEffect(() => {\r\n      goToPage(currentPage);\r\n    }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    if (withCheckbox) {\r\n      setMarkedRows(selectedFlatRows)\r\n    }\r\n  }, [selectedFlatRows, setMarkedRows])\r\n\r\n  const checkSorting = () => {\r\n    let hasSorting = true;\r\n    for (let i = 0; i < columns.length; i++) {\r\n      if (!columns[i].disableSortBy) {\r\n        hasSorting = false\r\n        break\r\n      }\r\n    }\r\n    return hasSorting\r\n\r\n  }\r\n  const hasSorting = checkSorting();\r\n\r\n  return (\r\n      <table\r\n          {...getTableProps()}\r\n          className={classNames(\r\n              \"table mb-0\",\r\n              styles[className],\r\n              loading ? \"pe-none opacity-50\" : \"opacity-100\",\r\n          )}>\r\n          <thead>\r\n              {headerGroups.map((headerGroup) => (\r\n                  <tr {...headerGroup.getHeaderGroupProps()}>\r\n                      {headerGroup.headers.map((column, index) => {\r\n                          const headerProps = {\r\n                              ...column.getHeaderProps(\r\n                                  column.getSortByToggleProps(),\r\n                              ),\r\n                          };\r\n\r\n                          if (headerProps.key === `header_${ROW_NUMBER_COLUMN}`) {\r\n                            headerProps.style.flex = \"none\";\r\n                          }\r\n\r\n                          if (withCheckbox && index === 0) {\r\n                              return (\r\n                                  <th\r\n                                      className={\"p-0\"}\r\n                                      {...column.getHeaderProps()}>\r\n                                      {column.render(\"Header\")}\r\n                                  </th>\r\n                              );\r\n                          } else {\r\n                              return <th\r\n                                  className={classNames(\r\n                                      \"d-flex align-items-center justify-content-between ps-2\",\r\n                                      hasSorting ? \"p-2\" : \"p-0\",\r\n                                      options.applyMinHeightToHeader && styles.extendedHeight,\r\n                                  )}\r\n                                  {...headerProps}>\r\n                                  <div>{column.render(\"Header\")}</div>\r\n                                  {column.canSort && (\r\n                                      <div className=\"d-flex flex-column gap-0\">\r\n                                          <Icon\r\n                                              path={mdiMenuUp}\r\n                                              size={1}\r\n                                              style={{\r\n                                                  marginBottom: \"-12px\",\r\n                                              }}\r\n                                              color={\r\n                                                  column.isSorted &&\r\n                                                  !column.isSortedDesc\r\n                                                      ? \"#2D85C9\"\r\n                                                      : \"#B8B8B8\"\r\n                                              }\r\n                                          />\r\n                                          <Icon\r\n                                              path={mdiMenuDown}\r\n                                              size={1}\r\n                                              color={\r\n                                                  column.isSorted &&\r\n                                                  column.isSortedDesc\r\n                                                      ? \"#2D85C9\"\r\n                                                      : \"#B8B8B8\"\r\n                                              }\r\n                                          />\r\n                                      </div>\r\n                                  )}\r\n                              </th>;\r\n                          }\r\n                      })}\r\n                  </tr>\r\n              ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n              {dataIsLoaded ? (\r\n                  data.length === 0 ? (\r\n                      <NoData />\r\n                  ) : (\r\n                      page.map((row, rowIndex) => {\r\n                          prepareRow(row);\r\n\r\n                          return (\r\n                              <tr\r\n                                  {...row.getRowProps()}\r\n                                  onClick={() => rowSelectHandler(row.original)}\r\n                                  className={classNames(\r\n                                      row.original.row_class_name,\r\n                                      unread(row.original),\r\n                                      selected(row.original),\r\n                                  )}>\r\n                                  {row.cells.map((cell, index) => {\r\n                                      let cellProperties = cell.getCellProps();\r\n                                      const borderBottom =\r\n                                          rowIndex + 1 === page.length\r\n                                              ? \"none\"\r\n                                              : \"\";\r\n\r\n                                      cellProperties.style.borderBottom =\r\n                                          borderBottom;\r\n\r\n                                      if (withCheckbox && index === 0) {\r\n                                          return (\r\n                                              <td\r\n                                                  className={\r\n                                                      \"p-0 align-items-center\"\r\n                                                  }\r\n                                                  {...cell.getCellProps()}>\r\n                                                  {cell.render(\"Cell\")}\r\n                                              </td>\r\n                                          );\r\n                                      } else if (\r\n                                          cell.column.id === ROW_NUMBER_COLUMN\r\n                                      ) {\r\n                                          const rowValue =\r\n                                              state.pageIndex === 0\r\n                                                  ? rowIndex + 1\r\n                                                  : pageSize * state.pageIndex +\r\n                                                    rowIndex +\r\n                                                    1;\r\n                                          return (\r\n                                              <td\r\n                                                  {...cell.getCellProps()}\r\n                                                  style={{\r\n                                                      borderBottom,\r\n                                                      width: cellProperties\r\n                                                          .style.width,\r\n                                                  }}>\r\n                                                  {rowValue}\r\n                                              </td>\r\n                                          );\r\n                                      } else {\r\n                                          if (\r\n                                              cell.column.isLink &&\r\n                                              cell.value !== null\r\n                                          ) {\r\n                                              return (\r\n                                                  <td {...cell.getCellProps()}>\r\n                                                      <div\r\n                                                          className={\r\n                                                              \"d-flex align-items-center\"\r\n                                                          }>\r\n                                                          <a\r\n                                                              type={\"button\"}\r\n                                                              className={`${cell.column.textColor(\r\n                                                                  row.original,\r\n                                                              )} text-decoration-none`}\r\n                                                              href={cell.column.link(\r\n                                                                  row.original,\r\n                                                              )}>\r\n                                                              {cell.value}\r\n                                                          </a>\r\n\r\n                                                          {cell.render(\"Cell\")}\r\n                                                      </div>\r\n                                                  </td>\r\n                                              );\r\n                                          } else {\r\n                                              return (\r\n                                                  <td {...cellProperties}>\r\n                                                      <div\r\n                                                          className={classNames(\r\n                                                              cell.column\r\n                                                                  .isVerticallyCentered &&\r\n                                                                  \"d-flex align-items-center h-100\",\r\n                                                          )}>\r\n                                                          {cell.render(\"Cell\")}\r\n                                                      </div>\r\n                                                  </td>\r\n                                              );\r\n                                          }\r\n                                      }\r\n                                  })}\r\n                              </tr>\r\n                          );\r\n                      })\r\n                  )\r\n              ) : (\r\n                  <DataIsLoading showLabelNotLoaded={showLabelNotLoaded} labelNotLoaded={labelNotLoaded}/>\r\n              )}\r\n          </tbody>\r\n      </table>\r\n  );\r\n}\r\n\r\nexport default Table\r\n","import React from 'react';\r\nimport {ReactComponent as ArrowLeft} from \"../../../assets/icons/arrow-left.svg\";\r\n\r\nconst ButtonBackward = (props) => {\r\n  return (\r\n    <div role=\"button\" className={'d-flex align-items-center'} onClick={props.onClick}>\r\n      <div className={'d-flex me-2 flex-shrink-0'}><ArrowLeft /></div>\r\n      <div className={'d-flex fw-bolder'}>{props.children}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ButtonBackward","import React, {useContext} from 'react'\r\n\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\"\r\nimport ButtonBackward from \"../../../../components/Buttons/ButtonBackward\";\r\nimport {getFaxes} from \"../../../../api/pages/faxes-page\";\r\n\r\nconst ButtonBack = () => {\r\n  const {activeTab, setButtonBackState, setLoading, updateData, setSearchParams, setSearchBarState} = useContext(FaxPageContext)\r\n\r\n  const clickHandler = () => {\r\n    setButtonBackState(false)\r\n    setLoading(true)\r\n    getFaxes(activeTab, 1)\r\n      .then((response) => {\r\n        updateData(response)\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n        setSearchParams(null)\r\n        setSearchBarState(true)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ButtonBackward onClick={clickHandler}>\r\n        Back to list\r\n      </ButtonBackward>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ButtonBack","import React, {useRef} from 'react'\r\nimport {ReactComponent as SearchIcon} from \"../../../assets/icons/search.svg\"\r\nimport {ReactComponent as InputClearIcon} from \"../../../assets/icons/clear-circle.svg\"\r\n\r\nimport style from './index.module.scss'\r\n\r\nconst InputSearch = (props) => {\r\n\r\n  const inputRef = useRef()\r\n\r\n  return (\r\n    <div className={style.box}>\r\n\r\n      <SearchIcon className={style.search} />\r\n\r\n      <input\r\n        ref={inputRef}\r\n        type={props.type}\r\n        onInput={(event) => props.handelChange(event.target.value)}\r\n        placeholder={props.placeholder}\r\n        className={`${props.className} ${style.input}`}\r\n      />\r\n\r\n      { inputRef.current?.value &&\r\n        <InputClearIcon className={style.clear} onClick={() => {\r\n          props.handelChange('')\r\n          inputRef.current.value = ''\r\n        }}/>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InputSearch","import React, {useContext} from 'react'\r\nimport {debounce} from \"throttle-debounce\"\r\n\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\"\r\nimport {getFaxes, searchFaxesByPatient} from \"../../../../api/pages/faxes-page\";\r\nimport InputSearch from \"../../../../components/Inputs/InputSearch\";\r\nimport NotificationsContext from \"../../../../contexts/NotificationsContext\";\r\n\r\nconst SearchBar = () => {\r\n\r\n  const {\r\n    activeTab,\r\n    searchBarState,\r\n    setTableData,\r\n    setTableParams,\r\n    setLoading,\r\n    updateData\r\n  } = useContext(FaxPageContext)\r\n\r\n  const {enqueueNotification} = useContext(NotificationsContext)\r\n\r\n  const inputHandler = (value) => {\r\n    if (value.trim().length) {\r\n      searchFaxesByPatient(value.trim(), activeTab).then(response => {\r\n        setLoading(true)\r\n        if (response.status === 404) {\r\n          setTableData([])\r\n          setTableParams({current_page: 1, last_page: 1, per_page: 15})\r\n          enqueueNotification('', `Search result is empty`)\r\n        } else {\r\n          updateData(response)\r\n        }\r\n      }).finally(() => {\r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      setLoading(true)\r\n      getFaxes(activeTab, 1).then((response) => {\r\n        updateData(response)\r\n        setLoading(false)\r\n      })\r\n    }\r\n  }\r\n\r\n  const debounceInputHandler = debounce(300, inputHandler)\r\n\r\n  return (\r\n    <>\r\n      { searchBarState &&\r\n        <div className={'d-flex align-items-center gap-3'}>\r\n          <span className={'d-flex flex-shrink-0'}>Search by patient’s name:</span>\r\n          <InputSearch\r\n            type=\"text\"\r\n            placeholder={'Start typing name...'}\r\n            handelChange={debounceInputHandler}\r\n          />\r\n        </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SearchBar","import React, { useContext } from \"react\";\r\n\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\";\r\n\r\nimport { formattedFaxDate } from \"../../../../utilities/formattedFaxDate\";\r\nimport FilterByPatient from \"../FilterByPatient\";\r\nimport Table from \"../../../../components/Table\";\r\nimport ButtonBack from \"../ButtonBack\";\r\nimport SearchBar from \"../SearchBar\";\r\nimport { colorCondition } from \"../../../../utilities/patientStatusColor\";\r\n\r\nconst FaxList = () => {\r\n    const { tableData, tableParams, searchBarState, buttonBackState } =\r\n        useContext(FaxPageContext);\r\n\r\n    const hasLink = (cell) => {\r\n        return !! (cell.row.original.patient_id || cell.row.original.inquiry_id);\r\n    }\r\n\r\n    const getLink = (cell) => {\r\n        return cell.row.original.patient_id\r\n            ? `/chart/${cell.row.original.patient_id}`\r\n            : `/new-patients-dashboard?selectedCard=${cell.row.original.inquiry_id}`;\r\n    }\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: \"Date\",\r\n                accessor: \"received_at\",\r\n                width: 115,\r\n                Cell: ({ value }) => formattedFaxDate(value),\r\n                disableSortBy: true,\r\n                isVerticallyCentered: true,\r\n            },\r\n            {\r\n                Header: \"From\",\r\n                accessor: \"phone\",\r\n                width: 110,\r\n                disableSortBy: true,\r\n                isVerticallyCentered: true,\r\n            },\r\n            {\r\n                Header: \"Assigned to\",\r\n                accessor: (cell) => {\r\n                    if (cell.patient) {\r\n                        return cell.patient;\r\n                    }\r\n                    if (cell.patient_lead) {\r\n                        return `${cell.patient_lead}`;\r\n                    }\r\n                },\r\n                width: 140,\r\n                isVerticallyCentered: true,\r\n                textColor: (cell) =>\r\n                    colorCondition(cell.patient_status || \"Not created\"),\r\n                Cell: (cell) => (\r\n                    <div className=\"ms-1 d-flex align-items-center\">\r\n                        <div>\r\n                            {hasLink(cell) ?\r\n                                <a\r\n                                    type={'button'}\r\n                                    className={`${cell.column.textColor(cell.row.original)} text-decoration-none`}\r\n                                    href={getLink(cell)}\r\n                                >\r\n                                    {cell.value}\r\n                                </a> :\r\n                                <span  className={cell.column.textColor(cell.row.original)}>\r\n                                    {cell.value}\r\n                                </span>\r\n                            }\r\n                            \r\n                            {cell.row.original.patient_lead && (\r\n                                <div>(Not created)</div>\r\n                            )}\r\n                        </div>\r\n                        <FilterByPatient cell={cell} />\r\n                    </div>\r\n                ),\r\n                disableSortBy: true,\r\n            },\r\n        ],\r\n        [],\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {searchBarState && (\r\n                <div className={\"mb-3\"}>\r\n                    <SearchBar />\r\n                </div>\r\n            )}\r\n\r\n            {buttonBackState && (\r\n                <div className={\"mb-4\"}>\r\n                    <ButtonBack />\r\n                </div>\r\n            )}\r\n\r\n            <Table\r\n                pageSize={tableParams.per_page}\r\n                dataIsLoaded={true}\r\n                columns={columns}\r\n                data={tableData ? tableData : []}\r\n                withCheckbox={true}\r\n                checkboxVerticallyCentered={true}\r\n                className=\"faxes\"\r\n                rowIsClickable={true}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FaxList;\r\n","var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgChevron(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 8,\n    height: 5,\n    viewBox: \"0 0 8 5\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_2003_9053)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.99919 0.59443C8.00179 0.480174 7.96752 0.367974 7.90109 0.273428C7.83467 0.178882 7.73936 0.106688 7.62852 0.0668846C7.51768 0.027081 7.39678 0.0216448 7.28259 0.0513318C7.1684 0.0810187 7.06667 0.144354 6.99145 0.232531L4.00923 3.59701L1.02806 0.232531C0.981678 0.171534 0.922789 0.120451 0.855031 0.0824798C0.787273 0.0445089 0.712113 0.0204687 0.634296 0.0118642C0.55648 0.00325982 0.477681 0.0102768 0.402801 0.0324757C0.32792 0.0546745 0.258566 0.0915769 0.199126 0.140872C0.139685 0.190167 0.0914688 0.250794 0.0573935 0.318954C0.0233188 0.387114 0.00417993 0.46134 0.00116012 0.536983C-0.00185969 0.612627 0.0112686 0.688057 0.0398082 0.758553C0.0683484 0.829048 0.11164 0.893088 0.166974 0.946664L3.57701 4.79868C3.63042 4.85917 3.69672 4.90775 3.77144 4.94106C3.84615 4.97437 3.92747 4.99161 4.00976 4.99161C4.09204 4.99161 4.17336 4.97437 4.24808 4.94106C4.32279 4.90775 4.38915 4.85917 4.44256 4.79868L7.85588 0.946664C7.94531 0.849356 7.99615 0.724545 7.99932 0.59443L7.99919 0.59443Z\",\n    fill: \"#2D85C9\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_2003_9053\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 5,\n    height: 8,\n    fill: \"white\",\n    transform: \"translate(8) rotate(90)\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevron);\nexport default __webpack_public_path__ + \"static/media/chevron.dd5e664c.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useContext, useEffect, useRef, useState} from \"react\"\r\nimport {Collapse, Spinner} from \"react-bootstrap\"\r\nimport {throttle} from \"throttle-debounce\"\r\n\r\nimport {ReactComponent as Chevron} from \"../../../../assets/icons/chevron.svg\"\r\n\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\"\r\n\r\nimport {getFaxLogs} from \"../../../../api/pages/faxes-page\"\r\n\r\nimport style from './index.module.scss'\r\nimport {colorCondition} from \"../../../../utilities/patientStatusColor\";\r\nimport {changeTimeConvention} from \"../../../../utilities/changeTimeConvention\";\r\n\r\nconst formattedTime = (time) => {\r\n  let datePart = time.split(' ')[0]\r\n  let timePart = time.split(' ')[1]\r\n\r\n  let formattedDatePart = datePart.replaceAll(':', '/')\r\n  let formattedTimePart = timePart.split(':').slice(0, -1)\r\n\r\n  let timeObject = {\r\n    hours: formattedTimePart[0],\r\n    minutes: formattedTimePart[1],\r\n    getHours() {\r\n      return this.hours\r\n    },\r\n    getMinutes() {\r\n      return this.minutes\r\n    }\r\n  }\r\n\r\n  let convertedTimeConvention = changeTimeConvention(timeObject)\r\n\r\n  return `${formattedDatePart} ${convertedTimeConvention}`\r\n}\r\n\r\nconst faxInfiniteLoading = (element, id, nextPage, setNextPage, setFaxLogs, total) => {\r\n  if (element.scrollHeight - (element.scrollTop) === element.clientHeight) {\r\n    if (nextPage <= total) {\r\n      const request = throttle(1000,false, () => {\r\n        getFaxLogs(id, nextPage).then((response) => {\r\n          setNextPage(page => page + 1)\r\n          setFaxLogs(logs => ({...logs, data: [...logs.data, ...response.data]}))\r\n        })\r\n      })\r\n      request()\r\n    }\r\n  }\r\n}\r\n\r\nconst toggleHandler = (row, setLogs, state, setState, setLoading, firstLoad, setFirstLoad) => {\r\n  if (!state && firstLoad) {\r\n    setLoading(true)\r\n    getFaxLogs(row.id)\r\n      .then((response) => {\r\n        setLogs(response)\r\n        setState((prevState) => !prevState)\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n        setFirstLoad(false)\r\n      })\r\n  } else {\r\n    setState((prevState) => !prevState)\r\n  }\r\n}\r\n\r\nexport const FaxLogs = (props) => {\r\n\r\n  const {selectedRow, setFaxLogs} = useContext(FaxPageContext)\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [open, setOpen] = useState(false)\r\n  const [nextPage, setNextPage] = useState(2)\r\n  const [totalPages, setTotalPages] = useState(1)\r\n\r\n  const infiniteList = useRef()\r\n\r\n  const [firstLoad, setFirstLoad] = useState(true)\r\n\r\n  useEffect(() => {\r\n    setTotalPages(props.logs.meta?.last_page)\r\n  }, [props.logs])\r\n\r\n  useEffect(() => {\r\n\r\n    const ref = infiniteList.current\r\n\r\n    return () => {\r\n      ref.scrollTop = 0\r\n      setNextPage(2)\r\n      setOpen(false)\r\n      setFirstLoad(true)\r\n    }\r\n  }, [selectedRow])\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={`${style.logs} pb-0 p-3 pt-4 border-top`}>\r\n\r\n        <div\r\n          role=\"button\"\r\n          onClick={() => toggleHandler(selectedRow, setFaxLogs, open, setOpen, setLoading, firstLoad, setFirstLoad)}\r\n          aria-controls=\"collapse-text\"\r\n          aria-expanded={open}\r\n          className={'mb-4 text-primary'}\r\n        >\r\n          <div className={'d-flex align-items-center'}>\r\n\r\n          <span className={'d-flex align-items-center'} style={{marginRight: '5px'}}>\r\n            {\r\n              open ? 'Hide logs' : 'Show logs'\r\n            }\r\n          </span>\r\n\r\n            { loading\r\n              ? <Spinner as=\"span\" animation=\"grow\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/>\r\n              : <Chevron style={{transform: open ? 'rotate(180deg)' : 'none'}} />\r\n            }\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <Collapse in={open} className={style.collapse}>\r\n          <div ref={infiniteList} onScroll={(event) => {\r\n            faxInfiniteLoading(event.target, selectedRow.id, nextPage, setNextPage, setFaxLogs, totalPages)\r\n          }}>\r\n            <div id=\"collapse-text\">\r\n              { props.logs.data?.map(log => (\r\n                <div key={log.id} className={style.singleLog}>\r\n                  <p>{formattedTime(log.created_at)}</p>\r\n                  <p>{log.user}</p>\r\n                  <p className={style.test}>\r\n                    {`${log.subject}${log.patient_id ? ' ' : ''}`}\r\n\r\n                    { log.patient_id &&\r\n                      <a\r\n                        href={`/chart/${log.patient_id}`}\r\n                        className={`${colorCondition(log.patient_status)} text-decoration-none d-inline-block`}\r\n                      >{log.patient}</a>\r\n                    }\r\n\r\n                  </p>\r\n                </div>\r\n              ))\r\n              }\r\n            </div>\r\n          </div>\r\n        </Collapse>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\n\r\nimport style from './index.module.scss'\r\n\r\nexport const FaxToolbar = ({total, current, scale, setScale}) => {\r\n  return (\r\n    <div className={style.box}>\r\n\r\n      <div className={style.counter}>\r\n        <span className={'me-1 pt-1 pb-1 pe-2 ps-2 bg-dark-gray'}>{current}</span>\r\n        /\r\n        <span className={'ms-1'}>{total}</span>\r\n      </div>\r\n\r\n      <div className={style.zoom}>\r\n        <button className={'button'} onClick={() => setScale((prev) => prev + 0.1)}>\r\n          +\r\n        </button>\r\n        <div className={'pt-1 pb-1 pe-2 ps-2 bg-dark-gray'}>\r\n          {\r\n            Math.round(scale * 100) + '%'\r\n          }\r\n        </div>\r\n        <button type={'button'} onClick={() => setScale((prev) => prev - 0.1)}>−</button>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaxToolbar","import React, {useContext, useRef, useState} from 'react'\r\nimport {Waypoint} from \"react-waypoint\"\r\n\r\nimport FaxPageContext from \"../../../../contexts/FaxPageContext\"\r\n\r\nimport {ReactComponent as FaxIcon} from \"../../../../assets/icons/fax.svg\"\r\n\r\nimport {Document, Page} from 'react-pdf'\r\nimport PDFJSWorker from 'react-pdf/dist/esm/pdf.worker.entry'\r\n\r\nimport {FaxLogs} from \"../FaxLogs\";\r\nimport FaxToolbar from \"../FaxToolbar\";\r\nimport {useDraggableScroll} from \"../../../../hooks/useDraggableScroll\";\r\n\r\nimport style from './index.module.scss'\r\n\r\nconst FaxLoader = ({message}) => {\r\n  return (\r\n    <div className={'h-100 d-flex flex-column align-items-center justify-content-center'}>\r\n      <FaxIcon className={'mb-4'} />\r\n      <div>{message}</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst generatePageArray = (total) => {\r\n  return Array.from(Array(total).keys()).map(key => key + 1)\r\n}\r\n\r\nconst FaxView = () => {\r\n  const {selectedRow, faxLogs, pdfFile} = useContext(FaxPageContext)\r\n\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [totalPages, setTotalPages] = useState(0)\r\n  const [scalePage, setScalePage] = useState(0.8)\r\n\r\n  const pdfViewRef = useRef()\r\n\r\n  const { onMouseDown } = useDraggableScroll(pdfViewRef)\r\n\r\n  return (\r\n    <div style={{position: 'relative', minHeight: '721px', height: '100%', paddingTop: '42px', paddingBottom: '68px'}}>\r\n\r\n      { selectedRow\r\n        ?\r\n          <>\r\n            <FaxToolbar total={totalPages} current={currentPage} scale={scalePage} setScale={setScalePage} />\r\n\r\n            <div className={'w-100 h-100 p-2'}>\r\n              { pdfFile &&\r\n\r\n                <div className={style.scroll} ref={pdfViewRef} onMouseDown={onMouseDown}>\r\n                  <Document\r\n                    file={pdfFile}\r\n                    noData={<div>test</div>}\r\n                    options={{ workerSrc: PDFJSWorker }}\r\n                    onLoadSuccess={({numPages}) => setTotalPages(numPages)}\r\n                  >\r\n                    {\r\n                      generatePageArray(totalPages).map((page, index) => (\r\n                        <Waypoint key={index} onEnter={() => setCurrentPage(page)} bottomOffset={'50%'}>\r\n                          <div>\r\n                            <Page\r\n                              className={style.canvas}\r\n                              pageNumber={page}\r\n                              scale={scalePage}\r\n                              renderTextLayer={false}\r\n                              renderAnnotationLayer={false}\r\n                            />\r\n                          </div>\r\n                        </Waypoint>\r\n                      ))\r\n                    }\r\n                  </Document>\r\n                </div>\r\n\r\n              }\r\n            </div>\r\n\r\n            <FaxLogs logs={faxLogs} />\r\n          </>\r\n        :\r\n          <FaxLoader message={'Choose FAX from list to see details'}/>\r\n      }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FaxView","export const useDraggableScroll = (ref, options = { direction: 'both' }) => {\r\n\r\n  const { direction } = options\r\n\r\n  let initialPosition = { scrollTop: 0, scrollLeft: 0, mouseX: 0, mouseY: 0 }\r\n\r\n  const mouseMoveHandler = (event) => {\r\n    if (ref.current) {\r\n      const dx = event.clientX - initialPosition.mouseX\r\n      const dy = event.clientY - initialPosition.mouseY\r\n\r\n      if (direction !== 'horizontal')\r\n        ref.current.scrollTop = initialPosition.scrollTop - dy\r\n      if (direction !== 'vertical')\r\n        ref.current.scrollLeft = initialPosition.scrollLeft - dx\r\n    }\r\n  }\r\n\r\n  const mouseUpHandler = () => {\r\n\r\n    if (ref.current) ref.current.style.cursor = 'grab'\r\n\r\n    document.removeEventListener('mousemove', mouseMoveHandler)\r\n    document.removeEventListener('mouseup', mouseUpHandler)\r\n  }\r\n\r\n  const onMouseDown = (event) => {\r\n    if (ref.current) {\r\n\r\n      initialPosition = {\r\n        scrollLeft: ref.current.scrollLeft,\r\n        scrollTop: ref.current.scrollTop,\r\n        mouseX: event.clientX,\r\n        mouseY: event.clientY,\r\n      }\r\n\r\n      ref.current.style.cursor = 'grabbing'\r\n      ref.current.style.userSelect = 'none'\r\n\r\n      document.addEventListener('mousemove', mouseMoveHandler)\r\n      document.addEventListener('mouseup', mouseUpHandler)\r\n    }\r\n  }\r\n\r\n  return { onMouseDown }\r\n}","const filterPages = (visiblePages, totalPages) => {\r\n    return visiblePages.filter((page) => page <= totalPages);\r\n};\r\n\r\nconst getVisiblePages = (currentPage, total) => {\r\n    if (total < 6) {\r\n        return filterPages([1, 2, 3, 4, 5], total);\r\n    } else if (\r\n        currentPage % 6 >= 0 &&\r\n        currentPage > 4 &&\r\n        currentPage + 2 < total\r\n    ) {\r\n        return [\r\n            currentPage - 3,\r\n            currentPage - 2,\r\n            currentPage - 1,\r\n            currentPage,\r\n            currentPage + 1,\r\n            \"...\",\r\n            total,\r\n        ];\r\n    } else if (\r\n        currentPage % 6 >= 0 &&\r\n        currentPage > 4 &&\r\n        currentPage + 2 >= total\r\n    ) {\r\n        return [total - 4, total - 3, total - 2, total - 1, total];\r\n    } else {\r\n        return [1, 2, 3, 4, 5, \"...\", total];\r\n    }\r\n};\r\n\r\nexport default getVisiblePages;\r\n","import React, {useEffect, useState} from 'react'\r\n\r\nimport getVisiblePages from \"../../utilities/getVisiblePages\"\r\n\r\nconst Pagination = ({params, currentPage, setCurrentPage, loading}) => {\r\n\r\n  const [visiblePages, setVisiblePages] = useState([])\r\n\r\n  useEffect(() => {\r\n    setVisiblePages(getVisiblePages(currentPage, params.last_page))\r\n  }, [params, currentPage])\r\n\r\n  return (\r\n    <>\r\n      <ul className={`pagination m-0 ${loading ? 'pe-none opacity-50' : 'opacity-100'}`}>\r\n\r\n        <li className={currentPage === 1 ? 'page-item disabled' : 'page-item'}>\r\n          <span role=\"button\" className={'page-link'} onClick={() => {setCurrentPage(currentPage - 1)}}>Previous</span>\r\n        </li>\r\n\r\n        { visiblePages.map((page, index) => {\r\n\r\n          if (page !== '...') {\r\n            return (\r\n              <li key={page} className={page === currentPage ? 'page-item active pe-none' : 'page-item'} onClick={() => {setCurrentPage(page)}}>\r\n\r\n            <span role=\"button\" className={'page-link'}>\r\n              {page}\r\n            </span>\r\n\r\n              </li>\r\n            )\r\n          } else {\r\n            return (\r\n              <li key={page} className={'pe-none'}>\r\n                <span role=\"button\" className={'page-link'}>\r\n                  {page}\r\n                </span>\r\n              </li>\r\n            )\r\n          }\r\n\r\n        })}\r\n\r\n        <li className={currentPage === params.last_page ? 'page-item disabled' : 'page-item'}>\r\n          <span role=\"button\" className={'page-link'} onClick={() => {setCurrentPage(currentPage + 1)}}>Next</span>\r\n        </li>\r\n\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pagination","export const initialTableParams = {\r\n  current_page: 1,\r\n  last_page: 1,\r\n  per_page: 15\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport {Container, Col} from \"react-bootstrap\"\r\n\r\nimport AppMainLayout from \"../../layouts/AppMainLayout\"\r\n\r\nimport FaxPageContext from \"../../contexts/FaxPageContext\"\r\n\r\nimport ToolsBar from \"./components/ToolsBar\"\r\nimport FaxList from \"./components/FaxList\"\r\nimport FaxView from \"./components/FaxView\"\r\nimport Pagination from \"../../components/Pagination\"\r\n\r\nimport {\r\n  getFaxes,\r\n  getUnreadCount,\r\n} from \"../../api/pages/faxes-page\"\r\n\r\nimport {initialTableParams} from \"../../constants/faxes\"\r\n\r\nimport style from './index.module.scss'\r\n\r\nconst Faxes = () => {\r\n  const [tableData, setTableData] = useState([])\r\n  const [tableParams, setTableParams] = useState(initialTableParams)\r\n\r\n  const [activeTab, setActiveTab] = useState('all')\r\n  const [previousTab, setPreviousTab] = useState(null)\r\n\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [searchParams, setSearchParams] = useState(null)\r\n\r\n  const [unreadCount, setUnreadCount] = useState(null)\r\n\r\n  const [selectedRow, setSelectedRow] = useState(null)\r\n\r\n  const [markedRows, setMarkedRows] = useState([])\r\n\r\n  const [searchBarState, setSearchBarState] = useState(true)\r\n  const [buttonBackState, setButtonBackState] = useState(false)\r\n\r\n  const [faxLogs, setFaxLogs] = useState([])\r\n\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const [pdfFile, setPdfFile] = useState('')\r\n\r\n  const updateData = (response) => {\r\n    if (response && response.status === 200 && response.data.faxes?.length) {\r\n      setTableData(response.data.faxes)\r\n      setTableParams(response.data.meta)\r\n      setSelectedRow(response.data.faxes.find(row => row.id === selectedRow?.id))\r\n    } else {\r\n      setTableData([])\r\n      setTableParams(initialTableParams)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    getFaxes(activeTab, currentPage)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          updateData(response)\r\n        }\r\n        if (response.status === 401) {\r\n          document.location.href = '/login'\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setLoading(false)\r\n      })\r\n  }, [currentPage, activeTab]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    getUnreadCount(currentPage)\r\n      .then(response => {\r\n        if (response.status === 200 && response.data && response.data.meta) {\r\n          setUnreadCount(response.data.meta.total)\r\n        } else {\r\n          setUnreadCount(0)\r\n        }\r\n      })\r\n  }, [tableData, currentPage, activeTab])\r\n\r\n  return (\r\n    <FaxPageContext.Provider value={{\r\n      tableParams,\r\n      tableData,\r\n      setTableData,\r\n      setTableParams,\r\n      activeTab,\r\n      setActiveTab,\r\n      previousTab,\r\n      setPreviousTab,\r\n      searchParams,\r\n      setSearchParams,\r\n      currentPage,\r\n      setCurrentPage,\r\n      searchBarState,\r\n      setSearchBarState,\r\n      buttonBackState,\r\n      setButtonBackState,\r\n      selectedRow,\r\n      setSelectedRow,\r\n      markedRows,\r\n      setMarkedRows,\r\n      unreadCount,\r\n      faxLogs,\r\n      setFaxLogs,\r\n      loading,\r\n      setLoading,\r\n      setUnreadCount,\r\n      updateData,\r\n      pdfFile,\r\n      setPdfFile\r\n    }}>\r\n\r\n        <AppMainLayout>\r\n            <Container className={style.container} fluid>\r\n                <div className={'d-flex justify-content-between bg-white border border-1 rounded rounded-3 p-1 mb-4'}>\r\n                    <ToolsBar/>\r\n                </div>\r\n\r\n                <div className={'d-flex gap-4 w-100'}>\r\n                    <Col className={'d-flex flex-column bg-white border rounded-5 p-3'}>\r\n                        <div className={'h-100'}>\r\n                            <FaxList />\r\n                        </div>\r\n\r\n                        <div className={tableParams.last_page > 1 ? 'ms-auto mt-4' : 'ms-auto mt-4 opacity-50'}>\r\n                            <Pagination\r\n                                params={tableParams}\r\n                                currentPage={currentPage}\r\n                                setCurrentPage={setCurrentPage}\r\n                                activeTab={activeTab}\r\n                                loading={loading}\r\n                            />\r\n                        </div>\r\n                    </Col>\r\n\r\n                    <Col className={'bg-white border rounded-5 overflow-hidden'}>\r\n                        <FaxView />\r\n                    </Col>\r\n                </div>\r\n            </Container>\r\n        </AppMainLayout>\r\n\r\n    </FaxPageContext.Provider>\r\n  )\r\n\r\n}\r\n\r\nexport default Faxes","import axios from 'axios'\r\n\r\nexport const getMessages = (page) => {\r\n    return axios.get(`/provider/messages?page=${page}`)\r\n}\r\n\r\nexport const deleteMessage = (payload) => {\r\n    return axios.post('/provider/messages/set-read', payload)\r\n}","import classNames from 'classnames';\r\nimport React from 'react'\r\nimport { mdiCloseCircle } from '@mdi/js'\r\nimport styles from './index.module.scss'\r\nimport Icon from '@mdi/react';\r\nimport { deleteMessage, getMessages } from '../../../../api/common/sidebar';\r\n\r\nconst Messages = () => {\r\n    const [currentPage, setCurrentPage] = React.useState(1);\r\n    const [messages, setMessages] = React.useState([]);\r\n    const [pagination, setPagination] = React.useState();\r\n    const [allDataIsLoaded, setAllDataIsLoaded] = React.useState(false)\r\n    const [loadingEl, setLoading] = React.useState(null)\r\n\r\n    const loaderRef = React.useRef(null);\r\n\r\n    const getProviderMessages = async (page) => {\r\n        try {\r\n            const response = await getMessages(page);\r\n\r\n            setMessages(prevMessages => ([...prevMessages, ...response.data.data]));\r\n\r\n            if (response.data.meta.pagination) {\r\n                setPagination(response.data.meta.pagination);\r\n            }\r\n\r\n            const newData = messages.concat(response.data.data);\r\n            if (newData.length >= response.data.meta.pagination.total) {\r\n                setAllDataIsLoaded(true);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const refreshMessages = async () => {\r\n        try {\r\n            setCurrentPage(1);\r\n            setAllDataIsLoaded(false);\r\n\r\n            const response = await getMessages(1);\r\n            setMessages(response.data.data);\r\n\r\n            if (response.data.meta.pagination) {\r\n                setPagination(response.data.meta.pagination);\r\n            }\r\n\r\n            if (response.data.data.length >= response.data.meta.pagination.total) {\r\n                setAllDataIsLoaded(true);\r\n            } else {\r\n                initIntersectionObserver();\r\n            }\r\n\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    const fullName = (app) => {\r\n        return app.first_name + ' ' + app.last_name + ' ' + app.middle_initial;\r\n    }\r\n\r\n    const deleteMessageClick = async (e, message, index) => {\r\n        e.stopPropagation();\r\n\r\n        if (loadingEl) {\r\n            return;\r\n        }\r\n\r\n        setLoading(index);\r\n        try {\r\n            const payload = {\r\n                mention_id: message.id,\r\n            };\r\n            await deleteMessage(payload);\r\n\r\n            await refreshMessages();\r\n\r\n        } catch (err) {\r\n            console.log(err);\r\n        } finally {\r\n            setLoading(null);\r\n        }\r\n    }\r\n\r\n    const openMessage = (message) => {\r\n        let url = `/chart/${message.comment.patient_id}?scrollto=${message.model + message.comment_id}`;\r\n        if (message.model === 'PatientLeadComment') {\r\n            url = `/new-patients-dashboard?selectedCard=${message.comment.patient_lead.inquiry.id}&comment=${message.comment.id}`;\r\n        }\r\n        document.location.href = url;\r\n    }\r\n\r\n    const initIntersectionObserver = () => {\r\n        const observer = new IntersectionObserver(\r\n            ([entry]) => {\r\n                if (entry.isIntersecting && messages.length) {\r\n                    setCurrentPage(page => {\r\n                        const newPage = page + 1\r\n                        getProviderMessages(newPage);\r\n                        return newPage\r\n                    })\r\n                }\r\n\r\n            },\r\n            {\r\n                root: null,\r\n                threshold: 0.5,\r\n            }\r\n        );\r\n\r\n        if (loaderRef.current) {\r\n            observer.observe(loaderRef.current);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getProviderMessages(currentPage)\r\n    }, [])\r\n\r\n    React.useEffect(() => {\r\n        initIntersectionObserver();\r\n    }, [messages]);\r\n    \r\n    return (\r\n        <div\r\n            className={classNames(\r\n                styles.messagesCard,\r\n                \"sidebar-section-container\",\r\n            )}>\r\n            <div className={classNames(styles.title, \"p-2 h6 m-0 fw-bolder\")}>\r\n                <span>Messages </span>\r\n                <span>{pagination ? `(${pagination.total})` : `(0)`}</span>\r\n            </div>\r\n            <div className=\"h-100\">\r\n                <table className=\"table m-0\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Patient Name</th>\r\n                            <th\r\n                                className=\"text-right\"\r\n                                style={{ whiteSpace: \"nowrap\" }}>\r\n                                Message from\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {messages.map((message, index) => {\r\n                            let statusColor = message.comment.patient\r\n                                ? `#${message.comment.patient.status.status_color}`\r\n                                : \"#000000\";\r\n                            let patient = message.comment.patient || message.comment.patient_lead;\r\n\r\n                            return (\r\n                                <tr\r\n                                    key={index}\r\n                                    onClick={() => openMessage(message)}>\r\n                                    <td>\r\n                                        <div\r\n                                            className={styles.text}\r\n                                            style={{ color: statusColor }}>\r\n                                            {fullName(patient)}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className={styles.text}>\r\n                                            {message.comment.provider\r\n                                                ? message.comment.provider\r\n                                                      .provider_name\r\n                                                : message.comment.provider_name}\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div\r\n                                            className={styles.text}\r\n                                            onClick={(e) =>\r\n                                                deleteMessageClick(\r\n                                                    e,\r\n                                                    message,\r\n                                                    index,\r\n                                                )\r\n                                            }>\r\n                                            {loadingEl === index && (\r\n                                                <div\r\n                                                    ref={loaderRef}\r\n                                                    className=\"position-absolute spinner-border spinner-border-sm text-primary\"\r\n                                                    role=\"status\"\r\n                                                    style={{ right: \"30px\" }}>\r\n                                                    <span className=\"visually-hidden\">\r\n                                                        Loading...\r\n                                                    </span>\r\n                                                </div>\r\n                                            )}\r\n                                                \r\n                                            {loadingEl !== index && (\r\n                                                <Icon\r\n                                                    path={mdiCloseCircle}\r\n                                                    style={{ display: \"block\" }}\r\n                                                    size={1}\r\n                                                    color=\"red\"\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            );\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n\r\n                {!allDataIsLoaded && (\r\n                    <div\r\n                        className={classNames(\r\n                            styles.loader,\r\n                            \"p-1 d-flex align-items-center justify-content-center\",\r\n                            messages.length === 0 && !allDataIsLoaded && \"h-100\",\r\n                        )}>\r\n                        <div\r\n                            ref={loaderRef}\r\n                            className=\"spinner-border text-primary\"\r\n                            role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Messages","import moment from \"moment-timezone\";\r\n\r\nconst globalTimezone =\r\n    process.env.REACT_APP_TIMEZONE === \"-08:00\" ? \"America/Los_Angeles\" : \"UTC\";\r\n\r\nmoment.tz.setDefault(globalTimezone);\r\n\r\nexport default moment;\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSuccess(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.99979 0.888672C6.59334 0.888672 5.21848 1.30573 4.04906 2.08711C2.87965 2.86849 1.9682 3.97909 1.42998 5.27848C0.891753 6.57786 0.750929 8.00767 1.02531 9.38709C1.2997 10.7665 1.97696 12.0336 2.97147 13.0281C3.96598 14.0226 5.23306 14.6999 6.61248 14.9743C7.9919 15.2486 9.4217 15.1078 10.7211 14.5696C12.0205 14.0314 13.1311 13.1199 13.9125 11.9505C14.6938 10.7811 15.1109 9.40623 15.1109 7.99978C15.1109 6.1138 14.3617 4.30506 13.0281 2.97147C11.6945 1.63788 9.88577 0.888672 7.99979 0.888672ZM12.6442 5.61312L6.80423 11.4487L3.35534 7.99978C3.23747 7.88191 3.17125 7.72204 3.17125 7.55534C3.17125 7.38864 3.23747 7.22877 3.35534 7.11089C3.47322 6.99302 3.63309 6.9268 3.79979 6.9268C3.96649 6.9268 4.12636 6.99302 4.24423 7.11089L6.81312 9.67978L11.7642 4.73312C11.8226 4.67475 11.8919 4.62845 11.9681 4.59687C12.0444 4.56528 12.1261 4.54902 12.2087 4.54902C12.2912 4.54902 12.3729 4.56528 12.4492 4.59687C12.5255 4.62845 12.5948 4.67475 12.6531 4.73312C12.7115 4.79148 12.7578 4.86077 12.7894 4.93703C12.821 5.01329 12.8372 5.09502 12.8372 5.17756C12.8372 5.2601 12.821 5.34183 12.7894 5.41809C12.7578 5.49435 12.7115 5.56364 12.6531 5.622L12.6442 5.61312Z\",\n    fill: \"#5AC499\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSuccess);\nexport default __webpack_public_path__ + \"static/media/success.ed401039.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiHelpCircle } from \"@mdi/js\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst HelpIcon = () => {\r\n    return (\r\n        <div className={styles.helpIcon}>\r\n            <Icon path={mdiHelpCircle} size={0.6} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HelpIcon;\r\n","export const ACTIVE_PATIENT_STATUS_ID = 1;\r\n\r\nexport const ACTIVE_PATIENT_STATUS_TITLE = \"Active\";\r\n\r\nexport const READY_TO_SEND_STAGE_ID = 1;\r\n\r\nexport const APPROVAL_RECEIVED_STAGE_ID = 3;\r\n\r\nexport const READY_TO_SEND_STAGE_TITLE = \"Ready to send\";\r\n\r\nexport const AUTH_UPDATED_STAGE_ID = 6;\r\n\r\nexport const OTHER_STAGE_ID = 8;\r\n\r\nexport const PATIENT_DOCUMENT_MODEL = \"PatientDocument\";\r\n\r\nexport const PATIENT_ELECTRONIC_DOCUMENT_MODEL = \"PatientElectronicDocument\";\r\n\r\nexport const PHONE_SEND_METHOD_NAME = \"phone\";\r\n\r\nexport const EMAIL_SEND_METHOD_NAME = \"email\";\r\n\r\nexport const FAX_SEND_METHOD_NAME = \"fax\";\r\n\r\nexport const EMAIL_LOG_ID = 1;\r\n\r\nexport const FAX_LOG_ID = 2;\r\n\r\nexport const PHONE_LOG_ID = 3;\r\n","import moment from \"moment-timezone\";\r\nimport {\r\n    EMAIL_LOG_ID,\r\n    EMAIL_SEND_METHOD_NAME,\r\n    FAX_LOG_ID,\r\n    FAX_SEND_METHOD_NAME,\r\n    PHONE_LOG_ID,\r\n    PHONE_SEND_METHOD_NAME,\r\n} from \"../constants/reauthorization-request-dashboard\";\r\n\r\nexport const getSendMethodNameFromId = (id) => {\r\n    switch (id) {\r\n        case EMAIL_LOG_ID:\r\n            return EMAIL_SEND_METHOD_NAME;\r\n        case FAX_LOG_ID:\r\n            return FAX_SEND_METHOD_NAME;\r\n        case PHONE_LOG_ID:\r\n            return PHONE_SEND_METHOD_NAME;\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nexport const getFirstElementFromLogsAndSharedDocuments = (\r\n    firstLog,\r\n    firstSharedDocument,\r\n) => {\r\n    if (!firstSharedDocument) {\r\n        return firstLog;\r\n    }\r\n\r\n    if (!firstLog) {\r\n        return firstSharedDocument;\r\n    }\r\n\r\n    const firstLogDate = moment(firstLog.created_at);\r\n    const firstSharedDocumentDate = moment(firstSharedDocument.created_at);\r\n\r\n    return firstLogDate.isBefore(firstSharedDocumentDate)\r\n        ? firstSharedDocument\r\n        : firstLog;\r\n};\r\n\r\nexport const getStageChangeHistory = (requestForm) => {\r\n    return requestForm.stage_change_history.map(item => {\r\n        return {\r\n            id: item.id,\r\n            user_name: item.user.meta.firstname + ' ' + item.user.meta.lastname,\r\n            old_stage: item.old_stage.name,\r\n            new_stage: item.new_stage.name,\r\n            comment: item.comment,\r\n            created_at: moment(item.created_at).format(\"MM/DD/YYYY\"),\r\n        }\r\n    });\r\n};\r\n\r\n","import React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { mdiHelpCircle } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst PatientStatusDateTooltip = ({ patientStatusDate }) => { \r\n    const getPatientDataStatusTooltipText = () => {\r\n        return {\r\n            __html: `<div>\r\n                Date: ${patientStatusDate} \r\n            </div>`\r\n        };\r\n    };\r\n\r\n    const tooltipText = getPatientDataStatusTooltipText();\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center gap-1\">\r\n            <OverlayTrigger\r\n                placement=\"bottom\"\r\n                overlay={\r\n                    <Tooltip>\r\n                        <div dangerouslySetInnerHTML={tooltipText}></div>\r\n                    </Tooltip>\r\n                }>\r\n                <div className={styles.helpIcon}>\r\n                    <Icon path={mdiHelpCircle} size={0.6} />\r\n                </div>\r\n            </OverlayTrigger>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientStatusDateTooltip;\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport styles from \"./index.module.scss\";\r\nimport PatientStatusDateTooltip from \"./../../../../components/PatientStatusDateTooltip\";\r\n\r\nconst CustomBadge = ({\r\n  title,\r\n  className,\r\n  background = \"\",\r\n  textColor = \"\",\r\n  statusUpdatedAt,\r\n}) => {\r\n    const badgeClasses = classNames(\"badge\", styles.badge, styles[className]);\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            <div className={badgeClasses} style={{ background, color: textColor, marginRight: '10px' }}>\r\n                {title}\r\n            </div>\r\n            {statusUpdatedAt !== null && statusUpdatedAt !== undefined && (\r\n                <PatientStatusDateTooltip patientStatusDate={statusUpdatedAt} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomBadge;\r\n","import { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport moment from \"../utilities/moment-config\";\r\nimport HelpIcon from \"../components/HelpIcon\";\r\nimport { getFirstElementFromLogsAndSharedDocuments } from \"../utilities/reauthorizationRequestsDashboardUtils\";\r\nimport CustomBadge from \"../pages/SecretaryDashboard/components/CustomBadge\";\r\n\r\nexport const patientNameValueCell = ({ row, value }) => {\r\n    const patientId = row.original.patient_id;\r\n    return (\r\n        <a className=\"text-decoration-none\" href={`/chart/${patientId}`}>\r\n            {value}\r\n        </a>\r\n    );\r\n};\r\n\r\nexport const patientNameWithScrollLinkValueCell = ({ row, value }) => {\r\n    const patientId = row.original.patient_id;\r\n\r\n    const document = row.original.document;\r\n\r\n    if (!document) {\r\n        return (\r\n            <a className=\"text-decoration-none\" href={`/chart/${patientId}`}>\r\n                {value}\r\n            </a>\r\n        );\r\n    }\r\n\r\n    const parts = document.document_type.split(\"\\\\\");\r\n    const documentModel = parts[parts.length - 1];\r\n\r\n    return (\r\n        <a\r\n            className=\"text-decoration-none\"\r\n            href={`/chart/${patientId}?scrollto=${documentModel}${document.id}`}>\r\n            {value}\r\n        </a>\r\n    );\r\n};\r\n\r\nexport const patientValueCell = ({ row, value }) => {\r\n    const patientId = row.original.id\r\n    return <a className='text-decoration-none' href={`/chart/${patientId}`}>{value}</a>\r\n}\r\n\r\nexport const dateValueCell = ({ value }) => {\r\n    if (! value) {\r\n        return '-';\r\n    }\r\n\r\n    const yesterdayDate = moment().subtract(1, \"day\").format(\"MM/DD/YYYY\");\r\n    const todayDate = moment().format(\"MM/DD/YYYY\");\r\n    const tomorrowDate = moment().add(1, \"day\").format(\"MM/DD/YYYY\");\r\n\r\n    if (value === yesterdayDate) {\r\n        return \"Yesterday\";\r\n    }\r\n    if (value === todayDate) {\r\n        return \"Today\";\r\n    }\r\n    if (value === tomorrowDate) {\r\n        return \"Tomorow\";\r\n    }\r\n\r\n    return value;\r\n};\r\n\r\nexport const sendMethodValueCell = (cell) => {\r\n    const value = cell.value.charAt(0).toUpperCase() + cell.value.slice(1);\r\n\r\n    let firstLog = cell.row.original.logs ? cell.row.original.logs[0] : null;\r\n    let firstSharedDocument = cell.row.original.document?.document_shared ? cell.row.original.document.document_shared[0] : null;\r\n\r\n    if (!firstLog && !firstSharedDocument) {\r\n        return value;\r\n    }\r\n\r\n    const firstElement = getFirstElementFromLogsAndSharedDocuments(\r\n        firstLog,\r\n        firstSharedDocument,\r\n    );\r\n\r\n    if (!firstElement.log_type) {\r\n        return value;\r\n    }\r\n\r\n    const comment = firstElement.comment;\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center gap-1\">\r\n            <span>{value}</span>\r\n            <OverlayTrigger\r\n                placement=\"bottom\"\r\n                overlay={\r\n                    <Tooltip>\r\n                        <div>{comment}</div>\r\n                    </Tooltip>\r\n                }>\r\n                <div>\r\n                    <HelpIcon />\r\n                </div>\r\n            </OverlayTrigger>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const progressNoteLinkCell = ({ row, value }) => {\r\n    return <a\r\n        className='text-decoration-none'\r\n        href={'/chart/' + value.patients_id + '?progress_note_id=' + value.id}\r\n        target=\"_blank\" rel=\"noreferrer\"\r\n    >View</a>\r\n}\r\n\r\nexport const creditCardBadgeCell = ({ value }) => {\r\n    let className = \"red\";\r\n    let title = \"No\";\r\n\r\n    if (value) {\r\n        const now = moment();\r\n        const expirationDate = moment().set({\r\n            date: 1,\r\n            month: value.exp_month - 1, // month number starts with 0 here. 1 is February, 2 is March etc.\r\n            year: value.exp_year,\r\n        });\r\n\r\n        const formattedExpirationDate = expirationDate.format('MM/YY');\r\n\r\n        if (expirationDate.clone().add(1, 'month').isSameOrBefore(now)) {\r\n            className = \"red\";\r\n            title = `Yes, expired ${formattedExpirationDate}`;\r\n        } else if (expirationDate.isSameOrBefore(now)) {\r\n            className = \"yellow\";\r\n            title = `Yes, expires ${formattedExpirationDate}`;\r\n        } else {\r\n            className = \"green\";\r\n            title = \"Yes\";\r\n        }\r\n    }\r\n\r\n    return <CustomBadge title={title} className={className}/>;\r\n};\r\n\r\nexport const reauthorizationRequestDocumentCell = ({row, value}) => {\r\n    let title = \"Not created\";\r\n    let className = \"red\";\r\n\r\n    if (row.original.insurance_plan && !row.original.insurance_plan.requires_reauthorization_document) {\r\n        title = \"Not required\";\r\n        className = \"yellow\";\r\n    } else if (value) {\r\n        title = \"Created\";\r\n        className = \"green\";\r\n    }\r\n\r\n    return <CustomBadge title={title} className={className}/>;\r\n}\r\n\r\n","export const sortingName = (rowA, rowB, columnId) => {\r\n    const nameA = rowA.values[columnId].toLowerCase();\r\n    const nameB = rowB.values[columnId].toLowerCase();\r\n\r\n    if (nameA < nameB) return -1;\r\n    if (nameA > nameB) return 1;\r\n    return 0;\r\n};\r\n\r\nexport const sortingTimeFormatAmPm = (rowA, rowB, columnName) => {\r\n    let timeA = new Date(`2000-01-01 ${rowA.original[columnName]}`);\r\n    let timeB = new Date(`2000-01-01 ${rowB.original[columnName]}`);\r\n\r\n    if (timeA < timeB) {\r\n        return -1;\r\n    }\r\n    if (timeA > timeB) {\r\n        return 1;\r\n    }\r\n\r\n    return 0;\r\n};\r\n\r\nexport const sortingDate = (rowA, rowB, columnName) => {\r\n    const valueA = rowA.original[columnName];\r\n    const valueB = rowB.original[columnName];\r\n\r\n    if (valueA === \"-\" && valueB === \"-\") {\r\n        return 0;\r\n    } else if (valueA === \"-\") {\r\n        return -1;\r\n    } else if (valueB === \"-\") {\r\n        return 1;\r\n    } else {\r\n        const dateA = new Date(valueA);\r\n        const dateB = new Date(valueB);\r\n        return dateA - dateB;\r\n    }\r\n};\r\n\r\nexport const sortingStatus = (rowA, rowB, columnName) => {\r\n    const statusA = rowA.values[columnName].status;\r\n    const statusB = rowB.values[columnName].status;\r\n\r\n    return statusA.localeCompare(statusB);\r\n};\r\n\r\nexport const sortingFormStatus = (rowA, rowB, columnName) => {\r\n    const valueA = rowA.original[columnName]?.created_at;\r\n    const valueB = rowB.original[columnName]?.created_at;\r\n\r\n    if (!valueA && !valueB) {\r\n        return 0;\r\n    } else if (!valueA) {\r\n        return -1;\r\n    } else if (!valueB) {\r\n        return 1;\r\n    } else {\r\n        const dateA = new Date(valueA);\r\n        const dateB = new Date(valueB);\r\n        return dateA - dateB;\r\n    }\r\n};\r\n\r\nexport const sortingReauthorizationRequestDocument = (rowA, rowB, columnName) => {\r\n    let valueA = 'Not created';\r\n    let valueB = 'Not created';\r\n    if (rowA.original.insurance_plan && !rowA.original.insurance_plan.requires_reauthorization_document) {\r\n        valueA = \"Not required\";\r\n    } else if (rowA.original[columnName]) {\r\n        valueA = \"Created\";\r\n    }\r\n    if (rowB.original.insurance_plan && !rowB.original.insurance_plan.requires_reauthorization_document) {\r\n        valueB = \"Not required\";\r\n    } else if (rowB.original[columnName]) {\r\n        valueB = \"Created\";\r\n    }\r\n\r\n    if (valueA < valueB) return -1;\r\n    if (valueA > valueB) return 1;\r\n    return 0;\r\n};\r\n","import classNames from 'classnames'\r\nimport moment from '../../../../utilities/moment-config';\r\nimport React from 'react'\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap'\r\nimport styles from '../CustomBadge/index.module.scss'\r\n\r\nconst FormStatusBadge = ({ formStatus }) => {\r\n    if (!formStatus) {\r\n        return <div className={classNames('badge', styles.badge, styles.red)}>Not sent</div>\r\n    }\r\n\r\n    const createdAt = moment(formStatus.created_at, 'YYYY-MM-DD hh:mm:ss').format('MM/DD/YYYY');\r\n\r\n    if (formStatus.sent_to_phone) {\r\n        if (formStatus.sent_to_phone_error) {\r\n            return (\r\n                <div className={classNames('badge', styles.badge, styles.red)}>{createdAt}</div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className={classNames('badge', styles.badge, styles.green)}>{createdAt}</div>\r\n        )\r\n    }\r\n\r\n    const arrayOfKeys = [\r\n        'deferral_at',\r\n        'hard_bounced_at',\r\n        'soft_bounced_at',\r\n        'bounced_at',\r\n        'spam_at',\r\n        'unsub_at',\r\n        'rejected_at'\r\n    ]\r\n\r\n    const checkingProperties = () => {\r\n        for (let i = 0; i < arrayOfKeys.length; i++) {\r\n            if (formStatus[arrayOfKeys[i]]) {\r\n                return true\r\n            }\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    if (checkingProperties()) {\r\n        const changePropertyNameToDisplay = (key) => {\r\n        if (key === 'deferral_at') {\r\n            return 'Deferral'\r\n        }\r\n        if (key === 'hard_bounced_at') {\r\n            return 'Hard bounced'\r\n        }\r\n        if (key === 'soft_bounced_at') {\r\n            return 'Soft bounced'\r\n        }\r\n        if (key === 'bounced_at') {\r\n            return 'Bounced'\r\n        }\r\n        if (key === 'spam_at') {\r\n            return 'Spam'\r\n        }\r\n        if (key === 'unsub_at') {\r\n            return 'Unsubscribed'\r\n        }\r\n        if (key === 'rejected_at') {\r\n            return 'Rejected'\r\n        }\r\n        }\r\n\r\n        let reason = []\r\n\r\n        arrayOfKeys.forEach(key => {\r\n            if (formStatus[key]) {\r\n                reason.push(changePropertyNameToDisplay(key))\r\n            }\r\n        })\r\n\r\n        return <div>\r\n            <OverlayTrigger\r\n                placement=\"top\"\r\n                overlay={<Tooltip>{reason.join(', ')}</Tooltip>}\r\n            >\r\n                <div className={classNames('badge', styles.badge, styles.red)}>{createdAt}</div>\r\n            </OverlayTrigger>\r\n        </div>\r\n    }\r\n    \r\n    return (\r\n        <div className={classNames('badge', styles.badge, styles.green)}>{createdAt}</div>\r\n    )\r\n}\r\n\r\nexport default FormStatusBadge","export default __webpack_public_path__ + \"static/media/telephone-fill.8ab62727.svg\";","import axios from 'axios';\r\n\r\nexport const getRingCentralNumbers = () => {\r\n    return axios.get('/api/ringcentral/account-numbers');\r\n}\r\n\r\nexport const getRingCentralPatientCallDetails = (patientId, patientType) => {\r\n    return axios.get(`api/ringcentral/patients/${patientId}/call-details?patient_type=${patientType}`);\r\n}\r\n\r\nexport const patientRingOutCall = (payload) => {\r\n    return axios.post('/api/ringcentral/patients/ring-out', payload);\r\n}\r\n\r\nexport const patientLogExternalRingOutCall = (payload) => {\r\n    return axios.post('/api/ringcentral/patients/log-external-ring-out', payload);\r\n}\r\n\r\nexport const updateRingOutCall = (id, payload) => {\r\n    return axios.put(`/api/ringcentral/ring-out/${id}`, payload);\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    ringCentralNumbers: [],\r\n    callLog: {},\r\n    user: null,\r\n    userData: {\r\n        isOnlyAdmin: false,\r\n        isLoadedIsOnlyAdmin: false,\r\n    },\r\n    queryParams: {},\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"app\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setRingCentralNumbersAC(state, action) {\r\n            state.ringCentralNumbers = action.payload.numbers;\r\n        },\r\n        setCallLogAC(state, action) {\r\n            state.callLog = action.payload.callLog;\r\n        },\r\n        setUserAC(state, action) {\r\n            state.user = action.payload.user;\r\n        },\r\n        setQueryParamsAC(state, action) {\r\n            state.queryParams = action.payload.data;\r\n        },\r\n        setUserDataIsOnlyAdminAC(state, action) {\r\n            state.userData.isOnlyAdmin = action.payload.value;\r\n        },\r\n        setUserDataIsLoadedIsOnlyAdminAC(state, action) {\r\n            state.userData.isLoadedIsOnlyAdmin = action.payload.value;\r\n        },\r\n    },\r\n});\r\nexport const appReducer = slice.reducer;\r\nexport const {\r\n    setRingCentralNumbersAC,\r\n    setCallLogAC,\r\n    setUserAC,\r\n    setQueryParamsAC,\r\n    setUserDataIsOnlyAdminAC,\r\n    setUserDataIsLoadedIsOnlyAdminAC\r\n} = slice.actions;\r\n","import { findNumbers, parsePhoneNumber } from 'libphonenumber-js';\r\n\r\nexport const getUsFormat = (phone) => {\r\n    if (!phone) {\r\n        return phone;\r\n    }\r\n    \r\n    let phoneTo = findNumbers(\r\n        phone,\r\n        'US',\r\n        { v2: true }\r\n    );\r\n\r\n    if (phoneTo.length > 0) {\r\n        if (phoneTo[0].number.country == 'US') {\r\n            return parsePhoneNumber(phoneTo[0].number.nationalNumber, \"US\").formatNational();\r\n        } else {\r\n            return phone;\r\n        }\r\n    } else {\r\n        return phone;\r\n    }\r\n}\r\n\r\nexport const getFullUsFormat = (phone) => {\r\n    if (!phone) {\r\n        return phone;\r\n    }\r\n\r\n    let phoneTo = findNumbers(\r\n        phone,\r\n        'US',\r\n        { v2: true }\r\n    );\r\n\r\n    if (phoneTo.length > 0) {\r\n        if (phoneTo[0].number.country == 'US') {\r\n            return parsePhoneNumber(phoneTo[0].number.nationalNumber, \"US\").formatInternational();\r\n        } else {\r\n            return phone;\r\n        }\r\n    } else {\r\n        return phone;\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport InputMask from 'react-input-mask';\r\n\r\nconst PhoneInput = ({phone, setPhone, placeholder = \"\", disabled = false, className = '', error = false, alwaysShowMask = false}) => {\r\n  return (\r\n    <InputMask\r\n        mask=\"(999)-999-9999\"\r\n        alwaysShowMask={alwaysShowMask}\r\n        className={classNames('form-control', error && 'is-invalid', className)}\r\n        value={phone}\r\n        disabled={disabled}\r\n        onChange={(e) => setPhone(e.target.value)}\r\n        placeholder={placeholder}\r\n    />\r\n  )\r\n}\r\n\r\nexport default PhoneInput;\r\n","export const INBOX_LANE_ID = 1;\r\n\r\nexport const IN_PROGRESS_LANE_ID = 2;\r\n\r\nexport const APPOINTMENT_SCHEDULED_LANE_ID = 3;\r\n\r\nexport const ON_HOLD_LANE_ID = 4;\r\n\r\nexport const ONBOARDING_COMPLETE_LANE_ID = 5;\r\n\r\nexport const INITIAL_APPOINTMENT_COMPLETE_LANE_ID = 6;\r\n\r\nexport const INITIAL_SURVEY_COMPLETE_LANE_ID = 7;\r\n\r\nexport const FOUR_APPOINTMENTS_COMPLETE_LANE_ID = 8;\r\n\r\nexport const ARCHIVED_INQUIRIES_LANE_ID = 9;\r\n\r\nexport const NEW_PATIENTS_DASHBOARD_STAGES = {\r\n    INBOX: \"Inbox\",\r\n    IN_PROGRESS: \"In progress\",\r\n    APPOINTMENT_SCHEDULED: \"Appointment scheduled\",\r\n    ONBOARDING_COMPLETE: \"Onboarding complete\",\r\n    INITIAL_APPOINTMENT_COMPLETE: \"Initial appointment complete\",\r\n    INITIAL_SURVEY_COMPLETE: \"Initial survey complete\",\r\n    FOUR_APPOINTMENTS_COMPLETE: \"4 Appointments Complete\",\r\n    ON_HOLD: \"On hold\",\r\n    ARCHIVED: \"Archived\",\r\n};\r\n\r\nexport const NEW_PATIENTS_DASHBOARD_PROBLEMATIC_CARDS = {\r\n    DAYS_FOR_INBOX: 1,\r\n    DAYS_FOR_IN_PROGRESS: 7,\r\n    PROBLEMATIC_CARD_COLOR: \"#FEE4E2\",\r\n    HAS_CANCELLED_APPOINTMENT_CARD_COLOR: \"rgb(254, 241, 226)\",\r\n    DEFAULT_CARD_COLOR: \"#fff\",\r\n};\r\n\r\nexport const CANCELLATION_COMMENT_TYPE = 2;\r\n\r\nexport const RESCHEDULE_COMMENT_TYPE = 3;\r\n\r\nexport const CREATION_COMMENT_TYPE = 4;\r\n\r\nexport const INITIAL_SURVEY_COMMENT_TYPE = 5;\r\n\r\nexport const ONBOARDING_COMPLETE_COMMENT_TYPE = 6;\r\n\r\nexport const CHANGE_VISIT_FREQUENCY_COMMENT_TYPE = 7;\r\n\r\nexport const SECOND_SURVEY_COMMENT_TYPE = 8;\r\n\r\nexport const CREDIT_CARD_ON_FOLE_FORM_TYPE_ID = 7;\r\n\r\nexport const PAYMENT_FOR_SERVICE_FORM_TYPE_ID = 2;\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRingCentralPatientCallDetails, patientRingOutCall, patientLogExternalRingOutCall } from '../../api/common/ringCentral';\r\nimport { setCallLogAC } from '../../store/reducers/app.reducer';\r\nimport { getFormattedDateTime } from '../../mixins/date-format';\r\nimport { getUsFormat } from '../../mixins/phone-format';\r\nimport PhoneInput from '../Inputs/PhoneInput';\r\nimport { APPOINTMENT_SCHEDULED_LANE_ID, INITIAL_APPOINTMENT_COMPLETE_LANE_ID, FOUR_APPOINTMENTS_COMPLETE_LANE_ID } from '../../constants/new-patients-dashboard';\r\n\r\nconst initialCallData = { phoneFrom: '', customFrom: '', phoneTo: '', playPrompt: true };\r\n\r\nconst CallModal = ({ patientId, patientType, showModal, closeModal, openCallResultModal }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { ringCentralNumbers } = useSelector(state => state.app);\r\n    const { lanes, callModalData } = useSelector(state => state.newPatientsDashboard);\r\n\r\n    const [patient, setPatient] = React.useState(null);\r\n    const [callData, setCallData] = React.useState(initialCallData);\r\n    const [errors, setErrors] = React.useState({});\r\n    const [submitDisabled, setSubmitDisabled] = React.useState(false);\r\n\r\n    const setInitialData = () => {\r\n        setPatient(null);\r\n        setCallData(initialCallData);\r\n        setErrors({});\r\n        setSubmitDisabled(false);\r\n    };\r\n\r\n    const getPhoneTo = () => {\r\n        if (!patient) {\r\n            return '';\r\n        }\r\n\r\n        const currentInquiry = getCurrentInquiry();\r\n        if (\r\n            currentInquiry &&\r\n            currentInquiry.stageId === APPOINTMENT_SCHEDULED_LANE_ID &&\r\n            patient.onboarding_phone\r\n        ) {\r\n            return patient.onboarding_phone;\r\n        }\r\n\r\n        return patient.cell_phone || patient.home_phone || patient.work_phone;\r\n    };\r\n\r\n    const getCurrentInquiry = () => {\r\n        let inquiry = null;\r\n\r\n        if (!callModalData) {\r\n            return null;\r\n        }\r\n\r\n        lanes.forEach((lane) => {\r\n            lane.cards.forEach((card) => {\r\n                const isPatientCreated =\r\n                    callModalData.patientType === \"patient\";\r\n\r\n                if (\r\n                    card.inquirable.id === callModalData.patientId &&\r\n                    card.isPatientCreated === isPatientCreated\r\n                ) {\r\n                    inquiry = card;\r\n                }\r\n            });\r\n        });\r\n\r\n        return inquiry;\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        if (showModal) {\r\n            getRingCentralPatientCallDetails(patientId, patientType)\r\n                .then(({ data }) => {\r\n                    setPatient(data);\r\n                })\r\n                .catch((err) => {\r\n                    setPatient(null);\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            setInitialData();\r\n        }\r\n    }, [showModal]);\r\n\r\n    React.useEffect(() => {\r\n        const phoneTo = getPhoneTo();\r\n        setCallData({ ...callData, phoneTo: phoneTo.replace(/\\D+/g, '') });\r\n    }, [patient]);\r\n\r\n    React.useEffect(() => {\r\n        if (callData.phoneFrom) {\r\n            setErrors(err => {\r\n                let errors = { ...err };\r\n                delete errors.phoneFrom;\r\n                return errors;\r\n            });\r\n        }\r\n        if (callData.customFrom) {\r\n            setErrors(err => {\r\n                let errors = { ...err };\r\n                delete errors.customFrom;\r\n                return errors;\r\n            });\r\n        }\r\n        if (callData.phoneTo) {\r\n            setErrors(err => {\r\n                let errors = { ...err };\r\n                delete errors.phoneTo;\r\n                return errors;\r\n            });\r\n        }\r\n    }, [callData]);\r\n\r\n    const call = async () => {\r\n        try {\r\n            setSubmitDisabled(true);\r\n            \r\n            const currentInquiry = getCurrentInquiry();\r\n            const onlyForAdmin = !!currentInquiry \r\n                && (currentInquiry.stageId === INITIAL_APPOINTMENT_COMPLETE_LANE_ID || currentInquiry.stageId === FOUR_APPOINTMENTS_COMPLETE_LANE_ID);\r\n            \r\n            let errors = {};\r\n\r\n            let payload = {\r\n                patient_id: patientId,\r\n                patient_type: patientType,\r\n                phone_from: callData.phoneFrom,\r\n                phone_to: callData.phoneTo,\r\n                play_prompt: callData.playPrompt,\r\n                only_for_admin: onlyForAdmin,\r\n            };\r\n\r\n            if (callData.phoneFrom === 'custom_number') {\r\n                if (callData.customFrom) {\r\n                    payload.phone_from = callData.customFrom;\r\n                } else {\r\n                    errors = { ...errors, customFrom: 'Custom number is required' };\r\n                }\r\n            } else if (!callData.phoneFrom) {\r\n                errors = { ...errors, phoneFrom: 'Phone from field is required' };\r\n            }\r\n            if (!callData.phoneTo) {\r\n                errors = { ...errors, phoneTo: 'Phone to field is required' };\r\n            }\r\n\r\n            if (Object.keys(errors).length > 0) {\r\n                setErrors(errors);\r\n                setSubmitDisabled(false);\r\n                return;\r\n            }\r\n\r\n            const response = await patientRingOutCall(payload);\r\n            const callLog = {...response.data.call_log, phone_to: callData.phoneTo};\r\n\r\n            if (!callLog) {\r\n                return;\r\n            }\r\n\r\n            dispatch(setCallLogAC({ callLog }));\r\n\r\n            closeModal();\r\n            setTimeout(() => {\r\n                openCallResultModal();\r\n            }, 500);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const logExternalCall = async () => {\r\n        try {\r\n            setSubmitDisabled(true);\r\n\r\n            const currentInquiry = getCurrentInquiry();\r\n            const onlyForAdmin = !!currentInquiry \r\n                && (currentInquiry.stageId === INITIAL_APPOINTMENT_COMPLETE_LANE_ID || currentInquiry.stageId === FOUR_APPOINTMENTS_COMPLETE_LANE_ID);\r\n\r\n            let errors = {};\r\n\r\n            let payload = {\r\n                patient_id: patientId,\r\n                patient_type: patientType,\r\n                phone_from: callData.phoneFrom,\r\n                phone_to: callData.phoneTo,\r\n                play_prompt: callData.playPrompt,\r\n                only_for_admin: onlyForAdmin,\r\n            };\r\n\r\n            if (callData.phoneFrom === 'custom_number') {\r\n                if (callData.customFrom) {\r\n                    payload.phone_from = callData.customFrom;\r\n                } else {\r\n                    errors = { ...errors, customFrom: 'Custom number is required' };\r\n                }\r\n            } else if (!callData.phoneFrom) {\r\n                errors = { ...errors, phoneFrom: 'Phone from field is required' };\r\n            } \r\n            if (!callData.phoneTo) {\r\n                errors = { ...errors, phoneTo: 'Phone from field is required' };\r\n            }\r\n\r\n            if (Object.keys(errors).length > 0) {\r\n                setErrors(errors);\r\n                setSubmitDisabled(false);\r\n                return;\r\n            }\r\n\r\n            makeExternalCall(getUsFormat(callData.phoneTo));\r\n\r\n            const response = await patientLogExternalRingOutCall(payload);\r\n            const callLog = {...response.data.call_log, phone_to: callData.phoneTo};\r\n\r\n            if (!callLog) {\r\n                return;\r\n            }\r\n\r\n            dispatch(setCallLogAC({ callLog }));\r\n\r\n            closeModal();\r\n            setTimeout(() => {\r\n                openCallResultModal();\r\n            }, 500);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    const makeExternalCall = (phone) => {\r\n        const a = document.createElement('a');\r\n        a.style.display = 'none';\r\n        a.href = `tel:${phone}`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        a.remove();\r\n    }\r\n\r\n    return (\r\n        <Modal show={showModal} size=\"lg\" className=\"custom-modal\" backdrop=\"true\" onHide={closeModal} centered>\r\n            <Modal.Header closeButton>\r\n                {patient\r\n                    ? <h4 className='modal-title m-0'>Call Patient - {patient.first_name} {patient.last_name}</h4>\r\n                    : <h4 className='modal-title m-0'>Call Patient</h4>}\r\n            </Modal.Header>\r\n\r\n            <Modal.Body>\r\n                {patient\r\n                    ? <div>\r\n                        <div className='d-flex flex-column gap-1'>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"d-flex\">\r\n                                        <div className=\"flex-grow-1\" style={{ marginRight: '12px' }}>\r\n                                            <div className=\"d-flex\">\r\n                                                <div className=\"flex-grow-1\" style={{ marginRight: '12px' }}>\r\n                                                    <div className=\"form-group custom-form-group mb-3\">\r\n                                                        <label>From:</label>\r\n                                                        <select\r\n                                                            id=\"caller_number\"\r\n                                                            name=\"From Number\"\r\n                                                            defaultValue={callData.phoneFrom}\r\n                                                            className={`form-select ${errors.phoneFrom ? 'is-invalid' : ''}`}\r\n                                                            onChange={(e) => setCallData({ ...callData, phoneFrom: e.target.value })}\r\n                                                        >\r\n                                                            <option value=\"\" disabled>Select number</option>\r\n                                                            {ringCentralNumbers.map((number, index) => <option key={index} value={number.phoneNumber}> {getUsFormat(number.phoneNumber)} </option>)}\r\n                                                            <option value=\"custom_number\">Custom number</option>\r\n                                                        </select>\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            {errors.phoneFrom}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    {callData.phoneFrom === 'custom_number' && <div className=\"form-group custom-form-group mb-3\">\r\n                                                        <PhoneInput\r\n                                                            phone={callData.customFrom}\r\n                                                            setPhone={(value) => setCallData({ ...callData, customFrom: value.replace(/\\D+/g, '') })}\r\n                                                            error={!!errors.customFrom}\r\n                                                            alwaysShowMask={true}\r\n                                                        />\r\n                                                        <div className=\"invalid-feedback\">\r\n                                                            {errors.customFrom}\r\n                                                        </div>\r\n                                                    </div>}\r\n                                                </div>\r\n\r\n                                                <div className=\"form-group custom-form-group flex-grow-1\">\r\n                                                    <label>To:</label>\r\n                                                    <PhoneInput\r\n                                                        phone={callData.phoneTo}\r\n                                                        setPhone={(value) => setCallData({ ...callData, phoneTo: value.replace(/\\D+/g, '') })}\r\n                                                        error={!!errors.phoneTo}\r\n                                                        alwaysShowMask={true}\r\n                                                    />\r\n                                                    <div className=\"invalid-feedback\">\r\n                                                        {errors.phoneTo}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group custom-form-group\">\r\n                                                <div className=\"checkbox prompt-checkbox\">\r\n                                                    <label htmlFor=\"prompt_call\" className='d-flex gap-2' style={{ width: 'fit-content' }}>\r\n                                                        <input\r\n                                                            type=\"checkbox\"\r\n                                                            id=\"prompt_call\"\r\n                                                            defaultChecked={callData.playPrompt}\r\n                                                            onChange={(e) => setCallData({ ...callData, playPrompt: e.target.checked })}\r\n                                                        />\r\n                                                        <span>Prompt me to press 1 before connecting the call</span>\r\n                                                    </label>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"d-flex\" style={{ paddingTop: '24px' }}>\r\n                                            <button\r\n                                                disabled={submitDisabled}\r\n                                                className=\"btn btn-primary btn-large text-white\"\r\n                                                style={{ marginRight: '12px' }}\r\n                                                onClick={call}\r\n                                            >\r\n                                                Call via EHR\r\n                                            </button>\r\n                                            <button\r\n                                                disabled={submitDisabled}\r\n                                                className=\"btn btn-primary btn-large text-white\"\r\n                                                onClick={logExternalCall}\r\n                                            >\r\n                                                Call via RC App\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <hr />\r\n                        \r\n                        <h5>Call Logs</h5>\r\n                        <table className=\"table table-striped table-call-log m-0\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Date</th>\r\n                                    <th>Status</th>\r\n                                    <th>Called by</th>\r\n                                    <th className=\"col-xs-6\">Comment</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {patient.ringcentral_call_logs.length > 0\r\n                                    ? patient.ringcentral_call_logs.map((log, index) => <tr key={index}>\r\n                                        <td>{getFormattedDateTime(log.created_at)}</td>\r\n                                        <td>{log.call_status_title}</td>\r\n                                        <td>\r\n                                            <p>\r\n                                                {log.user?.meta.firstname} {log.user?.meta.lastname}\r\n                                            </p>\r\n                                        </td>\r\n                                        <td>{log.comment}</td>\r\n                                    </tr>)\r\n                                    : <tr>\r\n                                        <td colSpan=\"4\" className=\"text-center p-4 h6\">\r\n                                            No data\r\n                                        </td>\r\n                                    </tr>}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    : <div className=\"p-1 d-flex align-items-center justify-content-center\" style={{ height: '230px' }}>\r\n                        <div className=\"spinner-border text-primary\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>}\r\n            </Modal.Body>\r\n\r\n            <Modal.Footer>\r\n                <button className=\"btn btn-large btn-outline-primary\" onClick={closeModal}>Cancel</button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default CallModal;","import moment from \"../utilities/moment-config\";\r\n\r\nexport const getFormattedDateTime = (date) => {\r\n    return moment(date).format('MM/DD/YYYY hh:mm A');\r\n}\r\n\r\nexport const getFormattedTime = (date) => {\r\n    return moment(date).format('h:mm A');\r\n}\r\n\r\nexport const getFormattedDate = (date) => {\r\n    return moment(date).format('DD MMM. YYYY h:mm A');\r\n}\r\n\r\nexport const getFormattedDateSimple = (date) => {\r\n    return moment(date).format('MM/DD/YYYY');\r\n}\r\n\r\nexport const getCommentTime = (date, nowrap, nowrap_all) => {\r\n    if (typeof nowrap === 'undefined' || !nowrap) {\r\n        return moment(date).format('DD MMM. YYYY, h:mm A');\r\n    }\r\n\r\n    let s = '';\r\n\r\n    if (typeof nowrap_all === 'undefined' || !nowrap_all) {\r\n        s += '<nobr>' + moment(date).format('DD MMM. YYYY') + '</nobr>';\r\n        s += ', ';\r\n        s += '<nobr>' + moment(date).format('h:mm A') + '</nobr>';\r\n    } else {\r\n        s += '<nobr>' + moment(date).format('DD MMM. YYYY, h:mm A') + '</nobr>';\r\n    }\r\n\r\n    return s;\r\n}\r\n\r\nexport const getDurationFormat = (duration) => {\r\n    if (duration) {\r\n        return moment.utc(duration).format('HH:mm:ss');\r\n    }\r\n\r\n    return '00:00:00';\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst CallResultContext = createContext();\r\n\r\nexport default CallResultContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport CallResultContext from \"../../../../contexts/CallResultContext\";\r\n\r\nconst initialFormData = { comment: \"\" };\r\n\r\nconst CommentModal = () => {\r\n    const {\r\n        errors,\r\n        setErrors,\r\n        clearError,\r\n        showModal,\r\n        closeModal,\r\n        isSaving,\r\n        handleSubmit,\r\n    } = useContext(CallResultContext);\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n\r\n    const handleInputComment = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if (value) {\r\n            clearError([\"comment\"]);\r\n        }\r\n\r\n        setFormData({ ...formData, comment: value });\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (!formData.comment) {\r\n            errors.comment = \"Field is required.\";\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSaveClick = async () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n        try {\r\n            await handleSubmit(formData);\r\n\r\n            handleCloseModal();\r\n        } catch (err) {\r\n\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        closeModal();\r\n        resetModal();\r\n    }\r\n\r\n    const resetModal = () => {\r\n        setFormData(initialFormData);\r\n        setErrors({});\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            className=\"custom-modal\"\r\n            backdrop=\"true\"\r\n            onHide={handleCloseModal}\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <h4 className=\"m-0\">Call Comment</h4>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <textarea\r\n                        name=\"comment\"\r\n                        id=\"comment\"\r\n                        className={`form-control ${\r\n                            errors.comment ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                        rows=\"4\"\r\n                        placeholder=\"Add your comment...\"\r\n                        value={formData.comment}\r\n                        onChange={handleInputComment}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.comment}</div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {isSaving ? (\r\n                    <div\r\n                        className=\"text-primary spinner-border spinner-border-md\"\r\n                        role=\"status\"></div>\r\n                ) : (\r\n                    <button\r\n                        className=\"btn btn-primary btn-large text-white\"\r\n                        onClick={handleSaveClick}>\r\n                        Save\r\n                    </button>\r\n                )}\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CommentModal;\r\n","import axios from \"axios\";\r\n// import { getMockDataForNewPatientsDashboard } from \"../../pages/NewPatientsDashboard/getMockDataFunctions\";\r\n\r\nexport const getInquiriesByStage = (params) => {\r\n    return axios.get(`api/new-patients-crm/inquiries`, {\r\n        params,\r\n    });\r\n};\r\n\r\nexport const getArchivedInquiries = (params) => {\r\n    return axios.get(`api/new-patients-crm/inquiries/archived`, {\r\n        params\r\n    });\r\n};\r\n\r\nexport const createInquiry = (payload) => {\r\n    return axios.post(`api/new-patients-crm/inquiries`, payload);\r\n};\r\n\r\nexport const createPatientFromPatientLeadForInquiry = (payload) => {\r\n    return axios.post(\r\n        `api/new-patients-crm/inquiries/${payload.id}/create-patient-from-patient-lead`,\r\n    );\r\n};\r\n\r\nexport const updateInquiry = (payload) => {\r\n    return axios.put(`api/new-patients-crm/inquiries/${payload.id}`, payload);\r\n};\r\n\r\nexport const getInquirablesWithoutActiveInquiries = ({\r\n    page,\r\n    limit,\r\n    search_query,\r\n}) => {\r\n    const searchQuery = search_query ? `&search_query=${search_query}` : \"\";\r\n    return axios.get(\r\n        `api/new-patients-crm/leads/inquirables-without-active-inquiries?page=${page}&limit=${limit}` +\r\n            searchQuery,\r\n    );\r\n};\r\n\r\nexport const archiveInquiry = ({ id, data }) => {\r\n    return axios.post(`/api/new-patients-crm/inquiries/${id}/archive`, data);\r\n};\r\n\r\nexport const getInquiryComments = ({ id, page }) => {\r\n    return axios.get(\r\n        `api/new-patients-crm/inquiries/${id}/comments?page=${page}`,\r\n    );\r\n};\r\n\r\nexport const changeState = ({ id, data }) => {\r\n    return axios.post(\r\n        `/api/new-patients-crm/inquiries/${id}/change-stage`,\r\n        data,\r\n    );\r\n};\r\n\r\nexport const createInquiryComment = ({ id, data }) => {\r\n    return axios.post(`api/new-patients-crm/inquiries/${id}/comments`, data);\r\n};\r\n\r\nexport const createOnboardingCompleteComment = ({ id, data }) => {\r\n    return axios.post(\r\n        `api/new-patients-crm/inquiries/${id}/onboarding-complete-comment`,\r\n        data,\r\n    );\r\n};\r\n\r\nexport const createInitialSurveyComment = ({ id, data }) => {\r\n    return axios.post(\r\n        `api/new-patients-crm/inquiries/${id}/initial-survey-comment`,\r\n        data,\r\n    );\r\n};\r\n\r\nexport const createSecondSurveyComment = ({ id, data }) => {\r\n    return axios.post(\r\n        `api/new-patients-crm/inquiries/${id}/second-survey-comment`,\r\n        data,\r\n    );\r\n};\r\n\r\nexport const getCompletedInitialAppointment = (id) => {\r\n    return axios.get(`api/new-patients-crm/inquiries/${id}/completed-initial-appointment`);\r\n}\r\n\r\nexport const getCompletedAppointments = (id) => {\r\n    return axios.get(\r\n        `api/new-patients-crm/inquiries/${id}/completed-appointments`,\r\n    );\r\n};\r\n\r\nexport const getRegistrationMethods = () => {\r\n    return axios.get(`/api/new-patients-crm/registration-methods`);\r\n};\r\n\r\nexport const getChannels = () => {\r\n    return axios.get(`/api/new-patients-crm/channels`);\r\n};\r\n\r\nexport const getSources = () => {\r\n    return axios.get(`/api/new-patients-crm/sources`);\r\n};\r\n\r\nexport const createSource = (name) => {\r\n    return axios.post('/api/new-patients-crm/sources', { name });\r\n};\r\n\r\nexport const getLanguages = () => {\r\n    return axios.get(\"api/system/languages\");\r\n};\r\n\r\nexport const getProviders = ({ page, limit }) => {\r\n    return axios.get(`api/providers?page=${page}&limit=${limit}`);\r\n};\r\n\r\nexport const getInsurances = ({ page, limit }) => {\r\n    return axios.get(`api/insurances?page=${page}&limit=${limit}`);\r\n};\r\n\r\nexport const getEligibilityPayers = ({ page, limit }) => {\r\n    return axios.get(`api/eligibility-payers?page=${page}&limit=${limit}`);\r\n};\r\n\r\nexport const getInsuranceProcedures = () => {\r\n    return axios.get(`api/insurance-procedures`);\r\n};\r\n\r\nexport const getDiagnoses = ({ query = \"\" } = {}) => {\r\n    return axios.get(`api/system/diagnoses/autocomplete?q=${query}`);\r\n};\r\n\r\nexport const getTherapyTypes = () => {\r\n    return axios.get(`api/therapy-types`);\r\n};\r\n\r\nexport const getDocumentTypesTree = () => {\r\n    return axios.get(\"/documents/types-tree\");\r\n};\r\n\r\nexport const uploadPatientFile = (payload) => {\r\n    return axios.post(`patient/upload-file`, payload);\r\n};\r\n\r\nexport const uploadPatientLeadFile = (id, payload) => {\r\n    return axios.post(`api/new-patients-crm/leads/${id}/upload-file`, payload);\r\n};\r\n\r\nexport const setPatientDocumentType = (payload) => {\r\n    return axios.post(\"/documents/set-type\", payload);\r\n};\r\n\r\nexport const setPatientLeadDocumentType = (payload) => {\r\n    return axios.put(\r\n        `api/new-patients-crm/leads/documents/${payload.document_id}/set-type`,\r\n        payload,\r\n    );\r\n};\r\n\r\nexport const deletePatientDocument = (payload) => {\r\n    return axios.post(`documents/delete`, payload);\r\n};\r\n\r\nexport const deletePatientLeadDocument = (id) => {\r\n    return axios.delete(`api/new-patients-crm/leads/documents/${id}`);\r\n};\r\n\r\nexport const getProvidersDatasetForTribute = () => {\r\n    return axios.get(\"/provider/dataset-for-tribute\");\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n    INBOX_LANE_ID,\r\n    IN_PROGRESS_LANE_ID,\r\n    APPOINTMENT_SCHEDULED_LANE_ID,\r\n    ON_HOLD_LANE_ID,\r\n    ONBOARDING_COMPLETE_LANE_ID,\r\n    INITIAL_APPOINTMENT_COMPLETE_LANE_ID,\r\n    ARCHIVED_INQUIRIES_LANE_ID,\r\n    NEW_PATIENTS_DASHBOARD_STAGES,\r\n    INITIAL_SURVEY_COMPLETE_LANE_ID,\r\n    FOUR_APPOINTMENTS_COMPLETE_LANE_ID,\r\n} from \"../../constants/new-patients-dashboard\";\r\n\r\nconst initialState = {\r\n    lanes: [\r\n        {\r\n            id: ARCHIVED_INQUIRIES_LANE_ID,\r\n            titleText: NEW_PATIENTS_DASHBOARD_STAGES.ARCHIVED,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n        {\r\n            id: INBOX_LANE_ID,\r\n            titleText: NEW_PATIENTS_DASHBOARD_STAGES.INBOX,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n        {\r\n            id: IN_PROGRESS_LANE_ID,\r\n            titleText: NEW_PATIENTS_DASHBOARD_STAGES.IN_PROGRESS,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n        {\r\n            id: APPOINTMENT_SCHEDULED_LANE_ID,\r\n            titleText: NEW_PATIENTS_DASHBOARD_STAGES.APPOINTMENT_SCHEDULED,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n        {\r\n            id: ONBOARDING_COMPLETE_LANE_ID,\r\n            titleText: NEW_PATIENTS_DASHBOARD_STAGES.ONBOARDING_COMPLETE,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n        {\r\n            id: INITIAL_APPOINTMENT_COMPLETE_LANE_ID,\r\n            titleText:\r\n                NEW_PATIENTS_DASHBOARD_STAGES.INITIAL_APPOINTMENT_COMPLETE,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n        {\r\n            id: INITIAL_SURVEY_COMPLETE_LANE_ID,\r\n            titleText: NEW_PATIENTS_DASHBOARD_STAGES.INITIAL_SURVEY_COMPLETE,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n        {\r\n            id: FOUR_APPOINTMENTS_COMPLETE_LANE_ID,\r\n            titleText: NEW_PATIENTS_DASHBOARD_STAGES.FOUR_APPOINTMENTS_COMPLETE,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n        {\r\n            id: ON_HOLD_LANE_ID,\r\n            titleText: NEW_PATIENTS_DASHBOARD_STAGES.ON_HOLD,\r\n            label: \"\",\r\n            currentPage: 1,\r\n            lastPage: 1,\r\n            cards: [],\r\n        },\r\n    ],\r\n    filters: {\r\n        source: [],\r\n    },\r\n    searchValue: \"\",\r\n    showAddPatientModal: false,\r\n    selectedCardData: null,\r\n    fileTypeSelection: {\r\n        showModal: false,\r\n        fileId: null,\r\n        patientIsCreated: false,\r\n    },\r\n    removeCardData: null,\r\n    moveCardData: null,\r\n    eventBus: undefined,\r\n    registrationMethods: [],\r\n    channels: [],\r\n    sources: [],\r\n    languages: null,\r\n    patientsData: {\r\n        pageIndex: 1,\r\n        pageSize: 20,\r\n        lastPageIndex: 20,\r\n        list: [],\r\n    },\r\n    providersData: {\r\n        pageIndex: 1,\r\n        pageSize: 20,\r\n        lastPageIndex: 20,\r\n        list: [],\r\n    },\r\n    insurancesData: {\r\n        pageIndex: 1,\r\n        pageSize: 10,\r\n        lastPageIndex: 10,\r\n        list: [],\r\n    },\r\n    eligibilityPayersData: {\r\n        pageIndex: 1,\r\n        pageSize: 20,\r\n        lastPageIndex: 20,\r\n        list: [],\r\n    },\r\n    insuranceProcedures: [],\r\n    diagnoses: [],\r\n    therapyTypes: [],\r\n    callModalData: null,\r\n    preferredPhoneList: [\r\n        { id: 0, value: \"C\", text: \"Cell Phone\" },\r\n        { id: 1, value: \"H\", text: \"Home Phone\" },\r\n        { id: 2, value: \"W\", text: \"Work Phone\" },\r\n        { id: 3, value: \"D\", text: \"DO NOT CALL\" },\r\n    ],\r\n    documentTypes: [],\r\n    providersDatasetForTribute: null,\r\n    loading: true,\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"newPatientsDashboard\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setLanesInTableAC(state, action) {\r\n            state.lanes = action.payload.data;\r\n        },\r\n        setDataInLaneAC(state, action) {\r\n            const { data, meta, laneId } = action.payload;\r\n            const { current_page, total, last_page } = meta;\r\n\r\n            const laneIndex = state.lanes.findIndex(\r\n                (lane) => lane.id === laneId,\r\n            );\r\n\r\n            state.lanes[laneIndex].cards = data;\r\n            state.lanes[laneIndex].currentPage = current_page;\r\n            state.lanes[laneIndex].label = String(total);\r\n            state.lanes[laneIndex].lastPage = last_page;\r\n\r\n            return state;\r\n        },\r\n        cardMoveAcrossLanesAC(state, action) {\r\n            const { fromLaneId, toLaneId, cardId, index, cardDetails } =\r\n                action.payload.data;\r\n            const fromLaneIndex = state.lanes.findIndex(\r\n                (lane) => lane.id === fromLaneId,\r\n            );\r\n            const toLaneIndex = state.lanes.findIndex(\r\n                (lane) => lane.id === toLaneId,\r\n            );\r\n\r\n            state.lanes[fromLaneIndex].cards = state.lanes[\r\n                fromLaneIndex\r\n            ].cards.filter((item) => item.id !== cardId);\r\n\r\n            state.lanes[toLaneIndex].cards.splice(index, 0, cardDetails);\r\n\r\n            state.lanes[fromLaneIndex].label = String(Number(state.lanes[fromLaneIndex].label) - 1);\r\n            state.lanes[toLaneIndex].label = String(Number(state.lanes[toLaneIndex].label) + 1);\r\n        },\r\n        addCardAC(state, action) {\r\n            const { laneId, card } = action.payload;\r\n\r\n            const laneIndex = state.lanes.findIndex(\r\n                (lane) => lane.id === laneId,\r\n            );\r\n\r\n            state.lanes[laneIndex].cards.unshift(card);\r\n            state.lanes[laneIndex].label = String(Number(state.lanes[laneIndex].label) + 1);\r\n        },\r\n        updateCardDataAC(state, action) {\r\n            const meta = action.payload.meta;\r\n\r\n            const laneIndex = state.lanes.findIndex(\r\n                (lane) => lane.id === meta.stageId,\r\n            );\r\n            const cardIndex = state.lanes[laneIndex].cards.findIndex(\r\n                (card) => card.id === meta.id,\r\n            );\r\n\r\n            state.lanes[laneIndex].cards[cardIndex] = {\r\n                ...state.lanes[laneIndex].cards[cardIndex],\r\n                ...action.payload.data,\r\n            };\r\n        },\r\n        deleteCardAC(state, action) {\r\n            const { laneId, cardId } = action.payload;\r\n\r\n            const laneIndex = state.lanes.findIndex(\r\n                (lane) => lane.id === laneId,\r\n            );\r\n            const cardIndex = state.lanes[laneIndex].cards.findIndex(\r\n                (card) => card.id === cardId,\r\n            );\r\n\r\n            state.lanes[laneIndex].cards.splice(cardIndex, 1);\r\n            state.lanes[laneIndex].label = String(Number(state.lanes[laneIndex].label) - 1);\r\n        },\r\n        setShowAddPatientModalAC(state, action) {\r\n            state.showAddPatientModal = action.payload.value;\r\n        },\r\n        setSelectedCardDataAC(state, action) {\r\n            state.selectedCardData = action.payload.data;\r\n        },\r\n        addCommentToSelectedCardDataAC(state, action) {\r\n            state.selectedCardData.data.comments.push(action.payload.comment);\r\n        },\r\n        setRemoveCardDataAC(state, action) {\r\n            state.removeCardData = action.payload.data;\r\n        },\r\n        setMoveCardDataAC(state, action) {\r\n            state.moveCardData = action.payload.data;\r\n        },\r\n        setEventBusAC(state, action) {\r\n            state.eventBus = action.payload.eventBus;\r\n        },\r\n        setSearchValueAC(state, action) {\r\n            state.searchValue = action.payload.value;\r\n        },\r\n        setFiltersAC(state, action) {\r\n            state.filters = action.payload.data;\r\n        },\r\n        setRegistrationMethodsAC(state, action) {\r\n            state.registrationMethods = action.payload.data;\r\n        },\r\n        setChannelsAC(state, action) {\r\n            state.channels = action.payload.data;\r\n        },\r\n        setSourcesAC(state, action) {\r\n            state.sources = action.payload.data;\r\n        },\r\n        addValueToSourcesAC(state, action) {\r\n            const { id, name, channel_id } = action.payload;\r\n\r\n            const channel = state.channels.find(\r\n                (channel) => channel.id === channel_id,\r\n            );\r\n            const source = { id, name, channel_id, channel };\r\n            state.sources.push(source);\r\n        },\r\n        setLanguagesAC(state, action) {\r\n            state.languages = action.payload.languages;\r\n        },\r\n        setPatientsDataAC(state, action) {\r\n            state.patientsData = action.payload.data;\r\n        },\r\n        setProvidersDataAC(state, action) {\r\n            state.providersData = action.payload.data;\r\n        },\r\n        setInsurancesDataAC(state, action) {\r\n            state.insurancesData = action.payload.data;\r\n        },\r\n        setEligibilityPayersDataAC(state, action) {\r\n            state.eligibilityPayersData = action.payload.data;\r\n        },\r\n        setInsuranceProceduresAC(state, action) {\r\n            state.insuranceProcedures = action.payload.data;\r\n        },\r\n        setDiagnosesAC(state, action) {\r\n            state.diagnoses = action.payload.data;\r\n        },\r\n        setTherapyTypesAC(state, action) {\r\n            state.therapyTypes = action.payload.data;\r\n        },\r\n        setCallModalDataAC(state, action) {\r\n            state.callModalData = action.payload.data;\r\n        },\r\n        setLoadingAC(state, action) {\r\n            state.loading = action.payload.value;\r\n        },\r\n        setFileTypeSelectionAC(state, action) {\r\n            state.fileTypeSelection = action.payload.data;\r\n        },\r\n        setDocumentTypesAC(state, action) {\r\n            state.documentTypes = action.payload.data;\r\n        },\r\n        setCommentsInSelectedCardDataAC(state, action) {\r\n            if (state.selectedCardData) {\r\n                state.selectedCardData.comments = action.payload.data;\r\n            }\r\n        },\r\n        setProvidersDatasetForTributeAC(state, action) {\r\n            state.providersDatasetForTribute = action.payload.data;\r\n        },\r\n    },\r\n});\r\nexport const newPatientsDashboardReducer = slice.reducer;\r\nexport const {\r\n    setLanesInTableAC,\r\n    setDataInLaneAC,\r\n    cardMoveAcrossLanesAC,\r\n    addCardAC,\r\n    updateCardDataAC,\r\n    deleteCardAC,\r\n    setShowAddPatientModalAC,\r\n    setSelectedCardDataAC,\r\n    addCommentToSelectedCardDataAC,\r\n    setRemoveCardDataAC,\r\n    setMoveCardDataAC,\r\n    setEventBusAC,\r\n    setSearchValueAC,\r\n    setFiltersAC,\r\n    setRegistrationMethodsAC,\r\n    setChannelsAC,\r\n    setSourcesAC,\r\n    addValueToSourcesAC,\r\n    setLanguagesAC,\r\n    setPatientsDataAC,\r\n    setProvidersDataAC,\r\n    setInsurancesDataAC,\r\n    setEligibilityPayersDataAC,\r\n    setInsuranceProceduresAC,\r\n    setDiagnosesAC,\r\n    setTherapyTypesAC,\r\n    setCallModalDataAC,\r\n    setLoadingAC,\r\n    setFileTypeSelectionAC,\r\n    setDocumentTypesAC,\r\n    setCommentsInSelectedCardDataAC,\r\n    setProvidersDatasetForTributeAC,\r\n} = slice.actions;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport CallResultContext from \"../../../../contexts/CallResultContext\";\r\nimport moment from \"moment-timezone\";\r\nimport { mdiCheckBold, mdiClose, mdiExclamationThick } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport { CREDIT_CARD_ON_FOLE_FORM_TYPE_ID, ONBOARDING_COMPLETE_LANE_ID } from \"../../../../constants/new-patients-dashboard\";\r\nimport styles from \"./index.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport { createOnboardingCompleteComment } from \"../../../../api/pages/new-patients-dashboard-page\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as NewPatientsDashboardReducer from \"../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport { getUsFormat } from \"../../../../mixins/phone-format\";\r\n\r\nconst AppointmentScheduledModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, callLog } = useSelector((state) => state.app);\r\n    const { eventBus } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n    const initialFormData = { comment: \"\", phone: \"\" };\r\n\r\n    const {\r\n        currentInquiry,\r\n        errors,\r\n        setErrors,\r\n        clearError,\r\n        showModal,\r\n        closeModal,\r\n        isSaving,\r\n        handleSubmit,\r\n    } = useContext(CallResultContext);\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n\r\n    const handleInputComment = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if (value) {\r\n            clearError([\"comment\"]);\r\n        }\r\n\r\n        setFormData({ ...formData, comment: value });\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (!formData.comment) {\r\n            errors.comment = \"Field is required.\";\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSaveClick = async () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const [commentResult, submitResult] = await Promise.all([\r\n                createOnboardingCompleteComment({\r\n                    id: currentInquiry.id,\r\n                    data: formData,\r\n                }),\r\n                handleSubmit(formData),\r\n            ]);\r\n\r\n            const onboardingCompleteComment = {...commentResult.data, admin: user};\r\n\r\n            const newStageId = ONBOARDING_COMPLETE_LANE_ID;\r\n\r\n            const updatedCardData = {\r\n                ...currentInquiry,\r\n                onboardingCompleteComment,\r\n                stageId: newStageId,\r\n            };\r\n\r\n            dispatch(\r\n                NewPatientsDashboardReducer.cardMoveAcrossLanesAC({\r\n                    data: {\r\n                        cardDetails: updatedCardData,\r\n                        fromLaneId: currentInquiry.stageId,\r\n                        toLaneId: newStageId,\r\n                        cardId: currentInquiry.id,\r\n                        index: 0,\r\n                    },\r\n                }),\r\n            );\r\n            \r\n            eventBus.publish({\r\n                type: \"MOVE_CARD\",\r\n                fromLaneId: currentInquiry.stageId,\r\n                toLaneId: newStageId,\r\n                cardId: currentInquiry.id,\r\n                index: 0,\r\n            });\r\n\r\n            eventBus.publish({\r\n                type: \"UPDATE_CARD\",\r\n                laneId: newStageId,\r\n                card: updatedCardData,\r\n            });\r\n    \r\n            handleCloseModal();\r\n        } catch (error) {\r\n\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (callLog) {\r\n            setFormData({...formData, phone: callLog.phone_to});\r\n        }\r\n    }, [callLog])\r\n\r\n    const handleCloseModal = () => {\r\n        closeModal();\r\n        resetModal();\r\n    }\r\n\r\n    const resetModal = () => {\r\n        setFormData(initialFormData);\r\n        setErrors({});\r\n    }\r\n\r\n    const { onboardingDate, onboardingTime } = currentInquiry;\r\n\r\n    const formattedOnboardingDate = onboardingDate\r\n        ? moment(onboardingDate, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\")\r\n        : \"-\";\r\n\r\n    const formattedOnboardingTime = onboardingTime || \"-\";\r\n\r\n    let coPay = \"-\";\r\n    let deductible = \"-\";\r\n\r\n    const alert = currentInquiry.inquirable.alert;\r\n    if (alert) {\r\n        coPay = `$${alert.co_pay}`;\r\n        deductible = `$${alert.deductible}`;\r\n    }\r\n\r\n    const onboardingPhone = currentInquiry.onboardingPhone\r\n        ? getUsFormat(currentInquiry.onboardingPhone)\r\n        : \"-\";\r\n\r\n    const formsIsFilled = Boolean(currentInquiry.inquirable.last_document);\r\n\r\n    const requireCreditCard =\r\n        currentInquiry.inquirable.last_document_request?.items.some(\r\n            (item) => item.form_type_id === CREDIT_CARD_ON_FOLE_FORM_TYPE_ID,\r\n        );\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            className=\"custom-modal\"\r\n            backdrop=\"true\"\r\n            onHide={handleCloseModal}\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <h4 className=\"m-0\">Call Comment</h4>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <textarea\r\n                        name=\"comment\"\r\n                        id=\"comment\"\r\n                        className={`form-control ${\r\n                            errors.comment ? \"is-invalid\" : \"\"\r\n                        }`}\r\n                        rows=\"4\"\r\n                        placeholder=\"Add your comment...\"\r\n                        value={formData.comment}\r\n                        onChange={handleInputComment}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.comment}</div>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    <div className=\"w-50 d-flex flex-column gap-2\">\r\n                        <div className=\"d-flex flex-column\">\r\n                            <div className=\"fw-bold\">Onboarding time:</div>\r\n                            <div>\r\n                                {`${formattedOnboardingDate} ${formattedOnboardingTime}`}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center gap-1\">\r\n                            <div className=\"fw-bold\">Co-pay:</div>\r\n                            <div>{coPay || \"-\"}</div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center gap-1\">\r\n                            <div className=\"fw-bold\">Deductible:</div>\r\n                            <div>{deductible || \"-\"}</div>\r\n                        </div>\r\n                        <div className=\"d-flex flex-column\">\r\n                            <div className=\"fw-bold\">Message:</div>\r\n                            <div>\r\n                                {currentInquiry.inquirable.alert?.message ||\r\n                                    \"-\"}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center gap-1\">\r\n                            <div className=\"fw-bold\">Phone:</div>\r\n                            <div>{onboardingPhone}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"w-50\">\r\n                        <div className=\"d-flex align-items-center gap-1\">\r\n                            <div\r\n                                className={classNames(\r\n                                    styles.indicator,\r\n                                    formsIsFilled\r\n                                        ? styles.green\r\n                                        : styles.yellow,\r\n                                )}>\r\n                                <Icon\r\n                                    path={\r\n                                        formsIsFilled\r\n                                            ? mdiCheckBold\r\n                                            : mdiExclamationThick\r\n                                    }\r\n                                    size={0.4}\r\n                                />\r\n                            </div>\r\n                            <span>All forms</span>\r\n                        </div>\r\n                        <div className=\"d-flex align-items-center gap-1\">\r\n                            <div\r\n                                className={classNames(\r\n                                    styles.indicator,\r\n                                    requireCreditCard\r\n                                        ? styles.green\r\n                                        : styles.red,\r\n                                )}>\r\n                                <Icon\r\n                                    path={\r\n                                        requireCreditCard\r\n                                            ? mdiCheckBold\r\n                                            : mdiClose\r\n                                    }\r\n                                    size={0.4}\r\n                                />\r\n                            </div>\r\n                            <span>Require credit card</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {isSaving ? \r\n                    <div\r\n                    className=\"text-primary spinner-border spinner-border-md\"\r\n                    role=\"status\"></div> \r\n                : \r\n                    <button\r\n                        className=\"btn btn-primary btn-large text-white\"\r\n                        onClick={handleSaveClick}>\r\n                        Save\r\n                    </button>\r\n                }\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AppointmentScheduledModal;\r\n","import { createContext } from \"react\";\r\n\r\nconst SurveyModalContext = createContext();\r\n\r\nexport default SurveyModalContext;\r\n","import { mdiStar, mdiStarOutline } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport classNames from \"classnames\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst StarRating = ({\r\n    value,\r\n    fieldName,\r\n    handleStarClick = () => {},\r\n    readOnly = false,\r\n}) => {\r\n    const [hoveredIndexService, setHoveredIndexService] = useState(-1);\r\n\r\n    const handleStarHoverService = (index) => {\r\n        setHoveredIndexService(index);\r\n    };\r\n\r\n    const getPath = (index) => {\r\n        if (readOnly) {\r\n            return index < value ? mdiStar : mdiStarOutline;\r\n        }\r\n        return index <= hoveredIndexService || index < value\r\n            ? mdiStar\r\n            : mdiStarOutline;\r\n    };\r\n\r\n    const handleMouseEnter = (index) => {\r\n        if (readOnly) {\r\n            return;\r\n        }\r\n\r\n        handleStarHoverService(index);\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n        if (readOnly) {\r\n            return;\r\n        }\r\n\r\n        setHoveredIndexService(-1);\r\n    };\r\n\r\n    const getClassName = (index) => {\r\n        if (readOnly) {\r\n            return \"\";\r\n        }\r\n        return classNames(\r\n            styles.star,\r\n            index <= hoveredIndexService && styles.starHover,\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex gap-1\">\r\n            {Array.from({ length: 5 }, (_, index) => (\r\n                <Icon\r\n                    key={index}\r\n                    path={getPath(index)}\r\n                    size={0.9}\r\n                    onClick={() => handleStarClick(index, fieldName)}\r\n                    onMouseEnter={() => handleMouseEnter(index)}\r\n                    onMouseLeave={handleMouseLeave}\r\n                    className={getClassName(index)}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StarRating;\r\n","import React from \"react\";\r\n\r\nconst SurveyAppointmentsInfo = ({ appointments }) => {\r\n    return (\r\n        <div>\r\n            <h5>Appointment info</h5>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Time</th>\r\n                        <th>Provider Name</th>\r\n                        <th>Status</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {appointments.length > 0 ? (\r\n                        appointments.map((appointment, index) => (\r\n                            <tr key={index}>\r\n                                <td>{appointment.date_of_service.date}</td>\r\n                                <td>{appointment.date_of_service.time}</td>\r\n                                <td>{appointment.provider.provider_name}</td>\r\n                                <td>{appointment.status.status}</td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"4\" className=\"text-center\">\r\n                                <div\r\n                                    className=\"text-primary spinner-border spinner-border-md\"\r\n                                    role=\"status\"></div>\r\n                            </td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SurveyAppointmentsInfo;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    createInitialSurveyComment,\r\n    getCompletedInitialAppointment,\r\n} from \"../../../../../../api/pages/new-patients-dashboard-page\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { cardMoveAcrossLanesAC } from \"../../../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport {\r\n    INITIAL_SURVEY_COMMENT_TYPE,\r\n    INITIAL_SURVEY_COMPLETE_LANE_ID,\r\n} from \"../../../../../../constants/new-patients-dashboard\";\r\nimport StarRating from \"../../../../../StarRating\";\r\nimport SurveyAppointmentsInfo from \"../SurveyAppointmentsInfo\";\r\nimport SurveyModalContext from \"../../../../../../contexts/SurveyModalContext\";\r\n\r\nconst initialFormData = {\r\n    comment: \"\",\r\n    comment_type: INITIAL_SURVEY_COMMENT_TYPE,\r\n    appointment_id: null,\r\n    metadata: {\r\n        service_rate: 0,\r\n        provider_rate: 0,\r\n        suggestions: \"\",\r\n    },\r\n};\r\n\r\nconst InitialSurveyModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { eventBus } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n    const {\r\n        showModal,\r\n        isSaving,\r\n        currentInquiry,\r\n        formData,\r\n        setFormData,\r\n        handleSubmit,\r\n        completedAppointments,\r\n        setCompletedAppointments,\r\n        handleInputComment,\r\n        hasSuggestions,\r\n        handleHasSuggestionsChange,\r\n        handleInputSuggestions,\r\n        handleStarClick,\r\n        errors,\r\n        setErrors,\r\n        handleCloseModal,\r\n    } = useContext(SurveyModalContext);\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (!formData.comment) {\r\n            errors.comment = \"Field is required.\";\r\n        }\r\n\r\n        if (formData.metadata.service_rate === 0) {\r\n            errors.service_rate = \"Field is required.\";\r\n        }\r\n\r\n        if (formData.metadata.provider_rate === 0) {\r\n            errors.provider_rate = \"Field is required.\";\r\n        }\r\n\r\n        if (hasSuggestions && !formData.metadata.suggestions) {\r\n            errors.suggestions = \"Field is required.\";\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSaveClick = async () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const payload = { comment: formData.comment };\r\n\r\n            await Promise.all([\r\n                createInitialSurveyComment({\r\n                    id: currentInquiry.id,\r\n                    data: formData,\r\n                }),\r\n                handleSubmit(payload),\r\n            ]);\r\n\r\n            updateCardOnBoard();\r\n\r\n            handleCloseModal();\r\n        } catch (error) {}\r\n    };\r\n\r\n    const updateCardOnBoard = () => {\r\n        const newStageId = INITIAL_SURVEY_COMPLETE_LANE_ID;\r\n\r\n        const updatedCard = {\r\n            ...currentInquiry,\r\n            initialSurveyComplete: true,\r\n            stageId: newStageId,\r\n        };\r\n\r\n        dispatch(\r\n            cardMoveAcrossLanesAC({\r\n                data: {\r\n                    cardDetails: updatedCard,\r\n                    fromLaneId: currentInquiry.stageId,\r\n                    toLaneId: newStageId,\r\n                    cardId: currentInquiry.id,\r\n                    index: 0,\r\n                },\r\n            }),\r\n        );\r\n\r\n        eventBus.publish({\r\n            type: \"MOVE_CARD\",\r\n            fromLaneId: currentInquiry.stageId,\r\n            toLaneId: newStageId,\r\n            cardId: currentInquiry.id,\r\n            index: 0,\r\n        });\r\n\r\n        eventBus.publish({\r\n            type: \"UPDATE_CARD\",\r\n            laneId: newStageId,\r\n            card: updatedCard,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!showModal) {\r\n            return;\r\n        }\r\n\r\n        getCompletedInitialAppointment(currentInquiry.id).then(({ data }) => {\r\n            setCompletedAppointments([data]);\r\n            const a = {\r\n                ...initialFormData,\r\n                appointment_id: data.id,\r\n            };\r\n\r\n            setFormData(a);\r\n        });\r\n    }, [showModal]);\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            className=\"custom-modal\"\r\n            backdrop=\"true\"\r\n            onHide={handleCloseModal}\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <h4 className=\"m-0\">Call Comment</h4>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <SurveyAppointmentsInfo appointments={completedAppointments} />\r\n                <div className=\"form-group custom-form-group\">\r\n                    <textarea\r\n                        name=\"comment\"\r\n                        id=\"comment\"\r\n                        className={classNames(\r\n                            \"form-control\",\r\n                            errors.comment && \"is-invalid\",\r\n                        )}\r\n                        rows=\"4\"\r\n                        placeholder=\"Add your comment...\"\r\n                        value={formData.comment}\r\n                        onChange={handleInputComment}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.comment}</div>\r\n                </div>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <label className=\"form-label fw-bold\">\r\n                        On a scale of 1-5 (with 5 being the highest) how do you\r\n                        rate the services you just received?\r\n                    </label>\r\n                    <StarRating\r\n                        value={formData.metadata.service_rate}\r\n                        fieldName=\"service_rate\"\r\n                        handleStarClick={handleStarClick}\r\n                    />\r\n                    <input\r\n                        hidden\r\n                        className={classNames(\r\n                            errors.service_rate && \"is-invalid\",\r\n                        )}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors.service_rate}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <label className=\"form-label fw-bold\">\r\n                        On a scale of 1-5 (with 5 being the highest) how do you\r\n                        rate the provider that was assigned to you?\r\n                    </label>\r\n                    <StarRating\r\n                        value={formData.metadata.provider_rate}\r\n                        fieldName=\"provider_rate\"\r\n                        handleStarClick={handleStarClick}\r\n                    />\r\n                    <input\r\n                        hidden\r\n                        className={classNames(\r\n                            errors.provider_rate && \"is-invalid\",\r\n                        )}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors.provider_rate}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <label className=\"form-label fw-bold\">\r\n                        Do you have any suggestions as to how we can elevate\r\n                        your experience with Change WithinReach?\r\n                    </label>\r\n                    <div className=\"d-flex gap-2\">\r\n                        <label className=\"form-check-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"experience\"\r\n                                value=\"Yes\"\r\n                                checked={hasSuggestions}\r\n                                onChange={handleHasSuggestionsChange}\r\n                                className=\"form-check-input\"\r\n                            />{\" \"}\r\n                            Yes\r\n                        </label>\r\n                        <label className=\"form-check-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"experience\"\r\n                                value=\"No\"\r\n                                checked={!hasSuggestions}\r\n                                onChange={handleHasSuggestionsChange}\r\n                                className=\"form-check-input\"\r\n                            />{\" \"}\r\n                            No\r\n                        </label>\r\n                    </div>\r\n                    {hasSuggestions && (\r\n                        <div className=\"mt-1\">\r\n                            <textarea\r\n                                name=\"suggestions\"\r\n                                id=\"suggestions\"\r\n                                className={classNames(\r\n                                    \"form-control\",\r\n                                    errors.suggestions && \"is-invalid\",\r\n                                )}\r\n                                rows=\"4\"\r\n                                value={formData.metadata.suggestions}\r\n                                onChange={handleInputSuggestions}\r\n                                placeholder=\"Enter suggestions...\"\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {errors.suggestions}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {isSaving ? (\r\n                    <div\r\n                        className=\"text-primary spinner-border spinner-border-md\"\r\n                        role=\"status\"></div>\r\n                ) : (\r\n                    <button\r\n                        className=\"btn btn-primary btn-large text-white\"\r\n                        onClick={handleSaveClick}>\r\n                        Save\r\n                    </button>\r\n                )}\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default InitialSurveyModal;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    createSecondSurveyComment,\r\n    getCompletedAppointments,\r\n} from \"../../../../../../api/pages/new-patients-dashboard-page\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateCardDataAC } from \"../../../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport { SECOND_SURVEY_COMMENT_TYPE } from \"../../../../../../constants/new-patients-dashboard\";\r\nimport StarRating from \"../../../../../StarRating\";\r\nimport SurveyAppointmentsInfo from \"../SurveyAppointmentsInfo\";\r\nimport SurveyModalContext from \"../../../../../../contexts/SurveyModalContext\";\r\n\r\nconst initialFormData = {\r\n    comment: \"\",\r\n    comment_type: SECOND_SURVEY_COMMENT_TYPE,\r\n    appointment_id: null,\r\n    metadata: {\r\n        therapist_understanding_support_rate: 0,\r\n        therapy_atmosphere_rate: 0,\r\n        therapist_openness_share_rate: 0,\r\n        therapy_session_after_feelings_rate: 0,\r\n        suggestions: \"\",\r\n    },\r\n};\r\n\r\nconst SecondSurveyModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { eventBus } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n    const {\r\n        showModal,\r\n        isSaving,\r\n        currentInquiry,\r\n        formData,\r\n        setFormData,\r\n        handleSubmit,\r\n        completedAppointments,\r\n        setCompletedAppointments,\r\n        handleInputComment,\r\n        hasSuggestions,\r\n        handleHasSuggestionsChange,\r\n        handleInputSuggestions,\r\n        handleStarClick,\r\n        errors,\r\n        setErrors,\r\n        handleCloseModal,\r\n    } = useContext(SurveyModalContext);\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (!formData.comment) {\r\n            errors.comment = \"Field is required.\";\r\n        }\r\n\r\n        if (formData.metadata.therapist_understanding_support_rate === 0) {\r\n            errors.therapist_understanding_support_rate = \"Field is required.\";\r\n        }\r\n\r\n        if (formData.metadata.therapy_atmosphere_rate === 0) {\r\n            errors.therapy_atmosphere_rate = \"Field is required.\";\r\n        }\r\n\r\n        if (formData.metadata.therapist_openness_share_rate === 0) {\r\n            errors.therapist_openness_share_rate = \"Field is required.\";\r\n        }\r\n\r\n        if (formData.metadata.therapy_session_after_feelings_rate === 0) {\r\n            errors.therapy_session_after_feelings_rate = \"Field is required.\";\r\n        }\r\n\r\n        if (hasSuggestions && !formData.metadata.suggestions) {\r\n            errors.suggestions = \"Field is required.\";\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSaveClick = async () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const payload = { comment: formData.comment };\r\n\r\n            await Promise.all([\r\n                createSecondSurveyComment({\r\n                    id: currentInquiry.id,\r\n                    data: formData,\r\n                }),\r\n                handleSubmit(payload),\r\n            ]);\r\n\r\n            updateCardOnBoard();\r\n\r\n            handleCloseModal();\r\n        } catch (error) {}\r\n    };\r\n\r\n    const updateCardOnBoard = () => {\r\n        const stageId = currentInquiry.stageId;\r\n\r\n        const updatedCard = {\r\n            ...currentInquiry,\r\n            secondSurveyComplete: true,\r\n        };\r\n\r\n        dispatch(\r\n            updateCardDataAC({\r\n                data: updatedCard,\r\n                meta: {\r\n                    stageId: stageId,\r\n                    id: currentInquiry.id,\r\n                },\r\n            }),\r\n        );\r\n\r\n        eventBus.publish({\r\n            type: \"UPDATE_CARD\",\r\n            laneId: stageId,\r\n            card: updatedCard,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!showModal) {\r\n            return;\r\n        }\r\n\r\n        getCompletedAppointments(currentInquiry.id).then(({ data }) => {\r\n            setCompletedAppointments(data);\r\n            setFormData({\r\n                ...initialFormData,\r\n                appointment_id: data[0].id,\r\n            });\r\n        });\r\n    }, [showModal]);\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            className=\"custom-modal\"\r\n            backdrop=\"true\"\r\n            onHide={handleCloseModal}\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <h4 className=\"m-0\">Call Comment</h4>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <SurveyAppointmentsInfo appointments={completedAppointments} />\r\n                <div className=\"form-group custom-form-group\">\r\n                    <textarea\r\n                        name=\"comment\"\r\n                        id=\"comment\"\r\n                        className={classNames(\r\n                            \"form-control\",\r\n                            errors.comment && \"is-invalid\",\r\n                        )}\r\n                        rows=\"4\"\r\n                        placeholder=\"Add your comment...\"\r\n                        value={formData.comment}\r\n                        onChange={handleInputComment}\r\n                    />\r\n                    <div className=\"invalid-feedback\">{errors.comment}</div>\r\n                </div>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <label className=\"form-label fw-bold\">\r\n                        How well do you feel understood and supported by your\r\n                        therapist? Please rate from 1 to 5 stars, where 1 star\r\n                        means 'not at all' and 5 stars means 'completely'.\r\n                    </label>\r\n                    <StarRating\r\n                        value={\r\n                            formData.metadata\r\n                                .therapist_understanding_support_rate\r\n                        }\r\n                        fieldName=\"therapist_understanding_support_rate\"\r\n                        handleStarClick={handleStarClick}\r\n                    />\r\n                    <input\r\n                        hidden\r\n                        className={classNames(\r\n                            errors.therapist_understanding_support_rate &&\r\n                                \"is-invalid\",\r\n                        )}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors.therapist_understanding_support_rate}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <label className=\"form-label fw-bold\">\r\n                        How would you rate the overall atmosphere or vibe during\r\n                        your therapy sessions? Please rate from 1 to 5 stars,\r\n                        where 1 star means 'very poor' and 5 stars means\r\n                        'excellent'.\r\n                    </label>\r\n                    <StarRating\r\n                        value={formData.metadata.therapy_atmosphere_rate}\r\n                        fieldName=\"therapy_atmosphere_rate\"\r\n                        handleStarClick={handleStarClick}\r\n                    />\r\n                    <input\r\n                        hidden\r\n                        className={classNames(\r\n                            errors.therapy_atmosphere_rate && \"is-invalid\",\r\n                        )}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors.therapy_atmosphere_rate}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <label className=\"form-label fw-bold\">\r\n                        How easy has it been for you to open up and share with\r\n                        your therapist? Please rate from 1 to 5 stars, where 1\r\n                        star means 'very difficult' and 5 stars means 'very\r\n                        easy'.\r\n                    </label>\r\n                    <StarRating\r\n                        value={formData.metadata.therapist_openness_share_rate}\r\n                        fieldName=\"therapist_openness_share_rate\"\r\n                        handleStarClick={handleStarClick}\r\n                    />\r\n                    <input\r\n                        hidden\r\n                        className={classNames(\r\n                            errors.therapist_openness_share_rate &&\r\n                                \"is-invalid\",\r\n                        )}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors.therapist_openness_share_rate}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <label className=\"form-label fw-bold\">\r\n                        How do you feel after your therapy sessions? Please rate\r\n                        your sense of being heard and validated from 1 to 5\r\n                        stars, where 1 star means 'not at all' and 5 stars means\r\n                        'completely'.\r\n                    </label>\r\n                    <StarRating\r\n                        value={\r\n                            formData.metadata\r\n                                .therapy_session_after_feelings_rate\r\n                        }\r\n                        fieldName=\"therapy_session_after_feelings_rate\"\r\n                        handleStarClick={handleStarClick}\r\n                    />\r\n                    <input\r\n                        hidden\r\n                        className={classNames(\r\n                            errors.therapy_session_after_feelings_rate &&\r\n                                \"is-invalid\",\r\n                        )}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors.therapy_session_after_feelings_rate}\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group custom-form-group\">\r\n                    <label className=\"form-label fw-bold\">\r\n                        Do you have any suggestions as to how we can elevate\r\n                        your experience with Change WithinReach?\r\n                    </label>\r\n                    <div className=\"d-flex gap-2\">\r\n                        <label className=\"form-check-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"experience\"\r\n                                value=\"Yes\"\r\n                                checked={hasSuggestions}\r\n                                onChange={handleHasSuggestionsChange}\r\n                                className=\"form-check-input\"\r\n                            />{\" \"}\r\n                            Yes\r\n                        </label>\r\n                        <label className=\"form-check-label\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"experience\"\r\n                                value=\"No\"\r\n                                checked={!hasSuggestions}\r\n                                onChange={handleHasSuggestionsChange}\r\n                                className=\"form-check-input\"\r\n                            />{\" \"}\r\n                            No\r\n                        </label>\r\n                    </div>\r\n                    {hasSuggestions && (\r\n                        <div className=\"mt-1\">\r\n                            <textarea\r\n                                name=\"suggestions\"\r\n                                id=\"suggestions\"\r\n                                className={classNames(\r\n                                    \"form-control\",\r\n                                    errors.suggestions && \"is-invalid\",\r\n                                )}\r\n                                rows=\"4\"\r\n                                value={formData.metadata.suggestions}\r\n                                onChange={handleInputSuggestions}\r\n                                placeholder=\"Enter suggestions...\"\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {errors.suggestions}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {isSaving ? (\r\n                    <div\r\n                        className=\"text-primary spinner-border spinner-border-md\"\r\n                        role=\"status\"></div>\r\n                ) : (\r\n                    <button\r\n                        className=\"btn btn-primary btn-large text-white\"\r\n                        onClick={handleSaveClick}>\r\n                        Save\r\n                    </button>\r\n                )}\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default SecondSurveyModal;\r\n","import React, { useContext, useState } from \"react\";\r\nimport CallResultContext from \"../../../../contexts/CallResultContext\";\r\nimport {\r\n    FOUR_APPOINTMENTS_COMPLETE_LANE_ID,\r\n    INITIAL_APPOINTMENT_COMPLETE_LANE_ID,\r\n    INITIAL_SURVEY_COMMENT_TYPE,\r\n} from \"../../../../constants/new-patients-dashboard\";\r\nimport SurveyModalContext from \"../../../../contexts/SurveyModalContext\";\r\nimport InitialSurveyModal from \"./components/InitialSurveyModal\";\r\nimport SecondSurveyModal from \"./components/SecondSurveyModal\";\r\n\r\nconst initialFormData = {\r\n    comment: \"\",\r\n    comment_type: INITIAL_SURVEY_COMMENT_TYPE,\r\n    appointment_id: null,\r\n    metadata: {\r\n        suggestions: \"\",\r\n    },\r\n};\r\n\r\nconst SurveyModal = () => {\r\n    const {\r\n        currentInquiry,\r\n        errors,\r\n        setErrors,\r\n        clearError,\r\n        showModal,\r\n        closeModal,\r\n        isSaving,\r\n        handleSubmit,\r\n    } = useContext(CallResultContext);\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [hasSuggestions, setHasSuggestions] = useState(false);\r\n    const [completedAppointments, setCompletedAppointments] = useState([]);\r\n\r\n    const handleInputComment = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if (value) {\r\n            clearError([\"comment\"]);\r\n        }\r\n\r\n        setFormData({ ...formData, comment: value });\r\n    };\r\n\r\n    const handleInputSuggestions = (e) => {\r\n        const value = e.target.value;\r\n\r\n        if (value) {\r\n            clearError([\"suggestions\"]);\r\n        }\r\n\r\n        setFormData({\r\n            ...formData,\r\n            metadata: { ...formData.metadata, suggestions: value },\r\n        });\r\n    };\r\n\r\n    const handleStarClick = (index, fieldName) => {\r\n        setFormData({\r\n            ...formData,\r\n            metadata: { ...formData.metadata, [fieldName]: index + 1 },\r\n        });\r\n        clearError([fieldName]);\r\n    };\r\n\r\n    const handleHasSuggestionsChange = (e) => {\r\n        setHasSuggestions(e.target.value === \"Yes\");\r\n        if (e.target.value === \"No\") {\r\n            setFormData({\r\n                ...formData,\r\n                metadata: { ...formData.metadata, suggestions: \"\" },\r\n            });\r\n            clearError([\"suggestions\"]);\r\n        }\r\n    };\r\n\r\n    const handleCloseModal = () => {\r\n        closeModal();\r\n        resetModal();\r\n    };\r\n\r\n    const resetModal = () => {\r\n        setFormData(initialFormData);\r\n        setCompletedAppointments([]);\r\n        setHasSuggestions(false);\r\n        setErrors({});\r\n    };\r\n\r\n    const getSurveyModalComponent = () => {\r\n        let component = <></>;\r\n\r\n        if (!currentInquiry) {\r\n            return component;\r\n        }\r\n\r\n        if (currentInquiry.stageId === INITIAL_APPOINTMENT_COMPLETE_LANE_ID) {\r\n            component = <InitialSurveyModal />;\r\n        }\r\n\r\n        if (currentInquiry.stageId === FOUR_APPOINTMENTS_COMPLETE_LANE_ID) {\r\n            component = <SecondSurveyModal />;\r\n        }\r\n\r\n        return component;\r\n    };\r\n\r\n    const surveyModalComponent = getSurveyModalComponent();\r\n\r\n    return (\r\n        <SurveyModalContext.Provider\r\n            value={{\r\n                showModal,\r\n                isSaving,\r\n                currentInquiry,\r\n                formData,\r\n                setFormData,\r\n                handleSubmit,\r\n                completedAppointments,\r\n                setCompletedAppointments,\r\n                handleInputComment,\r\n                hasSuggestions,\r\n                handleHasSuggestionsChange,\r\n                handleInputSuggestions,\r\n                handleStarClick,\r\n                errors,\r\n                setErrors,\r\n                handleCloseModal,\r\n            }}>\r\n            {surveyModalComponent}\r\n        </SurveyModalContext.Provider>\r\n    );\r\n};\r\n\r\nexport default SurveyModal;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateRingOutCall } from \"../../api/common/ringCentral\";\r\nimport { setCallLogAC } from \"../../store/reducers/app.reducer\";\r\nimport CallResultContext from \"../../contexts/CallResultContext\";\r\nimport {\r\n    APPOINTMENT_SCHEDULED_LANE_ID,\r\n    FOUR_APPOINTMENTS_COMPLETE_LANE_ID,\r\n    INITIAL_APPOINTMENT_COMPLETE_LANE_ID,\r\n} from \"../../constants/new-patients-dashboard\";\r\nimport CommentModal from \"./components/CommentModal\";\r\nimport AppointmentScheduledModal from \"./components/AppointmentScheduledModal\";\r\nimport _ from \"lodash\";\r\nimport NotificationsContext from \"../../contexts/NotificationsContext\";\r\nimport SurveyModal from \"./components/SurveyModal\";\r\n\r\nconst CallResultModal = ({ showModal, closeModal }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const { lanes } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n    const { callLog } = useSelector((state) => state.app);\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    const getCurrentInquiry = () => {\r\n        let inquiry = null;\r\n\r\n        lanes.forEach((lane) => {\r\n            let card = null;\r\n\r\n            const isPatientLead =\r\n                callLog.call_subject_type === \"AppModelsPatientLeadPatientLead\";\r\n\r\n            card = lane.cards.find(\r\n                (card) =>\r\n                    card.inquirable.id === callLog.call_subject_id &&\r\n                    (isPatientLead\r\n                        ? !card.isPatientCreated\r\n                        : card.isPatientCreated),\r\n            );\r\n\r\n            if (card) {\r\n                inquiry = card;\r\n            }\r\n        });\r\n\r\n        return inquiry;\r\n    };\r\n\r\n    const currentInquiry = getCurrentInquiry();\r\n\r\n    const clearError = (keys) => {\r\n        let newErrors = _.cloneDeep(errors);\r\n\r\n        keys.forEach((key) => {\r\n            delete newErrors[key];\r\n        });\r\n\r\n        setErrors(newErrors);\r\n    };\r\n\r\n    const handleSubmit = async (payload) => {\r\n        try {\r\n            setIsSaving(true);\r\n\r\n            const response = await updateRingOutCall(callLog.id, payload);\r\n            dispatch(setCallLogAC({ callLog: response.data.call_log }));\r\n        } catch (error) {\r\n            const message = error.response.data.errors.comment\r\n                ? error.response.data.errors.comment\r\n                : error.response.data.message;\r\n\r\n            enqueueNotification(\"Error\", message);\r\n\r\n            throw error;\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    const getModalComponent = () => {\r\n        let component = <CommentModal />;\r\n\r\n        if (!currentInquiry) {\r\n            return component;\r\n        }\r\n\r\n        if (currentInquiry.stageId === APPOINTMENT_SCHEDULED_LANE_ID) {\r\n            component = <AppointmentScheduledModal />;\r\n        }\r\n\r\n        if (\r\n            currentInquiry.stageId === INITIAL_APPOINTMENT_COMPLETE_LANE_ID ||\r\n            currentInquiry.stageId === FOUR_APPOINTMENTS_COMPLETE_LANE_ID\r\n        ) {\r\n            component = <SurveyModal />;\r\n        }\r\n\r\n        return component;\r\n    };\r\n\r\n    const modalComponent = getModalComponent();\r\n\r\n    return (\r\n        <CallResultContext.Provider\r\n            value={{\r\n                currentInquiry,\r\n                errors,\r\n                setErrors,\r\n                clearError,\r\n                showModal,\r\n                closeModal,\r\n                handleSubmit,\r\n                isSaving,\r\n            }}>\r\n            {modalComponent}\r\n        </CallResultContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CallResultModal;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styles from './index.module.scss';\r\nimport PhoneIcon from '../../../../assets/icons/telephone-fill.svg';\r\n\r\nimport CallModal from '../../../../components/CallModal';\r\nimport CallResultModal from '../../../../components/CallResultModal';\r\n\r\nconst CallButtonWithModals = ({ patientId, disabled }) => {\r\n    const [showCallModal, setShowCallModal] = React.useState(false);\r\n    const [showCallResultModal, setShowCallResultModal] = React.useState(false);\r\n\r\n    const handleShowModal = () => {\r\n        if (showCallModal) {\r\n            return;\r\n        }\r\n\r\n        setShowCallModal(true);\r\n    };\r\n\r\n    const handleCloseCallModal = () => {\r\n        setShowCallModal(false);\r\n    };\r\n\r\n    const handleShowCallResultModal = () => {\r\n        if (showCallResultModal) {\r\n            return;\r\n        }\r\n\r\n        setShowCallResultModal(true);\r\n    };\r\n\r\n    const handleCloseCallResultModal = () => {\r\n        setShowCallResultModal(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                type=\"button\"\r\n                className={classNames('callButton', styles.callButton, 'badge', 'd-flex', 'gap-1', 'align-items-center')}\r\n                disabled={disabled}\r\n                onClick={handleShowModal}\r\n            >\r\n                <img src={PhoneIcon} alt=\"phone_icon\" />\r\n                <span>Call</span>\r\n            </button>\r\n\r\n            <CallModal\r\n                patientId={patientId}\r\n                patientType={'patient'}\r\n                showModal={showCallModal}\r\n                closeModal={handleCloseCallModal}\r\n                openCallResultModal={handleShowCallResultModal}\r\n            />\r\n            <CallResultModal\r\n                showModal={showCallResultModal}\r\n                closeModal={handleCloseCallResultModal}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CallButtonWithModals;","const hexToRgba = (hex, alpha) => {\r\n    let r = parseInt(hex.slice(1, 3), 16);\r\n    let g = parseInt(hex.slice(3, 5), 16);\r\n    let b = parseInt(hex.slice(5, 7), 16);\r\n\r\n    if (alpha) {\r\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    }\r\n\r\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n};\r\n\r\nexport default hexToRgba;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n    creditCardBadgeCell,\r\n    dateValueCell,\r\n    patientNameValueCell,\r\n} from \"../../mixins/cells-functions\";\r\nimport { sortingDate, sortingFormStatus, sortingName, sortingStatus, sortingTimeFormatAmPm } from \"../../mixins/sorting-functions\";\r\nimport CustomBadge from \"../../pages/SecretaryDashboard/components/CustomBadge\";\r\nimport FormStatusBadge from \"../../pages/SecretaryDashboard/components/FormStatusBadge\";\r\nimport CallButtonWithModals from \"../../pages/SecretaryDashboard/components/CallButtonWithModals\";\r\nimport hexToRgba from \"../../utilities/hexToRgba\";\r\nimport { ROW_NUMBER_COLUMN } from \"../../constants\";\r\n\r\nconst initialState = {\r\n    withoutCompletedForms: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"appointment_status\",\r\n                Header: \"Appt. Status\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"date\",\r\n                Header: \"Date\",\r\n                Cell: dateValueCell,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"time\",\r\n                Header: \"Time\",\r\n                sortType: sortingTimeFormatAmPm,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"first_visit\",\r\n                Header: \"Date of First Visit\",\r\n                Cell: dateValueCell,\r\n                sortType: sortingDate,\r\n                width: 110,\r\n            },\r\n            {\r\n                accessor: \"count_visits\",\r\n                Header: \"Count of Visits\",\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"form_status\",\r\n                Header: \"Form Status\",\r\n                Cell: ({value}) => <FormStatusBadge formStatus={value}/>,\r\n                sortType: sortingFormStatus,\r\n                width: 100,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    requireEligibilityCheck: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"appointment_status\",\r\n                Header: \"Appt. Status\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"date\",\r\n                Header: \"Date\",\r\n                Cell: dateValueCell,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"time\",\r\n                Header: \"Time\",\r\n                sortType: sortingTimeFormatAmPm,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"last_eligibility_check\",\r\n                Header: \"Last Eligibility Check\",\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"message\",\r\n                Header: \"Message\",\r\n                width: 200,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    withDeductible: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"appointment_status\",\r\n                Header: \"Appt. Status\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"date\",\r\n                Header: \"Date\",\r\n                Cell: dateValueCell,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"time\",\r\n                Header: \"Time\",\r\n                sortType: sortingTimeFormatAmPm,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"credit_card\",\r\n                Header: \"Credit Card on File\",\r\n                Cell: creditCardBadgeCell,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"last_eligibility_check\",\r\n                Header: \"Last Eligibility Check\",\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"co_pay\",\r\n                Header: \"Co-pay\",\r\n                width: 85,\r\n            },\r\n            {\r\n                accessor: \"deductible\",\r\n                Header: \"Deductible\",\r\n                width: 85,\r\n            },\r\n            {\r\n                accessor: \"deductible_met\",\r\n                Header: \"Deductible Met\",\r\n                width: 85,\r\n            },\r\n            {\r\n                accessor: \"deductible_remaining\",\r\n                Header: \"Remaining Deductible\",\r\n                width: 85,\r\n            },\r\n            {\r\n                accessor: \"insurance_pay\",\r\n                Header: \"Insurance Pay\",\r\n                width: 85,\r\n            },\r\n            {\r\n                accessor: \"reference_number\",\r\n                Header: \"Reference Number\",\r\n                width: 85,\r\n            },\r\n            {\r\n                accessor: \"message\",\r\n                Header: \"Message\",\r\n                width: 200,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    withNegativeCreditCardBalance: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"appointment_status\",\r\n                Header: \"Appt. Status\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"date\",\r\n                Header: \"Date\",\r\n                Cell: dateValueCell,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"time\",\r\n                Header: \"Time\",\r\n                sortType: sortingTimeFormatAmPm,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                sortType: sortingName,\r\n                width: 110,\r\n            },\r\n            {\r\n                accessor: \"first_visit\",\r\n                Header: \"Date of First Visit\",\r\n                Cell: dateValueCell,\r\n                sortType: sortingDate,\r\n                width: 110,\r\n            },\r\n            {\r\n                accessor: \"count_visits\",\r\n                Header: \"Count of Visits\",\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"credit_card\",\r\n                Header: \"Credit Card on File\",\r\n                Cell: creditCardBadgeCell,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"current_balance\",\r\n                Header: \"Current Balance\",\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"co_payment\",\r\n                Header: \"Co-Payment\",\r\n                width: 90,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    withNoFutureAppointments: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"appointment_status\",\r\n                Header: \"Appt. Status\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"date\",\r\n                Header: \"Date\",\r\n                Cell: dateValueCell,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"time\",\r\n                Header: \"Time\",\r\n                sortType: sortingTimeFormatAmPm,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"first_visit\",\r\n                Header: \"Date of First Visit\",\r\n                Cell: dateValueCell,\r\n                sortType: sortingDate,\r\n                width: 110,\r\n            },\r\n            {\r\n                accessor: \"count_visits\",\r\n                Header: \"Count of Visits\",\r\n                width: 100,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    cashPayment: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"appointment_status\",\r\n                Header: \"Appt. Status\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"date\",\r\n                Header: \"Date\",\r\n                Cell: dateValueCell,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"time\",\r\n                Header: \"Time\",\r\n                sortType: sortingTimeFormatAmPm,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"first_visit\",\r\n                Header: \"Date of First Visit\",\r\n                Cell: dateValueCell,\r\n                sortType: sortingDate,\r\n                width: 110,\r\n            },\r\n            {\r\n                accessor: \"credit_card\",\r\n                Header: \"Credit Card on File\",\r\n                Cell: creditCardBadgeCell,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"co_payment\",\r\n                Header: \"Amount in cash\",\r\n                width: 90,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    newPatients: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 40,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                disableSortBy: true,\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                width: 70,\r\n            },\r\n            {\r\n                accessor: \"patient_status_updated_at\",\r\n                Header: \"Status Updated At\",\r\n                sortType: sortingDate,\r\n                Cell: ({value}) => (\r\n                    <div>{value || '-'}</div>\r\n                ),\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"patient_creation_date\",\r\n                Header: \"Patient Creation Date\",\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"count_calls\",\r\n                Header: \"Count of calls\",\r\n                width: 90,\r\n            },\r\n            {\r\n                accessor: \"date_of_last_call\",\r\n                Header: \"Date of Last Call\",\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"caller\",\r\n                Header: \"Who Called\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"comment\",\r\n                Header: \"Comment\",\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"id\",\r\n                Header: \"Call\",\r\n                disableSortBy: true,\r\n                Cell: ({row, value}) => (\r\n                    <CallButtonWithModals\r\n                        patientId={value}\r\n                        disabled={!row.original.cell_phone}\r\n                    />\r\n                ),\r\n                width: 80,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    inactivePatients: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 40,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                disableSortBy: true,\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"patient_status_updated_at\",\r\n                Header: \"Status Updated At\",\r\n                sortType: sortingDate,\r\n                Cell: ({value}) => (\r\n                    <div>{value || '-'}</div>\r\n                ),\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"count_visits\",\r\n                Header: \"Count of Visits\",\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"date_of_last_visit\",\r\n                Header: \"Date of Last Visit\",\r\n                sortType: sortingDate,\r\n                width: 150,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    lostPatients: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 40,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                disableSortBy: true,\r\n                Cell: ({value}) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"patient_status_updated_at\",\r\n                Header: \"Status Updated At\",\r\n                sortType: sortingDate,\r\n                Cell: ({value}) => (\r\n                    <div>{value || '-'}</div>\r\n                ),\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"count_visits\",\r\n                Header: \"Count of Visits\",\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"date_of_last_visit\",\r\n                Header: \"Date of Last Visit\",\r\n                sortType: sortingDate,\r\n                width: 150,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n        },\r\n    },\r\n    tridiuumAppointmentsCount: null,\r\n    isRestartingTridiuumParsers: false,\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"secretaryDashboard\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setDataInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableData = value;\r\n        },\r\n        setDataIsLoadedAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].dataIsLoaded = value;\r\n        },\r\n        setCurrentPageInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.current_page = value;\r\n        },\r\n        setLastPageInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.last_page = value;\r\n        },\r\n        setTotalInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.total = value;\r\n        },\r\n        setTridiuumAppointmentsCountAC(state, action) {\r\n            state.tridiuumAppointmentsCount = action.payload.value;\r\n        },\r\n        setIsRestartingTridiuumParsersAC(state, action) {\r\n            state.isRestartingTridiuumParsers = action.payload.value;\r\n        },\r\n    },\r\n});\r\nexport const secretaryDashboardReducer = slice.reducer;\r\nexport const {\r\n    setDataInTableAC,\r\n    setDataIsLoadedAC,\r\n    setCurrentPageInTableAC,\r\n    setLastPageInTableAC,\r\n    setTotalInTableAC,\r\n    setTridiuumAppointmentsCountAC,\r\n    setIsRestartingTridiuumParsersAC,\r\n} = slice.actions;\r\n","import React from 'react';\r\nimport classNames from 'classnames';\r\nimport styles from './index.module.scss';\r\n\r\nconst CircleLoader = ({ absolute = false, color = null, size = null }) => {\r\n    const getSpinnerBorderSizeClassName = () => {\r\n        if (!size) {\r\n            return '';\r\n        }\r\n\r\n        const className = 'spinner-border-' + size;\r\n\r\n        return className in styles ? styles[className] : className;\r\n    };\r\n\r\n    return (\r\n        <div className={classNames('p-1 d-flex align-items-center justify-content-center', styles['circle-loader'], absolute ? styles['circle-loader--absolute'] : '')}>\r\n            <div className={classNames('spinner-border', color ? '' : 'text-primary', getSpinnerBorderSizeClassName())} role=\"status\" color={color}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CircleLoader;\r\n","export default __webpack_public_path__ + \"static/media/page-loader.9c48f460.gif\";","export default __webpack_public_path__ + \"static/media/sync-icon.aa5f162e.svg\";","import React, { useEffect } from \"react\";\r\nimport styles from \"./index.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport {getTridiuumAppointmentsData, restartTridiuumParsers} from \"../../../../api/pages/secretary-dashboard-page\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    setIsRestartingTridiuumParsersAC,\r\n    setTridiuumAppointmentsCountAC\r\n} from \"../../../../store/reducers/secretaryDashboard.reducer\";\r\nimport CircleLoader from \"../../../CircleLoader\";\r\nimport PageLoader from \"../../../../assets/icons/page-loader.gif\"\r\nimport SyncIcon from \"../../../../assets/icons/sync-icon.svg\"\r\n\r\nconst CHECK_TRIDIUUM_APPOINTMENTS_DATA_TIMEOUT = 60000; // timeout 1 minute (milliseconds)\r\n\r\nconst TridiumAppointmentsInfo = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { tridiuumAppointmentsCount, isRestartingTridiuumParsers } = useSelector(\r\n        (state) => state.secretaryDashboard,\r\n    );\r\n\r\n    const loadTridiuumAppointmentsData = () => {\r\n        getTridiuumAppointmentsData().then(({ data }) => {\r\n            dispatch(setTridiuumAppointmentsCountAC({ value: data.count }));\r\n            dispatch(setIsRestartingTridiuumParsersAC({ value: data.is_restarting_tridiuum_parsers }));\r\n\r\n            if (data.is_restarting_tridiuum_parsers) {\r\n                checkTridiuumAppointmentsDataWithTimeout();\r\n            }\r\n        });\r\n    }\r\n\r\n    const checkTridiuumAppointmentsDataWithTimeout = () => {\r\n        setTimeout(() => {\r\n            loadTridiuumAppointmentsData();\r\n        }, CHECK_TRIDIUUM_APPOINTMENTS_DATA_TIMEOUT);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadTridiuumAppointmentsData();\r\n    }, []);\r\n\r\n    const handleRestartTridiuumParsers = () => {\r\n        if (isRestartingTridiuumParsers) {\r\n            return;\r\n        }\r\n\r\n        dispatch(setIsRestartingTridiuumParsersAC({ value: true }));\r\n\r\n        checkTridiuumAppointmentsDataWithTimeout();\r\n\r\n        restartTridiuumParsers()\r\n            .catch(() => {\r\n                console.log('Error restarting tridiuum parsers');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                styles.tridiumAppointmentsInfo,\r\n                \"dashboardCard\",\r\n            )}>\r\n            <span>Today's appointments from Lucet:</span>\r\n            {tridiuumAppointmentsCount !== null ? (\r\n                <div className={'d-flex align-items-center justify-content-between flex-grow-1'}>\r\n                    <span>{tridiuumAppointmentsCount}</span>\r\n\r\n                    {isRestartingTridiuumParsers ?\r\n                        <img\r\n                            src={PageLoader}\r\n                            alt=\"restart-tridiuum-parsers-loader\"\r\n                            title={'Synchronizing appointments with Lucet'}\r\n                            style={{ height: \"18px\" }}\r\n                        /> :\r\n                        <img\r\n                            src={SyncIcon}\r\n                            alt=\"restart-tridiuum-parsers\"\r\n                            className={styles.btnRestartTridiuumParsers}\r\n                            title={'Sync appointments with Lucet'}\r\n                            onClick={handleRestartTridiuumParsers}\r\n                        />\r\n                    }\r\n                </div>\r\n            ) : (\r\n                <span\r\n                    className=\"d-flex align-items-center\"\r\n                    style={{ height: \"19px\" }}>\r\n                    <CircleLoader size=\"sm\" />\r\n                </span>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TridiumAppointmentsInfo;\r\n","import axios from \"axios\";\r\n// import { getMockDataForImportantForTodayCard, getMockDataForNewLostPatiendCard } from \"../../pages/SecretaryDashboard/getMockDataFunctions\"\r\n\r\nexport const getDataForImportantForTodayCard = (timeFrame) => {\r\n    const { startDate, endDate } = timeFrame;\r\n\r\n    // return getMockDataForImportantForTodayCard();\r\n    return axios.get(\r\n        `/api/secretaries-dashboard/important-for-today?start_date=${startDate}&end_date=${endDate}`,\r\n    );\r\n};\r\n\r\nexport const getDataForNewLostPatiendCard = () => {\r\n    // return getMockDataForNewLostPatiendCard();\r\n    return axios.get(\"/api/secretaries-dashboard/new-lost-patients\");\r\n};\r\n\r\nexport const getTridiuumAppointmentsData = () => {\r\n    return axios.get(\"/api/secretaries-dashboard/tridiuum-appointments-data\");\r\n};\r\n\r\nexport const restartTridiuumParsers = () => {\r\n    return axios.post(\"/api/secretaries-dashboard/restart-tridiuum-parsers\");\r\n};\r\n","import React from \"react\";\r\nimport Messages from \"./components/Messages\";\r\nimport styles from \"./index.module.scss\";\r\nimport TridiumAppointmentsInfo from \"./components/TridiumAppointmentsInfo\";\r\nimport classNames from \"classnames\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className={classNames(styles.sidebar, \"d-flex flex-column gap-3\")}>\r\n            <TridiumAppointmentsInfo />\r\n            <Messages />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","import classNames from \"classnames\";\r\nimport React from \"react\";\r\nimport { Col, Nav, Row, Tab } from \"react-bootstrap\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst TabMate = ({\r\n    defaultActiveKey,\r\n    id,\r\n    className,\r\n    tabs,\r\n    tabStyles,\r\n    onSelect,\r\n}) => {\r\n    const [activeKey, setActiveKey] = React.useState(defaultActiveKey);\r\n\r\n    const handleSelect = (key) => {\r\n        setActiveKey(key);\r\n\r\n        if (onSelect) {\r\n            onSelect(key);\r\n        }\r\n    };\r\n\r\n    const getTitle = (numberOfRecords, title, active) => {\r\n        return (\r\n            <div\r\n                className={classNames(\r\n                    \"d-flex flex-column align-items-center justify-content-center\",\r\n                    active && styles.active,\r\n                    styles.title,\r\n                )}>\r\n                <div\r\n                    className={classNames(\r\n                        \"fw-bold\",\r\n                        active ? \"text-white\" : \"text-primary\",\r\n                    )}\r\n                    style={{ marginBottom: \"2px\" }}>\r\n                    {numberOfRecords}\r\n                </div>\r\n                <div\r\n                    className={classNames(styles.text, active && \"text-white\")}>\r\n                    {title}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Tab.Container id={id} activeKey={activeKey} onSelect={handleSelect}>\r\n            <div className={styles.tabsContainer}>\r\n                <Col className={classNames(styles.tabs, \"p-0\")}>\r\n                    <Nav\r\n                        fill\r\n                        variant=\"tabs\"\r\n                        style={{ flexWrap: \"nowrap\", border: \"none\" }}>\r\n                        {tabs.map((tab, index) => (\r\n                            <Nav.Item key={index}>\r\n                                <Nav.Link\r\n                                    className={styles.tab}\r\n                                    style={{ border: \"none\" }}\r\n                                    eventKey={tab.eventKey}>\r\n                                    {getTitle(\r\n                                        tab.numberOfRecords,\r\n                                        tab.title,\r\n                                        activeKey === tab.eventKey,\r\n                                    )}\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        ))}\r\n                    </Nav>\r\n                </Col>\r\n            </div>\r\n            <Row className=\"flex-grow-1\">\r\n                <Col>\r\n                    <Tab.Content>\r\n                        {tabs.map((tab, index) => (\r\n                            <Tab.Pane key={index} eventKey={tab.eventKey}>\r\n                                <div id={tab.id}></div>\r\n                                <div style={tabStyles}>{tab.component}</div>\r\n                            </Tab.Pane>\r\n                        ))}\r\n                    </Tab.Content>\r\n                </Col>\r\n            </Row>\r\n        </Tab.Container>\r\n    );\r\n};\r\n\r\nexport default TabMate;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"../../../../components/Table\";\r\n\r\nconst ImportantForTodayTable = ({ tableName }) => {\r\n    const state = useSelector((state) => state.secretaryDashboard);\r\n\r\n    const table = state[tableName];\r\n\r\n    return (\r\n        <div className=\"dashboard-table-wrapper\">\r\n            <Table\r\n                pageSize={table.tableParams.per_page}\r\n                columns={table.tableColumns}\r\n                data={table.tableData}\r\n                dataIsLoaded={table.dataIsLoaded}\r\n                options={{applyMinHeightToHeader: true}}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImportantForTodayTable;\r\n","import React from 'react'\r\nimport TabMate from '../../../../components/TabMate'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ToggleSwitch from '../../../../components/ToggleSwitch'\r\nimport classNames from 'classnames'\r\nimport styles from '../../index.module.scss'\r\nimport { getDataForImportantForTodayCard } from '../../../../api/pages/secretary-dashboard-page'\r\nimport { setDataInTableAC, setDataIsLoadedAC, setLastPageInTableAC, setTotalInTableAC } from '../../../../store/reducers/secretaryDashboard.reducer'\r\nimport moment from '../../../../utilities/moment-config';\r\nimport ImportantForTodayTable from '../ImportantForTodayTable'\r\n\r\nconst ImportantForToday = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { secretaryDashboard } = useSelector(state => state)\r\n\r\n    const { withoutCompletedForms,\r\n        requireEligibilityCheck,\r\n        withDeductible,\r\n        withNegativeCreditCardBalance,\r\n        withNoFutureAppointments,\r\n        cashPayment } = secretaryDashboard\r\n\r\n    const tableNames = [\r\n        'withoutCompletedForms',\r\n        'requireEligibilityCheck',\r\n        'withDeductible',\r\n        'withNegativeCreditCardBalance',\r\n        'withNoFutureAppointments',\r\n        'cashPayment']\r\n\r\n    const buttons = [\r\n        { id: \"tab-btn-1\", value: \"previous_week\", label: \"Previous week\" },\r\n        { id: \"tab-btn-2\", value: \"yesterday\", label: \"Yesterday\" },\r\n        { id: \"tab-btn-3\", value: \"today\", label: \"Today\" },\r\n        { id: \"tab-btn-4\", value: \"tomorrow\", label: \"Tomorrow\" },\r\n        { id: \"tab-btn-5\", value: \"this_week\", label: \"This week\" },\r\n        { id: \"tab-btn-6\", value: \"this_month\", label: \"This month\" },\r\n    ]\r\n\r\n    const [activeTab, setActiveTab] = React.useState(buttons[2].value)\r\n\r\n    const tabs = [{\r\n        eventKey: 'without_completed_forms',\r\n        title: 'Without Completed Forms',\r\n        numberOfRecords: withoutCompletedForms.tableParams.total,\r\n        disabled: false,\r\n        component: <ImportantForTodayTable tableName=\"withoutCompletedForms\" />\r\n    },\r\n    {\r\n        eventKey: 'require_eligibility_check',\r\n        title: 'Require Eligibility Check',\r\n        numberOfRecords: requireEligibilityCheck.tableParams.total,\r\n        disabled: false,\r\n        component: <ImportantForTodayTable tableName=\"requireEligibilityCheck\" />\r\n    },\r\n    {\r\n        eventKey: 'withDeductible',\r\n        title: 'With Deductible',\r\n        numberOfRecords: withDeductible.tableParams.total,\r\n        disabled: false,\r\n        component: <ImportantForTodayTable tableName=\"withDeductible\" />\r\n    },\r\n    {\r\n        eventKey: 'with_negative_credit_card_balance',\r\n        title: 'With Negative Balance',\r\n        numberOfRecords: withNegativeCreditCardBalance.tableParams.total,\r\n        disabled: false,\r\n        component: <ImportantForTodayTable tableName=\"withNegativeCreditCardBalance\" />\r\n    },\r\n    {\r\n        eventKey: 'with_no_future_appointments',\r\n        title: 'Without Future Appointments',\r\n        numberOfRecords: withNoFutureAppointments.tableParams.total,\r\n        disabled: false,\r\n        component: <ImportantForTodayTable tableName=\"withNoFutureAppointments\" />\r\n    },\r\n    {\r\n        eventKey: 'cash_payment',\r\n        title: 'Cash Payment',\r\n        numberOfRecords: cashPayment.tableParams.total,\r\n        disabled: false,\r\n        component: <ImportantForTodayTable tableName=\"cashPayment\" />\r\n    }]\r\n\r\n    const changeTabHandler = (value) => {\r\n        setActiveTab(value)\r\n    }\r\n\r\n    const getTimeFrame = (value) => {\r\n        if (value === 'previous_week') {\r\n            return {\r\n                startDate: moment().subtract(1, 'week').startOf('isoWeek').format('YYYY-MM-DD'),\r\n                endDate: moment().subtract(1, 'week').endOf('isoWeek').format('YYYY-MM-DD')\r\n            };\r\n        }\r\n        if (value === 'yesterday') {\r\n            return {\r\n                startDate: moment().subtract(1, 'day').format('YYYY-MM-DD'),\r\n                endDate: moment().subtract(1, 'day').format('YYYY-MM-DD')\r\n            };\r\n        }\r\n        if (value === 'today') {\r\n            return {\r\n                startDate: moment().format('YYYY-MM-DD'),\r\n                endDate: moment().format('YYYY-MM-DD')\r\n            };\r\n        }\r\n        if (value === 'tomorrow') {\r\n            return {\r\n                startDate: moment().add(1, 'day').format('YYYY-MM-DD'),\r\n                endDate: moment().add(1, 'day').format('YYYY-MM-DD')\r\n            };\r\n        }\r\n        if (value === 'this_week') {\r\n            return {\r\n                startDate: moment().startOf('isoWeek').format('YYYY-MM-DD'),\r\n                endDate: moment().endOf('isoWeek').format('YYYY-MM-DD')\r\n            };\r\n        }\r\n        if (value === 'this_month') {\r\n            return {\r\n                startDate: moment().startOf('month').format('YYYY-MM-DD'),\r\n                endDate: moment().endOf('month').format('YYYY-MM-DD')\r\n            };\r\n        }\r\n    }\r\n\r\n    const getTableNameFromKey = (key) => {\r\n        if (key === 'without_forms') {\r\n            return 'withoutCompletedForms'\r\n        }\r\n        if (key === 'with_required_eligibility') {\r\n            return 'requireEligibilityCheck'\r\n        }\r\n        if (key === 'with_deductible') {\r\n            return 'withDeductible'\r\n        }\r\n        if (key === 'with_negative_balance') {\r\n            return 'withNegativeCreditCardBalance';\r\n        }\r\n        if (key === 'patient_last_appointments') {\r\n            return 'withNoFutureAppointments'\r\n        }\r\n        if (key === 'with_cash') {\r\n            return 'cashPayment';\r\n        }\r\n    }\r\n\r\n    const getPatientFullName = (patient) => {\r\n        return `${patient.first_name} ${patient.last_name} ${patient.middle_initial || ''}`\r\n    }\r\n\r\n    const getTableData = (tableName, data) => {\r\n        if (tableName === 'withoutCompletedForms') {\r\n            const tableData = [];\r\n            data.forEach(el => {\r\n                tableData.push({\r\n                    id: el.id,\r\n                    appointment_status: el.status.status,\r\n                    patient_name: getPatientFullName(el.patient),\r\n                    patient_id: el.patient.id,\r\n                    patient_status: el.patient.status,\r\n                    date: el.date_of_service.date,\r\n                    time: el.date_of_service.time,\r\n                    therapist_name: el.provider?.provider_name,\r\n                    first_visit: el.patient.first_visit_date\r\n                        ? moment(el.patient.first_visit_date, 'YYYY-MM-DD').format('MM/DD/YYYY')\r\n                        : null,\r\n                    count_visits: el.patient.appointments_count,\r\n                    form_status: el.patient.last_document_request,\r\n                })\r\n            })\r\n            return tableData; \r\n        }\r\n        if (tableName === 'requireEligibilityCheck' || tableName === 'withDeductible') {\r\n            const tableData = [];\r\n            data.forEach(el => {\r\n                tableData.push({\r\n                    id: el.id,\r\n                    appointment_status: el.status.status,\r\n                    patient_name: getPatientFullName(el.patient),\r\n                    patient_id: el.patient.id,\r\n                    patient_status: el.patient.status,\r\n                    date: el.date_of_service.date,\r\n                    time: el.date_of_service.time,\r\n                    therapist_name: el.provider?.provider_name,\r\n                    credit_card: el.patient.credit_card,\r\n                    last_eligibility_check: el.patient.alert ? moment(el.patient.alert.date_created, 'YYYY-MM-DD').format('MM/DD/YYYY') : '-',\r\n                    message: el.patient.alert ? el.patient.alert.message : '-',\r\n                    co_pay: el.patient.alert ? el.patient.alert.co_pay : '-',\r\n                    deductible: el.patient.alert ? el.patient.alert.deductible : '-',\r\n                    deductible_met: el.patient.alert ? el.patient.alert.deductible_met : '-',\r\n                    deductible_remaining: el.patient.alert ? el.patient.alert.deductible_remaining : '-',\r\n                    insurance_pay: el.patient.alert ? el.patient.alert.insurance_pay : '-',\r\n                    reference_number: el.patient.alert ? (el.patient.alert.reference_number || '-') : '-',\r\n                })\r\n            })\r\n            return tableData; \r\n        }\r\n        if (tableName === 'withNegativeCreditCardBalance') {\r\n            const tableData = [];\r\n            data.forEach(el => {\r\n                tableData.push({\r\n                    id: el.id,\r\n                    appointment_status: el.status.status,\r\n                    patient_name: getPatientFullName(el.patient),\r\n                    patient_id: el.patient.id,\r\n                    patient_status: el.patient.status,\r\n                    date: el.date_of_service.date,\r\n                    time: el.date_of_service.time,\r\n                    therapist_name: el.provider?.provider_name,\r\n                    first_visit: el.patient.first_visit_date\r\n                        ? moment(el.patient.first_visit_date, 'YYYY-MM-DD').format('MM/DD/YYYY')\r\n                        : null,\r\n                    count_visits: el.patient.appointments_count,\r\n                    credit_card: el.patient.credit_card,\r\n                    current_balance: ((el.patient.preprocessed_balance && el.patient.preprocessed_balance.balance_after_transaction ? el.patient.preprocessed_balance.balance_after_transaction : 0) / 100) + '$',\r\n                    co_payment: (el.patient.visit_copay ? el.patient.visit_copay : 0) + '$'\r\n                })\r\n            })\r\n            return tableData;\r\n        }\r\n        if (tableName === 'withNoFutureAppointments') {\r\n            const tableData = [];\r\n            data.forEach(el => {\r\n                tableData.push({\r\n                    id: el.id,\r\n                    appointment_status: el.status.status,\r\n                    patient_name: getPatientFullName(el.patient),\r\n                    patient_id: el.patient.id,\r\n                    patient_status: el.patient.status,\r\n                    date: el.date_of_service.date,\r\n                    time: el.date_of_service.time,\r\n                    therapist_name: el.provider?.provider_name,\r\n                    first_visit: el.patient.first_visit_date\r\n                        ? moment(el.patient.first_visit_date, 'YYYY-MM-DD').format('MM/DD/YYYY')\r\n                        : null,\r\n                    count_visits: el.patient.appointments_count,\r\n                })\r\n            })\r\n            return tableData;\r\n        }\r\n        if (tableName === 'cashPayment') {\r\n            const tableData = [];\r\n            data.forEach(el => {\r\n                tableData.push({\r\n                    id: el.id,\r\n                    appointment_status: el.status.status,\r\n                    patient_name: getPatientFullName(el.patient),\r\n                    patient_id: el.patient.id,\r\n                    patient_status: el.patient.status,\r\n                    date: el.date_of_service.date,\r\n                    time: el.date_of_service.time,\r\n                    therapist_name: el.provider?.provider_name,\r\n                    first_visit: el.patient.first_visit_date\r\n                        ? moment(el.patient.first_visit_date, 'YYYY-MM-DD').format('MM/DD/YYYY')\r\n                        : null,\r\n                    credit_card: el.patient.credit_card,\r\n                    co_payment: (el.patient.visit_copay ? el.patient.visit_copay : 0) + '$'\r\n                })\r\n            })\r\n            return tableData;\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        tableNames.forEach(tableName => {\r\n            dispatch(setDataInTableAC({ tableName, value: [] }))\r\n            dispatch(setDataIsLoadedAC({ tableName, value: false }))\r\n        })\r\n\r\n\r\n        const timeFrame = getTimeFrame(activeTab);\r\n\r\n        getDataForImportantForTodayCard(timeFrame).then(({ data }) => {\r\n            Object.keys(data).forEach(key => {\r\n                const tableName = getTableNameFromKey(key);\r\n\r\n                const tableData = getTableData(tableName, data[key].data)\r\n                dispatch(setDataInTableAC({ tableName, value: tableData }))\r\n\r\n                const total = data[key].meta.total\r\n                dispatch(setTotalInTableAC({ tableName, value: total }))\r\n\r\n                const table = secretaryDashboard[tableName]\r\n\r\n                const lastPage = Math.ceil(total / table.tableParams.per_page)\r\n\r\n                if (lastPage !== table.tableData.last_page) {\r\n                    dispatch(setLastPageInTableAC({ tableName, value: lastPage }))\r\n                }\r\n\r\n                dispatch(setDataIsLoadedAC({ tableName, value: true }))\r\n            })\r\n        })\r\n    }, [activeTab])\r\n\r\n    return (\r\n        <div className={classNames('dashboardCard', 'p-3 pt-0')}>\r\n            <div className='d-flex align-items-center justify-content-between pt-3 pb-3'>\r\n                <h1 className={styles.title}>Important for today</h1>\r\n                <ToggleSwitch type=\"radio\"\r\n                    name=\"tabs-buttons\"\r\n                    value={activeTab}\r\n                    onChange={changeTabHandler}\r\n                    buttons={buttons} />\r\n            </div>\r\n\r\n            <TabMate defaultActiveKey={tabs[0].eventKey} tabs={tabs} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ImportantForToday","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"../../../../components/Table\";\r\n\r\nconst LostPatients = ({ tableName }) => {\r\n    const { secretaryDashboard } = useSelector((state) => state);\r\n\r\n    const table = secretaryDashboard[tableName];\r\n\r\n    return (\r\n        <div className=\"dashboard-table-wrapper\">\r\n            <Table\r\n                columns={table.tableColumns}\r\n                data={table.tableData}\r\n                dataIsLoaded={table.dataIsLoaded}\r\n                options={{applyMinHeightToHeader: true}}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LostPatients;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Table from \"../../../../components/Table\";\r\n\r\nconst NewPatients = () => {\r\n    const { newPatients } = useSelector((state) => state.secretaryDashboard);\r\n\r\n    return (\r\n        <div className=\"dashboard-table-wrapper\">\r\n            <Table\r\n                columns={newPatients.tableColumns}\r\n                data={newPatients.tableData}\r\n                dataIsLoaded={newPatients.dataIsLoaded}\r\n                options={{applyMinHeightToHeader: true}}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NewPatients;\r\n","import classNames from 'classnames'\r\nimport moment from '../../../../utilities/moment-config';\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getDataForNewLostPatiendCard } from '../../../../api/pages/secretary-dashboard-page'\r\nimport TabMate from '../../../../components/TabMate'\r\nimport { setDataInTableAC, setDataIsLoadedAC, setLastPageInTableAC, setTotalInTableAC } from '../../../../store/reducers/secretaryDashboard.reducer'\r\nimport styles from '../../index.module.scss'\r\nimport LostPatients from '../LostPatients'\r\nimport NewPatients from '../NewPatients'\r\n\r\nconst NewLostPatients = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { secretaryDashboard } = useSelector(state => state)\r\n\r\n    const { newPatients, inactivePatients, lostPatients } = secretaryDashboard\r\n\r\n    const tabs = [\r\n        {\r\n            eventKey: 'new_patients',\r\n            title: 'New Patients Last 3 Months',\r\n            numberOfRecords: newPatients.tableParams.total,\r\n            disabled: false,\r\n            component: <NewPatients />\r\n        },\r\n        {\r\n            eventKey: 'inactive_patients',\r\n            title: 'Inactive Patients Last 3 Months',\r\n            numberOfRecords: inactivePatients.tableParams.total,\r\n            disabled: false,\r\n            component: <LostPatients tableName='inactivePatients' />\r\n        },\r\n        {\r\n            eventKey: 'lost_patients',\r\n            title: 'Lost Patients Last 3 Months',\r\n            numberOfRecords: lostPatients.tableParams.total,\r\n            disabled: false,\r\n            component: <LostPatients tableName='lostPatients' />\r\n        },\r\n    ]\r\n\r\n    const getFullName = (firstName, lastName) => {\r\n        return `${firstName} ${lastName}`\r\n    }\r\n\r\n    const getTableNameFromKey = (key) => {\r\n        if (key === 'new_patients') {\r\n            return 'newPatients'\r\n        }\r\n        if (key === 'inactive_patients') {\r\n            return 'inactivePatients'\r\n        }\r\n        if (key === 'lost_patients') {\r\n            return 'lostPatients';\r\n        }\r\n    }\r\n\r\n    const getPatientStatusData = (el) => {\r\n      return {\r\n          status:el.status.status,\r\n          hex_color:el.status.hex_color,\r\n          status_updated_at:el.status_updated_at,\r\n      };\r\n  };\r\n\r\n    const getTableData = (tableName, data) => {\r\n        if (tableName === 'newPatients') {\r\n            const tableData = [];\r\n            data.forEach(el => {\r\n                tableData.push({\r\n                    id: el.id,\r\n                    patient_id: el.id,\r\n                    patient_name: getFullName(el.first_name, el.last_name),\r\n                    patient_status: getPatientStatusData(el),\r\n                    patient_status_updated_at: el.status_updated_at,\r\n                    patient_creation_date: moment(el.created_patient_date || el.created_at).format(\"MM/DD/YYYY\"),\r\n                    count_calls: el.ringcentral_call_logs_count,\r\n                    date_of_last_call: el.last_ringcentral_call_log\r\n                        ? moment(el.last_ringcentral_call_log.created_at).format(\"MM/DD/YYYY\")\r\n                        : '-',\r\n                    caller: el.last_ringcentral_call_log && el.last_ringcentral_call_log.user && el.last_ringcentral_call_log.user.meta\r\n                        ? getFullName(el.last_ringcentral_call_log.user.meta.firstname, el.last_ringcentral_call_log.user.meta.lastname)\r\n                        : '-',\r\n                    comment: el.last_ringcentral_call_log && el.last_ringcentral_call_log.comment\r\n                        ? el.last_ringcentral_call_log.comment \r\n                        : '-',\r\n                    cell_phone: el.cell_phone,\r\n                })\r\n            })\r\n            return tableData;\r\n        }\r\n        if (tableName === 'inactivePatients' || tableName === 'lostPatients') {\r\n            const tableData = []\r\n            data.forEach(el => {\r\n                tableData.push({\r\n                    id: el.id,\r\n                    patient_id: el.id,\r\n                    patient_name: getFullName(el.first_name, el.last_name),\r\n                    patient_status: getPatientStatusData(el),\r\n                    patient_status_updated_at: el.status_updated_at,\r\n                    therapist_name: el.last_appointment?.provider.provider_name || \"-\",\r\n                    count_visits: el.appointments_count,\r\n                    date_of_last_visit: el.last_appointment?.date_of_service.date || \"-\",\r\n                })\r\n            })\r\n            return tableData;\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        getDataForNewLostPatiendCard().then(({ data }) => {\r\n            Object.keys(data).forEach(key => {\r\n                const tableName = getTableNameFromKey(key);\r\n\r\n                const tableData = getTableData(tableName, data[key].data)\r\n\r\n                dispatch(setDataInTableAC({ tableName, value: tableData}))\r\n\r\n                const total = data[key].meta.count\r\n                dispatch(setTotalInTableAC({ tableName, value: total }))\r\n\r\n                const table = secretaryDashboard[tableName]\r\n\r\n                const lastPage = Math.ceil(total / table.tableParams.per_page)\r\n\r\n                if (lastPage !== table.tableData.last_page) {\r\n                    dispatch(setLastPageInTableAC({ tableName, value: lastPage }))\r\n                }\r\n\r\n                dispatch(setDataIsLoadedAC({ tableName, value: true }))\r\n            })\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classNames('dashboardCard', 'p-3')}>\r\n            <div className='d-flex align-items-center justify-content-between mb-3'>\r\n                <h1 className={styles.title}>New/Lost Patients</h1>\r\n            </div>\r\n\r\n            <TabMate defaultActiveKey={tabs[0].eventKey} tabs={tabs} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewLostPatients\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Sidebar from \"../../components/Sidebar\";\r\nimport ImportantForToday from \"./components/ImportantForToday\";\r\nimport NewLostPatients from \"./components/NewLostPatients\";\r\nimport AppMainLayout from \"../../layouts/AppMainLayout\";\r\nimport styles from \"./index.module.scss\";\r\nimport { getRingCentralNumbers } from '../../api/common/ringCentral';\r\nimport { setRingCentralNumbersAC } from '../../store/reducers/app.reducer';\r\n\r\nconst SecretaryDashboard = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        getRingCentralNumbers()\r\n            .then(({ data }) => {\r\n                dispatch(setRingCentralNumbersAC({ numbers: data }));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <AppMainLayout>\r\n            <div className={`container-fluid ${styles.secretaryDashboard}`}>\r\n                <div className=\"row\">\r\n                    <div className='col-3'>\r\n                        <Sidebar />\r\n                    </div>\r\n\r\n                    <div className=\"col-9 d-flex flex-column gap-3\">\r\n                        <ImportantForToday />\r\n                        <NewLostPatients />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </AppMainLayout>\r\n    );\r\n};\r\n\r\nexport default SecretaryDashboard;\r\n","export default __webpack_public_path__ + \"static/media/edit.ab2ff7b3.svg\";","export default __webpack_public_path__ + \"static/media/filter.04315454.svg\";","import React, { useRef, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { mdiMenuDown, mdiMenuUp } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport classNames from \"classnames\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport FilterIcon from \"../../../../assets/icons/filter.svg\";\r\n\r\nimport styles from \"./index.module.scss\";\r\nimport _ from \"lodash\";\r\n\r\nconst FilterMultipleSelect = ({ filters, setFilters }) => {\r\n    const titleRef = useRef(null);\r\n    const optionsRef = useRef(null);\r\n\r\n    const { sources } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    const groupedSources = sources.reduce((groups, option) => {\r\n        if (!groups[option.channel_id]) {\r\n            groups[option.channel_id] = {\r\n                channelName: option.channel.name,\r\n                options: [],\r\n            };\r\n        }\r\n        groups[option.channel_id].options.push(option);\r\n        return groups;\r\n    }, {});\r\n\r\n    const filteredSources = filters.source.map((id) => {\r\n        const source = sources.find((s) => s.id === id);\r\n        return source ? source.name : \"\";\r\n    });\r\n\r\n    const sourcesString = filteredSources.join(\", \");\r\n\r\n    const addOptionToFilter = (filterKey, value) => {\r\n        let newFilters = _.cloneDeep(filters);\r\n        newFilters[filterKey].push(value);\r\n        setFilters(newFilters);\r\n    };\r\n\r\n    const removeOptionFromFilter = (filterKey, value) => {\r\n        let newFilters = _.cloneDeep(filters);\r\n        newFilters[filterKey] = newFilters[filterKey].filter(\r\n            (item) => item !== value,\r\n        );\r\n        setFilters(newFilters);\r\n    };\r\n\r\n    const handleOptionChange = (e, filterKey) => {\r\n        const value = Number(e.target.value);\r\n        if (e.target.checked) {\r\n            addOptionToFilter(filterKey, value);\r\n        } else {\r\n            removeOptionFromFilter(filterKey, value);\r\n        }\r\n    };\r\n\r\n    useOnClickOutside(optionsRef, (e) => {\r\n        if (!titleRef.current || !titleRef.current.contains(e.target)) {\r\n            setShowOptions(false);\r\n        }\r\n    });\r\n\r\n    const handleTitleClick = () => {\r\n        setShowOptions(!showOptions);\r\n    };\r\n\r\n    const handleSelectAll = () => {\r\n        const allSourceIds = sources.map((option) => option.id);\r\n\r\n        if (filters.source.length !== sources.length) {\r\n            setFilters({ ...filters, source: allSourceIds });\r\n        } else {\r\n            setFilters({ ...filters, source: [] });\r\n        }\r\n    };\r\n\r\n    if (!sources) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.filterMultipleSelect}>\r\n            <div\r\n                ref={titleRef}\r\n                className={classNames(\r\n                    styles.title,\r\n                    showOptions && styles.showOptions,\r\n                )}\r\n                onClick={handleTitleClick}>\r\n                <span className=\"d-flex align-items-center gap-1\">\r\n                    <img src={FilterIcon} alt=\"filter-icon\" /> Filter by:{\" \"}\r\n                    <b> {sourcesString}</b>\r\n                </span>\r\n                <Icon\r\n                    className={styles.arrow}\r\n                    path={showOptions ? mdiMenuUp : mdiMenuDown}\r\n                    size={1}\r\n                />\r\n            </div>\r\n            {showOptions && (\r\n                <div ref={optionsRef} className={styles.options}>\r\n                    <div className={styles.option}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"select-all-checkbox\"\r\n                            checked={filters.source.length === sources.length}\r\n                            onChange={handleSelectAll}\r\n                        />\r\n                        <label htmlFor=\"select-all-checkbox\">Select all</label>\r\n                    </div>\r\n                    {Object.entries(groupedSources).map(\r\n                        ([channelId, { channelName, options }]) => (\r\n                            <div key={channelId}>\r\n                                <h5 className=\"m-0 ps-2\">{channelName}</h5>\r\n                                {options.map((option, index) => (\r\n                                    <div className={styles.option} key={index}>\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            className=\"form-check-input\"\r\n                                            value={option.id}\r\n                                            id={option.id}\r\n                                            checked={filters.source.includes(\r\n                                                option.id,\r\n                                            )}\r\n                                            onChange={(e) =>\r\n                                                handleOptionChange(e, \"source\")\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor={option.id}>\r\n                                            {option.name}\r\n                                        </label>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        ),\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FilterMultipleSelect;\r\n","export default __webpack_public_path__ + \"static/media/bin-white.b3baf238.svg\";","import React, { useState } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport BinIcon from \"../../../../assets/icons/bin-white.svg\";\r\nimport * as NewPatientsDashboardReducer from \"../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport { archiveInquiry } from \"../../../../api/pages/new-patients-dashboard-page\";\r\nimport CircleLoader from \"../../../../components/CircleLoader\";\r\n\r\nconst ArchivePatientModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { removeCardData, eventBus } = useSelector(\r\n        (state) => state.newPatientsDashboard,\r\n    );\r\n\r\n    const [comment, setComment] = useState(\"\");\r\n    const [showHelpText, setShowHelpText] = useState(false);\r\n    const [isLoadingArchive, setIsLoadingArchive] = useState(false);\r\n\r\n    const close = () => {\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setRemoveCardDataAC({ data: null }),\r\n        );\r\n        setComment(\"\");\r\n        setShowHelpText(false);\r\n    };\r\n\r\n    const archive = () => {\r\n        setIsLoadingArchive(true);\r\n\r\n        archiveInquiry({ id: removeCardData.cardId, data: { comment } }).then(\r\n            (res) => {\r\n                dispatch(\r\n                    NewPatientsDashboardReducer.deleteCardAC({\r\n                        laneId: removeCardData.laneId,\r\n                        cardId: removeCardData.cardId,\r\n                    }),\r\n                );\r\n                eventBus.publish({\r\n                    type: \"REMOVE_CARD\",\r\n                    laneId: removeCardData.laneId,\r\n                    cardId: removeCardData.cardId,\r\n                });\r\n\r\n                dispatch(\r\n                    NewPatientsDashboardReducer.setSelectedCardDataAC({\r\n                        data: null,\r\n                    }),\r\n                );\r\n\r\n                close();\r\n            },\r\n        ).finally(() => {\r\n            setIsLoadingArchive(false);\r\n        });\r\n    };\r\n\r\n    const handleArchiveClick = () => {\r\n        if (comment) {\r\n            archive();\r\n        } else {\r\n            setShowHelpText(true);\r\n        }\r\n    };\r\n\r\n    const inputComment = (e) => {\r\n        setComment(e.target.value);\r\n        setShowHelpText(false);\r\n    };\r\n\r\n    if (!removeCardData) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={removeCardData}\r\n            onHide={close}\r\n            className=\"custom-modal\"\r\n            centered>\r\n            <ModalHeader closeButton>\r\n                <div className=\"text-danger\">Archive inquiry:</div>\r\n                <div className=\"name\">{removeCardData.patientName}</div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"fs-16\">\r\n                    Are you sure you want to archive inquiry for: \"\r\n                    {removeCardData.patientName}\"\r\n                </div>\r\n                <div className=\"custom-form-group\">\r\n                    <label>\r\n                        <div>\r\n                            Enter your comment{\" \"}\r\n                            <span className={\"text-danger\"}>*</span>\r\n                        </div>\r\n                    </label>\r\n                    <input\r\n                        placeholder=\"Add your comment...\"\r\n                        className={classNames(\r\n                            \"form-control\",\r\n                            showHelpText && \"is-invalid\",\r\n                        )}\r\n                        style={{ backgroundColor: \"#fcfcfc\" }}\r\n                        autoFocus\r\n                        value={comment}\r\n                        onChange={inputComment}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        Comment field is required.\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex gap-3 justify-content-end\">\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={close}>\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleArchiveClick}\r\n                        className=\"btn btn-large btn-danger d-flex align-items-center justify-content-center gap-1\"\r\n                        style={{width: '125px'}}\r\n                        disabled={isLoadingArchive}\r\n                    >\r\n                        {isLoadingArchive ?\r\n                            <CircleLoader\r\n                                color={\"#fff\"}\r\n                                size={\"small\"}\r\n                            /> : <>\r\n                                <img src={BinIcon} alt=\"bin-icon\" />\r\n                                <div>Archive</div>\r\n                            </>\r\n                        }\r\n                    </button>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ArchivePatientModal;\r\n","export default __webpack_public_path__ + \"static/media/add-patient-inquiry.924e1458.svg\";","export default __webpack_public_path__ + \"static/media/plus.285ecca2.svg\";","import React from \"react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst InsuranceOption = ({ innerProps, value }) => {\r\n    return (\r\n        <div {...innerProps} className={styles.insurance}>\r\n            <div className=\"d-flex flex-column gap-2 p-2 ps-4 pe-4\">\r\n                <div className={styles.name}>{value.insurance}</div>\r\n                <div className={styles.address}>\r\n                    {value.address_line_1}, {value.city}, {value.state},{\" \"}\r\n                    {value.zip}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InsuranceOption;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport { mdiMenuDown, mdiMenuUp } from \"@mdi/js\";\r\nimport classNames from \"classnames\";\r\nimport Icon from \"@mdi/react\";\r\nimport { getDiagnoses } from \"../../../../../../api/pages/new-patients-dashboard-page\";\r\nimport { setDiagnosesAC } from \"../../../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst DiagnosesSelect = ({ formData, setFormData }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const titleRef = useRef(null);\r\n    const optionsRef = useRef(null);\r\n\r\n    const { diagnoses } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [searchDiagnosesText, setSearchDiagnosesText] = useState(\"\");\r\n\r\n    const handleOptionChange = (e, diagnose) => {\r\n        if (e.target.checked) {\r\n            const newDiagnoses = [...formData.diagnoses, diagnose];\r\n            setFormData({ ...formData, diagnoses: newDiagnoses });\r\n        } else {\r\n            const newDiagnoses = formData.diagnoses.filter(\r\n                (item) => item.id !== diagnose.id,\r\n            );\r\n            setFormData({ ...formData, diagnoses: newDiagnoses });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (searchDiagnosesText) {\r\n            getDiagnoses({ query: searchDiagnosesText }).then((res) =>\r\n                dispatch(setDiagnosesAC({ data: res.data.diagnoses })),\r\n            );\r\n            setShowOptions(true);\r\n        }\r\n    }, [searchDiagnosesText]);\r\n\r\n    useOnClickOutside(optionsRef, (e) => {\r\n        if (!titleRef.current || !titleRef.current.contains(e.target)) {\r\n            setShowOptions(false);\r\n        }\r\n    });\r\n\r\n    const handleTitleClick = () => {\r\n        setShowOptions(!showOptions);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.diagnosesSelect}>\r\n            <div\r\n                ref={titleRef}\r\n                className={classNames(\r\n                    styles.header,\r\n                    showOptions && styles.showOptions,\r\n                )}\r\n                onClick={handleTitleClick}>\r\n                {formData.diagnoses.map((diagnose) => (\r\n                    <div className={styles.diagnose}>{diagnose.full_name}</div>\r\n                ))}\r\n                <div className={styles.inputSelect}>\r\n                    <input\r\n                        value={searchDiagnosesText}\r\n                        onChange={(e) => setSearchDiagnosesText(e.target.value)}\r\n                        className=\"form-control\"\r\n                    />\r\n                    <Icon\r\n                        className={styles.arrow}\r\n                        path={showOptions ? mdiMenuUp : mdiMenuDown}\r\n                        size={1}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {showOptions && (\r\n                <div ref={optionsRef} className={styles.options}>\r\n                    {diagnoses.length ? (\r\n                        diagnoses.map((diagnose) => (\r\n                            <div className={styles.option} key={diagnose.id}>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    className=\"form-check-input\"\r\n                                    value={diagnose}\r\n                                    id={`option-${diagnose.id}`}\r\n                                    checked={formData.diagnoses.some(\r\n                                        (selectedDiagnose) =>\r\n                                            selectedDiagnose.id === diagnose.id,\r\n                                    )}\r\n                                    onChange={(e) =>\r\n                                        handleOptionChange(e, diagnose)\r\n                                    }\r\n                                />\r\n                                <label htmlFor={`option-${diagnose.id}`}>\r\n                                    {diagnose.full_name}\r\n                                </label>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <div className={classNames(styles.noData, \"p-2\")}>\r\n                            No data\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DiagnosesSelect;\r\n","import _ from \"lodash\";\r\n\r\nexport const defaultTemplatesRow = {\r\n    pos: \"\",\r\n    cpt: \"\",\r\n    modifier_a: \"\",\r\n    modifier_b: \"\",\r\n    modifier_c: \"\",\r\n    modifier_d: \"\",\r\n    diagnose_pointer: \"\",\r\n    isUserChangesDiagnosePointer: false,\r\n    isUserChangesModifierA: false,\r\n    isUserChangesCharge: false,\r\n    isDiagnosePointerError: false,\r\n    charge: \"\",\r\n    days_or_units: \"\",\r\n    patient_insurances_procedure_id: \"\",\r\n};\r\n\r\nexport const initialFormData = {\r\n    inquirable_id: \"\",\r\n    auth_number: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    middle_initial: \"\",\r\n    date_of_birth: \"\",\r\n    sex: \"\",\r\n    preferred_language_id: \"\",\r\n    email: \"\",\r\n    secondary_email: \"\",\r\n    cell_phone: \"\",\r\n    home_phone: \"\",\r\n    work_phone: \"\",\r\n    preferred_phone: \"\",\r\n    visits_auth: 0,\r\n    visits_auth_left: 0,\r\n    address: \"\",\r\n    address_2: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    zip: \"\",\r\n    provider_id: \"\",\r\n    insurance_id: \"\",\r\n    eff_start_date: \"\",\r\n    eff_stop_date: \"\",\r\n    subscriber_id: \"\",\r\n    is_self_pay: false,\r\n    self_pay: 0,\r\n    visit_copay: 0,\r\n    deductible: 0,\r\n    deductible_met: 0,\r\n    deductible_remaining: 0,\r\n    insurance_pay: 0,\r\n    eligibility_payer_id: \"\",\r\n    plan_name: \"\",\r\n    diagnoses: [],\r\n    templates: [_.cloneDeep(defaultTemplatesRow)],\r\n    therapist_manage_timesheet: false,\r\n    is_payment_forbidden: false,\r\n    source_id: null,\r\n    therapy_type_id: null,\r\n};\r\n","export const getSelectStyles = (style = {}) => {\r\n    const { backgroundColor, fontSize } = style;\r\n\r\n    return {\r\n        control: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            backgroundColor: backgroundColor || \"#FFFFFF\",\r\n            minWidth: \"115px\",\r\n            border: state.isFocused\r\n                ? \"1px solid #A4C9E5\"\r\n                : \"\" || state.selectProps.className === \"is-invalid\"\r\n                    ? \"1px solid red\"\r\n                    : \"\",\r\n            boxShadow: state.isFocused ? \"0px 0px 1px 4px #CADEEF\" : \"\",\r\n        }),\r\n        valueContainer: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            fontSize: fontSize || \"16px\",\r\n            fontWeight: \"400\",\r\n            height: \"fit-content\",\r\n            overflow: \"hidden\",\r\n        }),\r\n        menu: (baseStyles) => ({ ...baseStyles, zIndex: 9999 }),\r\n    };\r\n};\r\n","import { getSelectStyles } from \"../../../../utilities/react-select-styles\";\r\n\r\nexport const selectStyles = getSelectStyles({ backgroundColor: \"#F7F9FC\" });\r\n","export const sexList = [\r\n    { id: 0, value: \"M\", text: \"Male\" },\r\n    { id: 1, value: \"F\", text: \"Female\" },\r\n    { id: 2, value: \"U\", text: \"Unknown\" },\r\n];\r\n\r\nexport const stateList = [\r\n    \"AA\",\r\n    \"AE\",\r\n    \"AP\",\r\n    \"AK\",\r\n    \"AL\",\r\n    \"AR\",\r\n    \"AS\",\r\n    \"AZ\",\r\n    \"CA\",\r\n    \"CO\",\r\n    \"CT\",\r\n    \"DC\",\r\n    \"DE\",\r\n    \"FL\",\r\n    \"FM\",\r\n    \"GA\",\r\n    \"GU\",\r\n    \"HI\",\r\n    \"IA\",\r\n    \"ID\",\r\n    \"IL\",\r\n    \"IN\",\r\n    \"KS\",\r\n    \"KY\",\r\n    \"LA\",\r\n    \"MA\",\r\n    \"MD\",\r\n    \"ME\",\r\n    \"MH\",\r\n    \"MI\",\r\n    \"MN\",\r\n    \"MO\",\r\n    \"MP\",\r\n    \"MS\",\r\n    \"MT\",\r\n    \"NC\",\r\n    \"ND\",\r\n    \"NE\",\r\n    \"NH\",\r\n    \"NJ\",\r\n    \"NM\",\r\n    \"NV\",\r\n    \"NY\",\r\n    \"OH\",\r\n    \"OK\",\r\n    \"OR\",\r\n    \"PA\",\r\n    \"PR\",\r\n    \"PW\",\r\n    \"RI\",\r\n    \"SC\",\r\n    \"SD\",\r\n    \"TN\",\r\n    \"TX\",\r\n    \"UT\",\r\n    \"VA\",\r\n    \"VI\",\r\n    \"VT\",\r\n    \"WA\",\r\n    \"WI\",\r\n    \"WV\",\r\n    \"WY\",\r\n];\r\n","const selectDefaultValue = { value: \"\", label: \"\" };\r\n\r\nexport const getSexValue = (sexList, value) =>\r\n    getOptionValueAndLabel(sexList, \"value\", \"text\")(value);\r\n\r\nexport const getRegistrationMethodValue = (registrationMethods, value) =>\r\n    getOptionValueAndLabel(registrationMethods, \"id\", \"name\")(value);\r\n\r\nexport const getSourceValue = (sources, value) =>\r\n    getSourceOptionValueAndLabel(sources, \"value\", \"label\")(value);\r\n\r\nexport const getChannelValue = (channels, value) =>\r\n    getOptionValueAndLabel(channels, \"id\", \"name\")(value);\r\n\r\nexport const getLanguageValue = (languages, value) =>\r\n    getOptionValueAndLabel(languages, \"id\", \"title\")(value);\r\n\r\nexport const getPrimaryProviderValue = (providerList, formData) => {\r\n    if (formData.provider_id) {\r\n        const primaryProvider = providerList.find(\r\n            (provider) => provider.id === formData.provider_id,\r\n        );\r\n        return getOptionValueAndLabel(\r\n            providerList,\r\n            \"id\",\r\n            \"provider_name\",\r\n        )(primaryProvider.id);\r\n    }\r\n    if (formData.primary_provider) {\r\n        return getOptionValueAndLabel(\r\n            providerList,\r\n            \"id\",\r\n            \"provider_name\",\r\n        )(formData.primary_provider.id);\r\n    }\r\n    return selectDefaultValue;\r\n};\r\n\r\nexport const getPreferredPhoneValue = (preferredPhoneList, value) =>\r\n    getOptionValueAndLabel(preferredPhoneList, \"value\", \"text\")(value);\r\n\r\nexport const getStateValue = (state) =>\r\n    state ? { value: state, label: state } : selectDefaultValue;\r\n\r\nexport const getInsuranceValue = (insurancesList, formData) => {\r\n    if (formData.insurance) {\r\n        return getOptionValueAndLabel(\r\n            formData.insurance,\r\n            \"id\",\r\n            \"insurance\",\r\n        )(formData.insurance.id);\r\n    }\r\n    if (formData.insurance_id) {\r\n        const selectedInsurance = insurancesList.find(\r\n            (insurance) => insurance.id === formData.insurance_id,\r\n        );\r\n        return getOptionValueAndLabel(\r\n            insurancesList,\r\n            \"id\",\r\n            \"insurance\",\r\n        )(selectedInsurance.id);\r\n    }\r\n    return selectDefaultValue;\r\n};\r\n\r\nexport const getEligibilityPayerValue = (eligibilityPayersList, formData) => {\r\n    if (formData.eligibility_payer) {\r\n        return getOptionValueAndLabel(\r\n            eligibilityPayersList,\r\n            \"id\",\r\n            \"name\",\r\n        )(formData.eligibility_payer.id);\r\n    }\r\n    if (formData.eligibility_payer_id) {\r\n        const selectedPayer = eligibilityPayersList.find(\r\n            (item) => item.id === formData.eligibility_payer_id,\r\n        );\r\n        return getOptionValueAndLabel(\r\n            eligibilityPayersList,\r\n            \"id\",\r\n            \"name\",\r\n        )(selectedPayer.id);\r\n    }\r\n    return selectDefaultValue;\r\n};\r\n\r\nexport const getCptValue = (formData, index) => {\r\n    const selectDefaultValue = { value: \"\", label: \"\" };\r\n\r\n    if (formData.templates[index] && formData.templates[index].cpt) {\r\n        const cpt = formData.templates[index].cpt;\r\n        return { value: cpt, label: cpt };\r\n    }\r\n\r\n    return selectDefaultValue;\r\n};\r\n\r\nexport const getTherapyTypeValue = (therapyTypes, value) =>\r\n    getOptionValueAndLabel(therapyTypes, \"id\", \"name\")(value);\r\n\r\nconst getOptionValueAndLabel = (data, valueKey, labelKey) => (value) => {\r\n    const selectedData = Array.isArray(data)\r\n        ? data.find((item) => item[valueKey] === value)\r\n        : data;\r\n\r\n    return selectedData\r\n        ? { value: selectedData[valueKey], label: selectedData[labelKey] }\r\n        : selectDefaultValue;\r\n};\r\n\r\nconst getSourceOptionValueAndLabel = (data, valueKey, labelKey) => (value) => {\r\n    if (!data || !value) {\r\n        return selectDefaultValue;\r\n    }\r\n\r\n    let selectedData;\r\n\r\n    for (const group of data) {\r\n        selectedData = group.options.find((item) => item[valueKey] === value);\r\n        if (selectedData) break;\r\n    }\r\n\r\n    return selectedData\r\n        ? { value: selectedData[valueKey], label: selectedData[labelKey] }\r\n        : selectDefaultValue;\r\n};\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nexport const datepickerTheme = createTheme({\r\n    components: {\r\n        MuiInputBase: {\r\n            styleOverrides: {\r\n                root: {\r\n                    height: \"44px\",\r\n                    backgroundColor: \"rgb(247, 249, 252)\",\r\n                    fontSize: \"14px\",\r\n                },\r\n            },\r\n        },\r\n        MuiOutlinedInput: {\r\n            styleOverrides: {\r\n                root: ({ ownerState }) => ({\r\n                    ...(ownerState.focused && {\r\n                        boxShadow: \"0 0 0 0.25rem rgba(45, 133, 201, 0.25)\",\r\n                    }),\r\n                }),\r\n                notchedOutline: ({ ownerState }) => ({\r\n                    border: \"1px solid #ced4da !important\",\r\n                }),\r\n            },\r\n        },\r\n    },\r\n});\r\n","import Icon from \"@mdi/react\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport classNames from \"classnames\";\r\nimport { mdiMenuDown, mdiMenuUp } from \"@mdi/js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DeleteIcon from \"../../../../../../assets/icons/bin-white.svg\";\r\nimport PlusIcon from \"../../../../../../assets/icons/plus.svg\";\r\nimport InsuranceOption from \"../InsuranceOption\";\r\nimport DiagnosesSelect from \"../DiagnosesSelect\";\r\nimport PhoneInput from \"../../../../../../components/Inputs/PhoneInput\";\r\nimport { defaultTemplatesRow } from \"../../formDataDefaults\";\r\nimport { selectStyles } from \"../../selectStyles\";\r\nimport { stateList } from \"../../enums\";\r\nimport * as NewPatientsDashboardApi from \"../../../../../../api/pages/new-patients-dashboard-page\";\r\nimport * as NewPatientsDashboardReducer from \"../../../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport * as utils from \"../../utils\";\r\nimport styles from \"./index.module.scss\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport dayjs from \"dayjs\";\r\nimport { ThemeProvider } from \"@mui/material\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { datepickerTheme } from \"../../date-picker-theme\";\r\nimport _ from \"lodash\";\r\n\r\nconst DEDUCTIBLE_FIELD_NAME = \"deductible\";\r\nconst DEDUCTIBLE_MET_FIELD_NAME = \"deductible_met\";\r\nconst DEDUCTIBLE_REMAINING_FIELD_NAME = \"deductible_remaining\";\r\n\r\nconst ExpandableForm = React.memo(\r\n    ({ show, setShow, formName, formData, setFormData }) => {\r\n        const dispatch = useDispatch();\r\n\r\n        const {\r\n            languages,\r\n            providersData,\r\n            insurancesData,\r\n            eligibilityPayersData,\r\n            insuranceProcedures,\r\n            preferredPhoneList,\r\n        } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n        const languageValue = utils.getLanguageValue(\r\n            languages,\r\n            formData.preferred_language_id,\r\n        );\r\n        const primaryProviderValue = utils.getPrimaryProviderValue(\r\n            providersData.list,\r\n            formData,\r\n        );\r\n        const preferredPhoneValue = utils.getPreferredPhoneValue(\r\n            preferredPhoneList,\r\n            formData.preferred_phone,\r\n        );\r\n        const stateValue = utils.getStateValue(formData.state);\r\n        const insuranceValue = utils.getInsuranceValue(\r\n            insurancesData.list,\r\n            formData,\r\n        );\r\n        const eligibilityPayerValue = utils.getEligibilityPayerValue(\r\n            eligibilityPayersData.list,\r\n            formData,\r\n        );\r\n\r\n        const buttonText =\r\n            formName === \"add-additional-patient-information\"\r\n                ? \"Add Additional Patient Information\"\r\n                : formName === \"add-insurance-information\"\r\n                ? \"Add Insurance Information\"\r\n                : formName === \"add-diagnosis-codes\"\r\n                ? \"Add Diagnosis Codes\"\r\n                : formName === \"add-templare-billiable-line-items\"\r\n                ? \"Add Template Billable Line Items\"\r\n                : \"\";\r\n\r\n        const loadMoreProviders = () => {\r\n            const page = providersData.pageIndex + 1;\r\n            const limit = providersData.pageSize;\r\n            NewPatientsDashboardApi.getProviders({ page, limit }).then(\r\n                (res) => {\r\n                    const providersList = [\r\n                        ...providersData.list,\r\n                        ...res.data.providers.data,\r\n                    ];\r\n                    dispatch(\r\n                        NewPatientsDashboardReducer.setProvidersDataAC({\r\n                            data: {\r\n                                ...providersData,\r\n                                list: providersList,\r\n                                pageIndex: res.data.providers.current_page,\r\n                            },\r\n                        }),\r\n                    );\r\n                },\r\n            );\r\n        };\r\n\r\n        const loadMoreInsurances = () => {\r\n            const page = insurancesData.pageIndex + 1;\r\n            const limit = insurancesData.pageSize;\r\n            NewPatientsDashboardApi.getInsurances({ page, limit }).then((res) =>\r\n                dispatch(\r\n                    NewPatientsDashboardReducer.setInsurancesDataAC({\r\n                        data: {\r\n                            ...insurancesData,\r\n                            list: [...insurancesData.list, ...res.data.data],\r\n                            pageIndex: res.data.current_page,\r\n                        },\r\n                    }),\r\n                ),\r\n            );\r\n        };\r\n\r\n        const removeTemplateRow = (index) => {\r\n            const templates = formData.templates.filter(\r\n                (template, i) => i !== index,\r\n            );\r\n            setFormData({ ...formData, templates });\r\n        };\r\n\r\n        const addedTemplateRow = () => {\r\n            const templates = formData.templates;\r\n            templates.push(defaultTemplatesRow);\r\n            setFormData({ ...formData, templates });\r\n        };\r\n\r\n        const handleIsSelfPayChange = (e) => {\r\n            const is_self_pay = e.target.checked;\r\n            const newFormData = { ...formData, is_self_pay };\r\n            if (is_self_pay) {\r\n                newFormData.is_payment_forbidden = false;\r\n            }\r\n            setFormData(newFormData);\r\n        };\r\n\r\n        const handlePaymentForbiddenChange = (e) => {\r\n            const is_payment_forbidden = e.target.checked;\r\n            const newFormData = { ...formData, is_payment_forbidden };\r\n            if (is_payment_forbidden) {\r\n                newFormData.self_pay = 0;\r\n                newFormData.visit_copay = 0;\r\n                newFormData.deductible = 0;\r\n                newFormData.deductible_met = 0;\r\n                newFormData.deductible_remaining = 0;\r\n                newFormData.insurance_pay = 0;\r\n            }\r\n            setFormData(newFormData);\r\n        };\r\n\r\n        const handleInputNumberBlur = (fieldName) => {\r\n            const fieldValue = formData[fieldName]\r\n                .toString()\r\n                .replace(/^0+/, \"\");\r\n            let formattedValue = formatNumberWithTwoDecimalPlaces(fieldValue);\r\n\r\n            if (!formattedValue || formattedValue <= 0) {\r\n                formattedValue = 0;\r\n            }\r\n\r\n            const updatedFormData = {\r\n                ...formData,\r\n                [fieldName]: formattedValue,\r\n            };\r\n\r\n            setFormData(updatedFormData);\r\n\r\n            updateDeductibleFieldsIfNeeded(fieldName, updatedFormData);\r\n        };\r\n\r\n        const updateDeductibleFieldsIfNeeded = (fieldName, updatedFormData) => {\r\n            const deductibleFields = [\r\n                DEDUCTIBLE_FIELD_NAME,\r\n                DEDUCTIBLE_MET_FIELD_NAME,\r\n                DEDUCTIBLE_REMAINING_FIELD_NAME,\r\n            ];\r\n\r\n            if (!deductibleFields.includes(fieldName)) {\r\n                return;\r\n            }\r\n\r\n            const newFormData = _.cloneDeep(updatedFormData);\r\n\r\n            let currentFieldValue = Number(newFormData[fieldName]);\r\n\r\n            const { deductible } = newFormData;\r\n\r\n            if (currentFieldValue > deductible) {\r\n                newFormData[fieldName] = deductible;\r\n            }\r\n\r\n            newFormData[fieldName] = formatNumberWithTwoDecimalPlaces(\r\n                newFormData[fieldName],\r\n            );\r\n\r\n            const sum = formatNumberWithTwoDecimalPlaces(\r\n                Number(newFormData.deductible_met) +\r\n                    Number(newFormData.deductible_remaining),\r\n            );\r\n            if (\r\n                fieldName === DEDUCTIBLE_FIELD_NAME &&\r\n                newFormData[fieldName] !== sum\r\n            ) {\r\n                newFormData.deductible_met = 0;\r\n                newFormData.deductible_remaining = deductible;\r\n            }\r\n\r\n            if (fieldName === DEDUCTIBLE_MET_FIELD_NAME) {\r\n                newFormData.deductible_remaining =\r\n                    formatNumberWithTwoDecimalPlaces(\r\n                        deductible - newFormData[fieldName],\r\n                    );\r\n            }\r\n\r\n            if (fieldName === DEDUCTIBLE_REMAINING_FIELD_NAME) {\r\n                newFormData.deductible_met = formatNumberWithTwoDecimalPlaces(\r\n                    deductible - newFormData[fieldName],\r\n                );\r\n            }\r\n\r\n            setFormData(newFormData);\r\n        };\r\n\r\n        const formatNumberWithTwoDecimalPlaces = (value) => {\r\n            return Number(value).toFixed(2);\r\n        };\r\n\r\n        return (\r\n            <div className=\"d-flex flex-column gap-4\">\r\n                <div\r\n                    className={styles.showFormButton}\r\n                    onClick={() => setShow(!show)}>\r\n                    <div>{buttonText}</div>\r\n                    <Icon path={show ? mdiMenuUp : mdiMenuDown} size={1} />\r\n                </div>\r\n\r\n                {show && formName === \"add-additional-patient-information\" && (\r\n                    <div className=\"d-flex flex-column gap-4\">\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Preferred Language</label>\r\n                            <Select\r\n                                value={languageValue}\r\n                                onChange={(selectedOption) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        preferred_language_id:\r\n                                            selectedOption.value,\r\n                                    })\r\n                                }\r\n                                options={languages.map((language) => ({\r\n                                    value: language.id,\r\n                                    label: language.title,\r\n                                }))}\r\n                                isSearchable={false}\r\n                                styles={selectStyles}\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Primary care provider</label>\r\n                            <Select\r\n                                value={primaryProviderValue}\r\n                                onChange={(selectedOption) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        provider_id: selectedOption.value,\r\n                                    })\r\n                                }\r\n                                options={providersData.list.map((provider) => ({\r\n                                    value: provider.id,\r\n                                    label: provider.provider_name,\r\n                                }))}\r\n                                onMenuScrollToBottom={loadMoreProviders}\r\n                                isSearchable={false}\r\n                                styles={selectStyles}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Secondary email</label>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                value={formData.secondary_email}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        secondary_email: e.target.value,\r\n                                    })\r\n                                }></input>\r\n                        </div>\r\n                        <div className=\"d-flex gap-2\">\r\n                            <div className=\"custom-form-group\">\r\n                                <label>Home phone</label>\r\n                                <PhoneInput\r\n                                    phone={formData.home_phone}\r\n                                    setPhone={(value) =>\r\n                                        setFormData({\r\n                                            ...formData,\r\n                                            home_phone: value,\r\n                                        })\r\n                                    }\r\n                                    styles={{ backgroundColor: \"#F7F9FC\" }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"custom-form-group\">\r\n                                <label>Work phone</label>\r\n                                <PhoneInput\r\n                                    phone={formData.work_phone}\r\n                                    setPhone={(value) =>\r\n                                        setFormData({\r\n                                            ...formData,\r\n                                            work_phone: value,\r\n                                        })\r\n                                    }\r\n                                    styles={{ backgroundColor: \"#F7F9FC\" }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Preferred phone</label>\r\n                            <Select\r\n                                value={preferredPhoneValue}\r\n                                onChange={(selectedOption) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        preferred_phone: selectedOption.value,\r\n                                    })\r\n                                }\r\n                                options={preferredPhoneList.map(\r\n                                    (preferredPhone) => ({\r\n                                        value: preferredPhone.value,\r\n                                        label: preferredPhone.text,\r\n                                    }),\r\n                                )}\r\n                                isSearchable={false}\r\n                                styles={selectStyles}\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Address line 1</label>\r\n                            <input\r\n                                value={formData.address}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        address: e.target.value,\r\n                                    })\r\n                                }\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Address line 2</label>\r\n                            <input\r\n                                value={formData.address_2}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        address_2: e.target.value,\r\n                                    })\r\n                                }\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex gap-2\">\r\n                            <div className=\"custom-form-group\">\r\n                                <label>City</label>\r\n                                <input\r\n                                    value={formData.city}\r\n                                    onChange={(e) =>\r\n                                        setFormData({\r\n                                            ...formData,\r\n                                            city: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"custom-form-group\">\r\n                                <label>State</label>\r\n                                <Select\r\n                                    value={stateValue}\r\n                                    onChange={(selectedOption) =>\r\n                                        setFormData({\r\n                                            ...formData,\r\n                                            state: selectedOption.value,\r\n                                        })\r\n                                    }\r\n                                    options={stateList.map((state) => ({\r\n                                        value: state,\r\n                                        label: state,\r\n                                    }))}\r\n                                    isSearchable={false}\r\n                                    styles={selectStyles}\r\n                                />\r\n                            </div>\r\n                            <div className=\"custom-form-group\">\r\n                                <label>Zip</label>\r\n                                <input\r\n                                    value={formData.zip}\r\n                                    onChange={(e) =>\r\n                                        setFormData({\r\n                                            ...formData,\r\n                                            zip: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {show && formName === \"add-insurance-information\" && (\r\n                    <div className=\"d-flex flex-column gap-4\">\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Insurance CO</label>\r\n                            <Select\r\n                                value={insuranceValue}\r\n                                onChange={(selectedOption) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        insurance_id: selectedOption.value.id,\r\n                                    })\r\n                                }\r\n                                options={insurancesData.list.map(\r\n                                    (insurance) => ({\r\n                                        value: insurance,\r\n                                    }),\r\n                                )}\r\n                                onMenuScrollToBottom={loadMoreInsurances}\r\n                                isSearchable={false}\r\n                                styles={selectStyles}\r\n                                components={{ Option: InsuranceOption }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Subscriber ID</label>\r\n                            <input\r\n                                value={formData.subscriber_id}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        subscriber_id: e.target.value,\r\n                                    })\r\n                                }\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label\r\n                                htmlFor=\"is_self_pay\"\r\n                                className=\"d-flex gap-2\"\r\n                                style={{ width: \"fit-content\" }}>\r\n                                <span>Pays out-of-pocket</span>\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    id=\"is_self_pay\"\r\n                                    defaultChecked={formData.is_self_pay}\r\n                                    onChange={handleIsSelfPayChange}\r\n                                />\r\n                            </label>\r\n                        </div>\r\n                        {formData.is_self_pay ? (\r\n                            <div className=\"custom-form-group\">\r\n                                <label>Self-Pay</label>\r\n                                <input\r\n                                    disabled={formData.is_payment_forbidden}\r\n                                    type=\"number\"\r\n                                    min={0}\r\n                                    step={0.01}\r\n                                    value={formData.self_pay}\r\n                                    onChange={(e) =>\r\n                                        setFormData({\r\n                                            ...formData,\r\n                                            self_pay: e.target.value,\r\n                                        })\r\n                                    }\r\n                                    onBlur={() =>\r\n                                        handleInputNumberBlur(\"self_pay\")\r\n                                    }\r\n                                    onWheel={(e) => e.target.blur()}\r\n                                    className={classNames(\r\n                                        styles.inputNumber,\r\n                                        \"form-control\",\r\n                                    )}\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <>\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Co-Pay</label>\r\n                                    <input\r\n                                        disabled={formData.is_payment_forbidden}\r\n                                        type=\"number\"\r\n                                        min={0}\r\n                                        step={0.01}\r\n                                        value={formData.visit_copay}\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                visit_copay: e.target.value,\r\n                                            })\r\n                                        }\r\n                                        onBlur={() =>\r\n                                            handleInputNumberBlur(\"visit_copay\")\r\n                                        }\r\n                                        onWheel={(e) => e.target.blur()}\r\n                                        className={classNames(\r\n                                            styles.inputNumber,\r\n                                            \"form-control\",\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Insurance Pay</label>\r\n                                    <input\r\n                                        disabled={formData.is_payment_forbidden}\r\n                                        type=\"number\"\r\n                                        min={0}\r\n                                        step={0.01}\r\n                                        value={formData.insurance_pay}\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                insurance_pay: e.target.value,\r\n                                            })\r\n                                        }\r\n                                        onWheel={(e) => e.target.blur()}\r\n                                        onBlur={() =>\r\n                                            handleInputNumberBlur(\r\n                                                \"insurance_pay\",\r\n                                            )\r\n                                        }\r\n                                        className={classNames(\r\n                                            styles.inputNumber,\r\n                                            \"form-control\",\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Deductible</label>\r\n                                    <input\r\n                                        disabled={formData.is_payment_forbidden}\r\n                                        type=\"number\"\r\n                                        min={0}\r\n                                        step={0.01}\r\n                                        value={formData.deductible}\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                deductible: e.target.value,\r\n                                            })\r\n                                        }\r\n                                        onWheel={(e) => e.target.blur()}\r\n                                        onBlur={() =>\r\n                                            handleInputNumberBlur(\r\n                                                DEDUCTIBLE_FIELD_NAME,\r\n                                            )\r\n                                        }\r\n                                        className={classNames(\r\n                                            styles.inputNumber,\r\n                                            \"form-control\",\r\n                                        )}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"d-flex gap-2\">\r\n                                    <div className=\"custom-form-group\">\r\n                                        <label>Deductible Met</label>\r\n                                        <input\r\n                                            disabled={\r\n                                                formData.is_payment_forbidden\r\n                                            }\r\n                                            type=\"number\"\r\n                                            min={0}\r\n                                            step={0.01}\r\n                                            value={formData.deductible_met}\r\n                                            onChange={(e) =>\r\n                                                setFormData({\r\n                                                    ...formData,\r\n                                                    deductible_met:\r\n                                                        e.target.value,\r\n                                                })\r\n                                            }\r\n                                            onWheel={(e) => e.target.blur()}\r\n                                            onBlur={() =>\r\n                                                handleInputNumberBlur(\r\n                                                    DEDUCTIBLE_MET_FIELD_NAME,\r\n                                                )\r\n                                            }\r\n                                            className={classNames(\r\n                                                styles.inputNumber,\r\n                                                \"form-control\",\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"custom-form-group\">\r\n                                        <label>Remaining Deductible</label>\r\n                                        <input\r\n                                            disabled={\r\n                                                formData.is_payment_forbidden\r\n                                            }\r\n                                            type=\"number\"\r\n                                            min={0}\r\n                                            step={0.01}\r\n                                            value={\r\n                                                formData.deductible_remaining\r\n                                            }\r\n                                            onChange={(e) =>\r\n                                                setFormData({\r\n                                                    ...formData,\r\n                                                    deductible_remaining:\r\n                                                        e.target.value,\r\n                                                })\r\n                                            }\r\n                                            onWheel={(e) => e.target.blur()}\r\n                                            onBlur={() =>\r\n                                                handleInputNumberBlur(\r\n                                                    DEDUCTIBLE_REMAINING_FIELD_NAME,\r\n                                                )\r\n                                            }\r\n                                            className={classNames(\r\n                                                styles.inputNumber,\r\n                                                \"form-control\",\r\n                                            )}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        )}\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Health Plan Elig. Benefit Co. ID</label>\r\n                            <Select\r\n                                value={eligibilityPayerValue}\r\n                                onChange={(selectedOption) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        eligibility_payer_id:\r\n                                            selectedOption.value,\r\n                                    })\r\n                                }\r\n                                options={eligibilityPayersData.list.map(\r\n                                    (item) => ({\r\n                                        value: item.id,\r\n                                        label: item.name,\r\n                                    }),\r\n                                )}\r\n                                onMenuScrollToBottom={loadMoreInsurances}\r\n                                isSearchable={false}\r\n                                styles={selectStyles}\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Plan Name</label>\r\n                            <input\r\n                                value={formData.plan_name}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        plan_name: e.target.value,\r\n                                    })\r\n                                }\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Authorization Number</label>\r\n                            <input\r\n                                value={formData.auth_number}\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        auth_number: e.target.value,\r\n                                    })\r\n                                }\r\n                                className=\"form-control\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>No. of Visits Authorized</label>\r\n                            <input\r\n                                value={formData.visits_auth}\r\n                                type=\"number\"\r\n                                onChange={(e) =>\r\n                                    setFormData({\r\n                                        ...formData,\r\n                                        visits_auth: e.target.value,\r\n                                        visits_auth_left: e.target.value,\r\n                                    })\r\n                                }\r\n                                className={classNames(\r\n                                    styles.inputNumber,\r\n                                    \"form-control\",\r\n                                )}\r\n                            />\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Eff. Start Date</label>\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <ThemeProvider theme={datepickerTheme}>\r\n                                    <DatePicker\r\n                                        value={\r\n                                            formData.eff_start_date\r\n                                                ? dayjs(formData.eff_start_date)\r\n                                                : null\r\n                                        }\r\n                                        onChange={(value) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                eff_start_date:\r\n                                                    dayjs(value).format(\r\n                                                        \"YYYY-MM-DD\",\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        openTo={\"year\"}\r\n                                    />\r\n                                </ThemeProvider>\r\n                            </LocalizationProvider>\r\n                        </div>\r\n                        <div className=\"custom-form-group\">\r\n                            <label>Eff. Stop Date</label>\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <ThemeProvider theme={datepickerTheme}>\r\n                                    <DatePicker\r\n                                        value={\r\n                                            formData.eff_stop_date\r\n                                                ? dayjs(formData.eff_stop_date)\r\n                                                : null\r\n                                        }\r\n                                        onChange={(value) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                eff_stop_date:\r\n                                                    dayjs(value).format(\r\n                                                        \"YYYY-MM-DD\",\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        openTo={\"year\"}\r\n                                    />\r\n                                </ThemeProvider>\r\n                            </LocalizationProvider>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                id=\"payment-forbidden-checkbox\"\r\n                                checked={formData.is_payment_forbidden}\r\n                                onChange={handlePaymentForbiddenChange}\r\n                                type=\"checkbox\"\r\n                                className=\"form-check-input\"\r\n                                disabled={formData.is_self_pay}\r\n                            />\r\n                            <label\r\n                                htmlFor=\"payment-forbidden-checkbox\"\r\n                                className=\"form-check-label\">\r\n                                Payment Forbidden\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {show && formName === \"add-diagnosis-codes\" && (\r\n                    <div className=\"d-flex flex-column gap-4\">\r\n                        <div className=\"position-relative custom-form-group\">\r\n                            <label>Diagnosis Codes</label>\r\n                            <DiagnosesSelect\r\n                                formData={formData}\r\n                                setFormData={setFormData}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {show &&\r\n                    formName === \"add-templare-billiable-line-items\" &&\r\n                    formData.templates.map((template, index) => (\r\n                        <div key={index} className=\"d-flex flex-column gap-4\">\r\n                            <div className=\"d-flex gap-2\">\r\n                                <div className=\"w-50 custom-form-group\">\r\n                                    <label>POS</label>\r\n                                    <input\r\n                                        value={formData.templates[index].pos}\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      pos: e\r\n                                                                          .target\r\n                                                                          .value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"w-50 custom-form-group\">\r\n                                    <label>CPT</label>\r\n                                    <Select\r\n                                        value={utils.getCptValue(\r\n                                            formData,\r\n                                            index,\r\n                                        )}\r\n                                        onChange={(selectedOption) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      cpt: selectedOption.value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        options={insuranceProcedures\r\n                                            .filter((item) => item.code)\r\n                                            .map((item) => ({\r\n                                                value: item.code,\r\n                                                label: item.code,\r\n                                            }))}\r\n                                        styles={selectStyles}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex gap-2\">\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Modifler A</label>\r\n                                    <input\r\n                                        value={\r\n                                            formData.templates[index].modifier_a\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      modifier_a:\r\n                                                                          e\r\n                                                                              .target\r\n                                                                              .value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Modifler B</label>\r\n                                    <input\r\n                                        value={\r\n                                            formData.templates[index].modifier_b\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      modifier_b:\r\n                                                                          e\r\n                                                                              .target\r\n                                                                              .value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Modifler C</label>\r\n                                    <input\r\n                                        value={\r\n                                            formData.templates[index].modifier_c\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      modifier_c:\r\n                                                                          e\r\n                                                                              .target\r\n                                                                              .value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Modifler D</label>\r\n                                    <input\r\n                                        value={\r\n                                            formData.templates[index].modifier_d\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      modifier_d:\r\n                                                                          e\r\n                                                                              .target\r\n                                                                              .value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex gap-2\">\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Diag. pointer</label>\r\n                                    <input\r\n                                        value={\r\n                                            formData.templates[index]\r\n                                                .diagnose_pointer\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      diagnose_pointer:\r\n                                                                          e\r\n                                                                              .target\r\n                                                                              .value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Line Charges</label>\r\n                                    <input\r\n                                        value={formData.templates[index].charge}\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      charge: e\r\n                                                                          .target\r\n                                                                          .value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"custom-form-group\">\r\n                                    <label>Day or Units</label>\r\n                                    <input\r\n                                        value={\r\n                                            formData.templates[index]\r\n                                                .days_or_units\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            setFormData({\r\n                                                ...formData,\r\n                                                templates:\r\n                                                    formData.templates.map(\r\n                                                        (template, i) =>\r\n                                                            i === index\r\n                                                                ? {\r\n                                                                      ...template,\r\n                                                                      days_or_units:\r\n                                                                          e\r\n                                                                              .target\r\n                                                                              .value,\r\n                                                                  }\r\n                                                                : template,\r\n                                                    ),\r\n                                            })\r\n                                        }\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end gap-3\">\r\n                                <button\r\n                                    onClick={() => removeTemplateRow(index)}\r\n                                    disabled={formData.templates.length === 1}\r\n                                    className=\"btn btn-danger d-flex align-items-center justify-content-center\"\r\n                                    style={{ width: \"44px\", height: \"44px\" }}>\r\n                                    <img src={DeleteIcon} alt=\"delete-icon\" />\r\n                                </button>\r\n                                <button\r\n                                    onClick={addedTemplateRow}\r\n                                    className=\"btn btn-primary d-flex align-items-center justify-content-center\"\r\n                                    style={{ width: \"44px\", height: \"44px\" }}>\r\n                                    <img src={PlusIcon} alt=\"plus-icon\" />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        );\r\n    },\r\n);\r\n\r\nexport default ExpandableForm;\r\n","import React from \"react\";\r\nimport moment from \"../../../../../../utilities/moment-config\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst Patient = ({ patient }) => {\r\n\r\n    const formatDateToYears = () => {\r\n        const dateObject = moment(patient.date_of_birth);\r\n        const yearsDifference = moment().diff(dateObject, 'years');\r\n        return `${yearsDifference} years`;\r\n    }\r\n\r\n    const getSexTitle = () => {\r\n        let sex = 'Not specified';\r\n        if (patient.sex === 'M') {\r\n            sex = 'Male';\r\n        }\r\n        if (patient.sex === 'F') {\r\n            sex = 'Female';\r\n        }\r\n        if (patient.sex === 'U') {\r\n            sex = 'Unknown';\r\n        }\r\n        return sex;\r\n    }\r\n\r\n    const getStatusText = () => {\r\n        let status = 'Not created';\r\n        if (patient.status) {\r\n            status = patient.status.status;\r\n        }\r\n        return status;\r\n    }\r\n\r\n    const getStatusColor = () => {\r\n        let color = '#EA3323';\r\n        if (patient.status) {\r\n            color = `#${patient.status.hex_color}`;\r\n        }\r\n        return color;\r\n    }\r\n\r\n    const years = formatDateToYears();\r\n    const sex = getSexTitle();\r\n    const status = getStatusText();\r\n    const statusColor = getStatusColor();\r\n\r\n    return (\r\n        <div className={styles.patient}>\r\n            <div className=\"d-flex justify-content-between p-2 ps-3 pe-3\">\r\n                <div className=\"d-flex flex-column gap-1\">\r\n                    <div className={styles.name}>{patient.full_name}</div>\r\n                    <div className={styles.email}>{patient.email}</div>\r\n                </div>\r\n                <div className=\"d-flex flex-column align-items-end gap-1\">\r\n                    <div className=\"d-flex gap-1\">\r\n                        <div>{sex},</div>\r\n                        <div>{years}</div>\r\n                    </div>\r\n                    <div className={styles.status} style={{ color: statusColor }}>{status}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Patient","import React, { useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport classNames from \"classnames\";\r\nimport Patient from \"../Patient\";\r\nimport { getInquirablesWithoutActiveInquiries } from \"../../../../../../api/pages/new-patients-dashboard-page\";\r\nimport { setPatientsDataAC } from \"../../../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst ExistingPatientDialog = ({ searchQuery, setSelectedPatient, close }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const ref = useRef(null);\r\n\r\n    const { patientsData } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n    useOnClickOutside(ref, () => close());\r\n\r\n    const loadMorePatients = () => {\r\n        const payload = {\r\n            page: patientsData.pageIndex + 1,\r\n            limit: patientsData.pageSize,\r\n            search_query: searchQuery,\r\n        };\r\n        getInquirablesWithoutActiveInquiries(payload).then((res) => {\r\n            const newPatients = Object.values(res.data.data);\r\n            const list = [...patientsData.list, ...newPatients];\r\n            dispatch(\r\n                setPatientsDataAC({\r\n                    data: {\r\n                        ...patientsData,\r\n                        list,\r\n                        pageIndex: res.data.current_page,\r\n                    },\r\n                }),\r\n            );\r\n        });\r\n    };\r\n\r\n    const handleScroll = (e) => {\r\n        const { scrollHeight, scrollTop, clientHeight } = e.target;\r\n        if (scrollHeight - scrollTop === clientHeight) {\r\n            loadMorePatients();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={ref}\r\n            className={styles.existingPatientDialog}\r\n            onScroll={handleScroll}>\r\n            <div className=\"d-flex flex-column\">\r\n                {patientsData.list.length ? (\r\n                    patientsData.list.map((patient) => (\r\n                        <div\r\n                            key={patient.id}\r\n                            onClick={(e) => setSelectedPatient(patient)}>\r\n                            <Patient patient={patient} />\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <div\r\n                        className={classNames(styles.noData, \"p-3 text-black\")}>\r\n                        No data\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExistingPatientDialog;\r\n","import moment from \"moment-timezone\";\r\nimport {\r\n    APPOINTMENT_SCHEDULED_LANE_ID,\r\n    INBOX_LANE_ID,\r\n    IN_PROGRESS_LANE_ID,\r\n    INITIAL_APPOINTMENT_COMPLETE_LANE_ID,\r\n    INITIAL_SURVEY_COMPLETE_LANE_ID,\r\n    FOUR_APPOINTMENTS_COMPLETE_LANE_ID,\r\n    NEW_PATIENTS_DASHBOARD_PROBLEMATIC_CARDS,\r\n    ONBOARDING_COMPLETE_LANE_ID,\r\n} from \"../../constants/new-patients-dashboard\";\r\n\r\nexport const processCardData = (item) => {\r\n    const style = {};\r\n\r\n    if (\r\n        item.stage_id === IN_PROGRESS_LANE_ID &&\r\n        item.has_cancelled_appointment &&\r\n        !item.next_appointment\r\n    ) {\r\n        style.backgroundColor =\r\n            NEW_PATIENTS_DASHBOARD_PROBLEMATIC_CARDS.HAS_CANCELLED_APPOINTMENT_CARD_COLOR;\r\n    }\r\n\r\n    if (\r\n        (item.stage_id === INBOX_LANE_ID &&\r\n            moment().diff(item.stage_changed_at, \"days\") >=\r\n                NEW_PATIENTS_DASHBOARD_PROBLEMATIC_CARDS.DAYS_FOR_INBOX) ||\r\n        (item.stage_id === IN_PROGRESS_LANE_ID &&\r\n            moment().diff(item.stage_changed_at, \"days\") >=\r\n                NEW_PATIENTS_DASHBOARD_PROBLEMATIC_CARDS.DAYS_FOR_IN_PROGRESS)\r\n    ) {\r\n        style.backgroundColor =\r\n            NEW_PATIENTS_DASHBOARD_PROBLEMATIC_CARDS.PROBLEMATIC_CARD_COLOR;\r\n        style.border = \"1.5px solid #EA3323\";\r\n    }\r\n\r\n    return {\r\n        id: item.id.toString(),\r\n        stageId: item.stage_id,\r\n        inquirable: item.inquirable,\r\n        isPatientCreated: item.is_patient_created,\r\n        registrationMethod: item.registration_method,\r\n        source: item.source,\r\n        nextAppointment: item.next_appointment,\r\n        rescheduledAppointment: item.rescheduled_appointment,\r\n        createdAt: item.created_at,\r\n        isArchived: item.is_archived,\r\n        initialAppointmentIsCompleted: item.initial_appointment_is_completed,\r\n        initialSurveyComplete: item.initial_survey_complete,\r\n        secondSurveyComplete: item.second_survey_complete,\r\n        onboardingCompleteComment: item.onboarding_complete_comment,\r\n        stageChangedAt: item.stage_changed_at,\r\n        onboardingDate: item.onboarding_date,\r\n        onboardingTime: item.onboarding_time,\r\n        onboardingPhone: item.onboarding_phone,\r\n        style,\r\n    };\r\n};\r\n\r\nconst PATIENT_NOT_CREATED_REASON = \"Patient not created\";\r\nconst NO_ACTIVE_APPOINTMENT_REASON = \"Patient must have an active appointment\";\r\nconst ONBOARDING_NO_COMPLETED_REASON = \"Patient did not have onboarding\";\r\nconst APPOINTMENT_DATE_ALREADY_PASSED_REASON = \"The date of the next appointment has already passed\";\r\nconst NO_COMPLETED_APPOINTMENTS_REASON = \"Patient has no completed appointments\";\r\nconst AUTO_TRANSFER_REASON = \"Inquiry is transferred to this stage automatically\";\r\n\r\nconst getValidateError = (reason) => {\r\n    return `You cannot change inquiry stage due to following reason: ${reason}`;\r\n};\r\n\r\nexport const columnRules = {\r\n    [IN_PROGRESS_LANE_ID]: {\r\n        check: (cardDetails) => {\r\n            if (!cardDetails.isPatientCreated) {\r\n                return getValidateError(PATIENT_NOT_CREATED_REASON);\r\n            }\r\n        },\r\n    },\r\n\r\n    [APPOINTMENT_SCHEDULED_LANE_ID]: {\r\n        check: (cardDetails) => {\r\n            if (cardDetails.onboardingCompleteComment) {\r\n                return `Please transfer the inquiry card to the \"Onboarding complete\" stage directly`;\r\n            }\r\n            if (!cardDetails.nextAppointment) {\r\n                return getValidateError(NO_ACTIVE_APPOINTMENT_REASON);\r\n            }\r\n            if (moment.unix(cardDetails.nextAppointment.time).isBefore(moment(), \"day\")) {\r\n                return getValidateError(APPOINTMENT_DATE_ALREADY_PASSED_REASON);\r\n            }\r\n\r\n            return null;\r\n        },\r\n    },\r\n\r\n    [ONBOARDING_COMPLETE_LANE_ID]: {\r\n        check: (cardDetails) => {\r\n            if (!cardDetails.onboardingCompleteComment) {\r\n                return getValidateError(ONBOARDING_NO_COMPLETED_REASON);\r\n            } else if (!cardDetails.nextAppointment) {\r\n                return getValidateError(NO_ACTIVE_APPOINTMENT_REASON);\r\n            } else if (\r\n                moment\r\n                    .unix(cardDetails.nextAppointment.time)\r\n                    .isBefore(moment(), \"day\")\r\n            ) {\r\n                return getValidateError(APPOINTMENT_DATE_ALREADY_PASSED_REASON);\r\n            }\r\n            return null;\r\n        },\r\n    },\r\n\r\n    [INITIAL_APPOINTMENT_COMPLETE_LANE_ID]: {\r\n        check: (cardDetails) => {\r\n            if (!cardDetails.initialAppointmentIsCompleted) {\r\n                return getValidateError(NO_COMPLETED_APPOINTMENTS_REASON);\r\n            } else if (!cardDetails.onboardingCompleteComment) {\r\n                return getValidateError(ONBOARDING_NO_COMPLETED_REASON);\r\n            }\r\n            return null;\r\n        },\r\n    },\r\n\r\n    [INITIAL_SURVEY_COMPLETE_LANE_ID]: {\r\n        check: (cardDetails) => {\r\n            return getValidateError(AUTO_TRANSFER_REASON);\r\n        },\r\n    },\r\n\r\n    [FOUR_APPOINTMENTS_COMPLETE_LANE_ID]: {\r\n        check: (cardDetails) => {\r\n            return getValidateError(AUTO_TRANSFER_REASON);\r\n        },\r\n    },\r\n};\r\n\r\nexport const getDisplayedProviderForInquiry = (inquiry) => {\r\n    if (!inquiry.isPatientCreated) {\r\n        return null;\r\n    }\r\n\r\n    if (inquiry.nextAppointment) {\r\n        return inquiry.nextAppointment.provider;\r\n    }\r\n\r\n    return inquiry.inquirable.past_appointment_provider;\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Icon from \"@mdi/react\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport classNames from \"classnames\";\r\nimport { mdiClose } from \"@mdi/js\";\r\nimport Select from \"react-select\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport NotificationsContext from \"../../../../contexts/NotificationsContext\";\r\nimport AddPatientIcon from \"../../../../assets/icons/add-patient-inquiry.svg\";\r\nimport ExpandableForm from \"./components/ExpandableForm\";\r\nimport ExistingPatientDialog from \"./components/ExistingPatientDialog\";\r\nimport PhoneInput from \"../../../../components/Inputs/PhoneInput\";\r\nimport CircleLoader from \"../../../../components/CircleLoader\";\r\nimport { defaultTemplatesRow, initialFormData } from \"./formDataDefaults\";\r\nimport { selectStyles } from \"./selectStyles\";\r\nimport { sexList } from \"./enums\";\r\nimport * as utils from \"./utils\";\r\nimport * as NewPatientsDashboardApi from \"../../../../api/pages/new-patients-dashboard-page\";\r\nimport * as NewPatientsDashboardReducer from \"../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport { ThemeProvider } from \"@mui/material\";\r\n\r\nimport styles from \"./index.module.scss\";\r\nimport { datepickerTheme } from \"./date-picker-theme\";\r\nimport { processCardData } from \"../../utils\";\r\n\r\nconst AddPatientModal = () => {\r\n    const dispatch = useDispatch();\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const { userData } = useSelector(state => state.app);\r\n    const {\r\n        eventBus,\r\n        showAddPatientModal,\r\n        sources,\r\n        providersData,\r\n        patientsData,\r\n        insurancesData,\r\n        eligibilityPayersData,\r\n        preferredPhoneList,\r\n        registrationMethods,\r\n        therapyTypes,\r\n    } = useSelector((state) => state.newPatientsDashboard);\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [dataIsLoaded, setDataIsLoaded] = useState(false);\r\n\r\n    const [\r\n        showAddAdditionalPatientInformation,\r\n        setShowAddAdditionalPatientInformation,\r\n    ] = useState(false);\r\n    const [showAddInsuranceInformation, setShowAddInsuranceInformation] =\r\n        useState(false);\r\n    const [showAddDiagnosisCodes, setShowAddDiagnosisCodes] = useState(false);\r\n    const [\r\n        showAddTemplateBillableLineItems,\r\n        setshowAddTemplateBillableLineItems,\r\n    ] = useState(false);\r\n    const [searchPatientName, setSearchPatientName] = useState(\"\");\r\n    const [selectedPatient, setSelectedPatient] = useState(null);\r\n    const [showExistingPatientDialog, setShowExistingPatientDialog] =\r\n        useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [isLoadingSave, setIsLoadingSave] = useState(false);\r\n\r\n    const [sourceValue, setSourceValue] = useState({});\r\n    const [sourceOptions, setSourceOptions] = useState(() => {\r\n        const groupedSources = sources.reduce((acc, source) => {\r\n            if (!acc[source.channel.name]) {\r\n                acc[source.channel.name] = [];\r\n            }\r\n            acc[source.channel.name].push(source);\r\n            return acc;\r\n        }, {});\r\n\r\n        return Object.entries(groupedSources).map(\r\n            ([groupName, groupSources]) => ({\r\n                label: groupName,\r\n                options: groupSources.map((source) => ({\r\n                    value: source.id,\r\n                    label: source.name,\r\n                })),\r\n            }),\r\n        )\r\n    });\r\n    const [isLoadingSource, setIsLoadingSource] = useState(false);\r\n\r\n    const requiredFields = [\r\n        {\r\n            fieldName: \"first_name\",\r\n            errorText: \"The first name field is required\",\r\n            forNewPatients: false,\r\n        },\r\n        {\r\n            fieldName: \"last_name\",\r\n            errorText: \"The last name field is required\",\r\n            forNewPatients: false,\r\n        },\r\n        {\r\n            fieldName: \"date_of_birth\",\r\n            errorText: \"The date of birth field is required\",\r\n            forNewPatients: false,\r\n        },\r\n        {\r\n            fieldName: \"sex\",\r\n            errorText: \"The sex field is required\",\r\n            forNewPatients: false,\r\n        },\r\n        {\r\n            fieldName: \"cell_phone\",\r\n            errorText: \"The phone field is required\",\r\n            forNewPatients: false,\r\n        },\r\n        {\r\n            fieldName: \"registration_method_id\",\r\n            errorText: \"The registration method field is required\",\r\n            forNewPatients: false,\r\n        },\r\n        {\r\n            fieldName: \"source_id\",\r\n            errorText: \"The source field is required\",\r\n            forNewPatients: false,\r\n        },\r\n    ];\r\n\r\n    const sexValue = utils.getSexValue(sexList, formData.sex);\r\n    const registrationMethodValue = utils.getRegistrationMethodValue(\r\n        registrationMethods,\r\n        formData.registration_method_id,\r\n    );\r\n    const therapyTypeValue = utils.getTherapyTypeValue(\r\n        therapyTypes,\r\n        formData.therapy_type_id,\r\n    );\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n        requiredFields.forEach((field) => {\r\n            if (!formData[field.fieldName]) {\r\n                if (selectedPatient && field.forNewPatients) {\r\n                    return;\r\n                }\r\n\r\n                errors[field.fieldName] = field.errorText;\r\n            }\r\n        });\r\n        setErrors(errors);\r\n\r\n        return !!Object.keys(errors).length;\r\n    };\r\n\r\n    const addCard = (formData) => {\r\n        setIsLoadingSave(true);\r\n\r\n        NewPatientsDashboardApi.createInquiry(formData)\r\n            .then((res) => {\r\n                const data = res.data;\r\n\r\n                dispatch(\r\n                    NewPatientsDashboardReducer.addValueToSourcesAC({\r\n                        id: data.source.id,\r\n                        name: data.source.name,\r\n                        channel_id: data.source.channel_id,\r\n                    }),\r\n                );\r\n\r\n                const newCard = processCardData(data);\r\n\r\n                eventBus.publish({\r\n                    type: \"ADD_CARD\",\r\n                    laneId: data.stage_id,\r\n                    card: newCard,\r\n                });\r\n\r\n                dispatch(\r\n                    NewPatientsDashboardReducer.addCardAC({\r\n                        laneId: data.stage_id,\r\n                        card: newCard,\r\n                    }),\r\n                );\r\n                handleModalClose();\r\n            })\r\n            .catch((error) => {\r\n                if (error.response?.status === 422) {\r\n                    const data = error.response.data;\r\n\r\n                    const message = Object.values(data.errors)[0];\r\n\r\n                    enqueueNotification(\"Error\", message);\r\n\r\n                    const newErrors = errors;\r\n\r\n                    for (const [key, value] of Object.entries(data.errors)) {\r\n                        newErrors[key] = value[0];\r\n                    }\r\n\r\n                    setErrors(newErrors);\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setIsLoadingSave(false);\r\n            });\r\n    };\r\n\r\n    const handleSaveClick = () => {\r\n        if (validate()) {\r\n            return;\r\n        }\r\n        addCard(formData);\r\n    };\r\n\r\n    const handleSourceInputChange = (key, value) => {\r\n        handleInputChange(key, value);\r\n        setSourceValue(utils.getSourceValue(sourceOptions, value));\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setFormData({ ...formData, [key]: value });\r\n\r\n        if (errors[key]) {\r\n            setErrors({ ...errors, [key]: \"\" });\r\n        }\r\n    };\r\n\r\n    const resetState = () => {\r\n        setErrors({});\r\n        setSelectedPatient(null);\r\n        setSearchPatientName(\"\");\r\n        setFormData(initialFormData);\r\n        setSourceValue({});\r\n        setShowAddAdditionalPatientInformation(false);\r\n        setShowAddInsuranceInformation(false);\r\n        setShowAddDiagnosisCodes(false);\r\n        setshowAddTemplateBillableLineItems(false);\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setShowAddPatientModalAC({\r\n                value: false,\r\n            }),\r\n        );\r\n        resetState();\r\n    };\r\n\r\n    const handleCreateSource = async (sourceName) => {\r\n        setIsLoadingSource(true);\r\n\r\n        NewPatientsDashboardApi.createSource(sourceName)\r\n            .then((response) => {\r\n                const newSource = {\r\n                    value: response.data.id,\r\n                    label: response.data.name\r\n                };\r\n                const groupName = response.data.channel ? response.data.channel.name : 'Other';\r\n                const groupIndex = sourceOptions.findIndex(group => group.label === groupName);\r\n\r\n                let newOptions = [];\r\n                if (groupIndex !== -1) {\r\n                    // check if source were previously created\r\n                    const sourceIndex = sourceOptions[groupIndex].options.findIndex(source => source.value === newSource.value);\r\n                    if (sourceIndex !== -1) {\r\n                        handleInputChange(\"source_id\", newSource.value);\r\n                        setSourceValue(utils.getSourceValue(sourceOptions, newSource.value));\r\n                        return;\r\n                    }\r\n\r\n                    newOptions = [...sourceOptions];\r\n                    newOptions[groupIndex].options.push(newSource);\r\n                } else {\r\n                    newOptions = [\r\n                        ...sourceOptions,\r\n                        {\r\n                            label: groupName,\r\n                            options: [newSource]\r\n                        }\r\n                    ];\r\n                }\r\n\r\n                setSourceOptions(newOptions);\r\n                handleInputChange(\"source_id\", newSource.value);\r\n                setSourceValue(utils.getSourceValue(newOptions, newSource.value));\r\n            })\r\n            .catch((error) => {\r\n                enqueueNotification(\"Error\", 'An error occured. Source wasn\\'t created.');\r\n            })\r\n            .finally(() => {\r\n                setIsLoadingSource(false);\r\n            });\r\n    };\r\n\r\n    const handleExistingPatientInputOnFocus = () => {\r\n        if (searchPatientName.length > 1) {\r\n            setShowExistingPatientDialog(true);\r\n        }\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        const [\r\n            languagesRes,\r\n            patientsRes,\r\n            providersRes,\r\n            insurancesRes,\r\n            eligibilityPayersRes,\r\n            insuranceProceduresRes,\r\n            diagnosesRes,\r\n        ] = await Promise.all([\r\n            NewPatientsDashboardApi.getLanguages(),\r\n            NewPatientsDashboardApi.getInquirablesWithoutActiveInquiries({\r\n                page: patientsData.pageIndex,\r\n                limit: patientsData.pageSize,\r\n            }),\r\n            NewPatientsDashboardApi.getProviders({\r\n                page: providersData.pageIndex,\r\n                limit: providersData.pageSize,\r\n            }),\r\n            NewPatientsDashboardApi.getInsurances({\r\n                page: insurancesData.pageIndex,\r\n                limit: insurancesData.pageSize,\r\n            }),\r\n            NewPatientsDashboardApi.getEligibilityPayers({\r\n                page: eligibilityPayersData.pageIndex,\r\n                limit: eligibilityPayersData.pageSize,\r\n            }),\r\n            NewPatientsDashboardApi.getInsuranceProcedures(),\r\n            NewPatientsDashboardApi.getDiagnoses(),\r\n        ]);\r\n\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setLanguagesAC({\r\n                languages: languagesRes.data.languages,\r\n            }),\r\n        );\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setPatientsDataAC({\r\n                data: {\r\n                    ...patientsData,\r\n                    list: patientsRes.data.data,\r\n                    pageIndex: patientsRes.data.current_page,\r\n                },\r\n            }),\r\n        );\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setProvidersDataAC({\r\n                data: {\r\n                    ...providersData,\r\n                    list: providersRes.data.providers.data,\r\n                    pageIndex: providersRes.data.providers.current_page,\r\n                },\r\n            }),\r\n        );\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setInsurancesDataAC({\r\n                data: {\r\n                    ...insurancesData,\r\n                    list: insurancesRes.data.data,\r\n                    pageIndex: insurancesRes.data.current_page,\r\n                },\r\n            }),\r\n        );\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setEligibilityPayersDataAC({\r\n                data: {\r\n                    ...eligibilityPayersData,\r\n                    list: eligibilityPayersRes.data.data,\r\n                    pageIndex: eligibilityPayersRes.data.current_page,\r\n                },\r\n            }),\r\n        );\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setInsuranceProceduresAC({\r\n                data: insuranceProceduresRes.data.insurance_procedures,\r\n            }),\r\n        );\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setDiagnosesAC({\r\n                data: diagnosesRes.data.diagnoses,\r\n            }),\r\n        );\r\n\r\n        setDataIsLoaded(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (showAddPatientModal && !dataIsLoaded) {\r\n            fetchData();\r\n        }\r\n    }, [showAddPatientModal]);\r\n\r\n    useEffect(() => {\r\n        if (!searchPatientName.length) {\r\n            return setShowExistingPatientDialog(false);\r\n        }\r\n\r\n        if (searchPatientName.length > 1) {\r\n            const payload = {\r\n                page: 1,\r\n                limit: patientsData.pageSize,\r\n                search_query: searchPatientName,\r\n            };\r\n            NewPatientsDashboardApi.getInquirablesWithoutActiveInquiries(\r\n                payload,\r\n            ).then((res) =>\r\n                dispatch(\r\n                    NewPatientsDashboardReducer.setPatientsDataAC({\r\n                        data: {\r\n                            ...patientsData,\r\n                            list: res.data.data,\r\n                            pageIndex: res.data.current_page,\r\n                        },\r\n                    }),\r\n                ),\r\n            );\r\n            setShowExistingPatientDialog(true);\r\n        }\r\n    }, [searchPatientName]);\r\n\r\n    useEffect(() => {\r\n        if (!selectedPatient) {\r\n            setFormData(initialFormData);\r\n            setSearchPatientName(\"\");\r\n        } else {\r\n            let patient = _.cloneDeep(selectedPatient);\r\n            if (patient.inquiries.length) {\r\n                patient.source_id = patient.inquiries[0].source_id;\r\n                patient.registration_method_id =\r\n                    patient.inquiries[0].registration_method_id;\r\n            }\r\n\r\n            if (patient.preferred_phone) {\r\n                const preferredPhone = preferredPhoneList.find(\r\n                    (phone) => phone.id === patient.preferred_phone,\r\n                );\r\n                patient.preferred_phone = preferredPhone.value;\r\n            }\r\n\r\n            patient.insurance_id = patient.insurance\r\n                ? patient.insurance.id\r\n                : null;\r\n\r\n            if (patient.insurance_plan) {\r\n                patient.plan_name = patient.insurance_plan.name;\r\n            }\r\n\r\n            if (!patient.templates.length) {\r\n                patient.templates = [_.cloneDeep(defaultTemplatesRow)];\r\n            }\r\n\r\n            setFormData({\r\n                ...patient,\r\n                ...{\r\n                    inquirable_id: patient.id,\r\n                    therapist_manage_timesheet: false,\r\n                },\r\n            });\r\n        }\r\n\r\n        setErrors({});\r\n        setShowExistingPatientDialog(false);\r\n    }, [selectedPatient]);\r\n\r\n    return (\r\n        <Modal\r\n            show={showAddPatientModal}\r\n            size=\"lg\"\r\n            className=\"custom-modal\"\r\n            backdrop=\"true\"\r\n            onHide={handleModalClose}\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <img src={AddPatientIcon} alt=\"add-patient-icon\" />\r\n                <div>Add patient inquiry</div>\r\n            </Modal.Header>\r\n            <Modal.Body className={classNames(styles.body)}>\r\n                {dataIsLoaded ? (\r\n                    <div>\r\n                        <div className=\"d-flex gap-1\">\r\n                            <div className={styles.patientInfo}>\r\n                                <div className=\"d-flex flex-column gap-4\">\r\n                                    <div className=\"custom-form-group\">\r\n                                        <label>Patient</label>\r\n                                        <div className={\"position-relative\"}>\r\n                                            <input\r\n                                                placeholder=\"John Doe\"\r\n                                                value={\r\n                                                    !selectedPatient\r\n                                                        ? searchPatientName\r\n                                                        : `${selectedPatient.first_name} ${selectedPatient.last_name}`\r\n                                                }\r\n                                                onFocus={\r\n                                                    handleExistingPatientInputOnFocus\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    setSearchPatientName(\r\n                                                        e.target.value,\r\n                                                    )\r\n                                                }\r\n                                                className={classNames(\r\n                                                    \"form-control\",\r\n                                                    errors.inquirable_id &&\r\n                                                        \"is-invalid\",\r\n                                                )}></input>\r\n                                            {selectedPatient && (\r\n                                                <div\r\n                                                    className={\r\n                                                        styles.btnClearSelectedPatient\r\n                                                    }\r\n                                                    onClick={() =>\r\n                                                        setSelectedPatient(null)\r\n                                                    }>\r\n                                                    <Icon\r\n                                                        className={\r\n                                                            styles.clearSelectedPatientIcon\r\n                                                        }\r\n                                                        path={mdiClose}\r\n                                                        size={0.9}\r\n                                                    />\r\n                                                </div>\r\n                                            )}\r\n                                            {showExistingPatientDialog && (\r\n                                                <ExistingPatientDialog\r\n                                                    searchQuery={\r\n                                                        searchPatientName\r\n                                                    }\r\n                                                    setSelectedPatient={\r\n                                                        setSelectedPatient\r\n                                                    }\r\n                                                    close={() =>\r\n                                                        setShowExistingPatientDialog(\r\n                                                            false,\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                            <div className=\"invalid-feedback \">\r\n                                                {errors.inquirable_id}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"d-flex gap-2\">\r\n                                        <div className=\"custom-form-group\">\r\n                                            <label>\r\n                                                First Name{\" \"}\r\n                                                <span className=\"text-danger\">\r\n                                                    *\r\n                                                </span>\r\n                                            </label>\r\n                                            <input\r\n                                                className={classNames(\r\n                                                    \"form-control\",\r\n                                                    errors.first_name &&\r\n                                                        \"is-invalid\",\r\n                                                )}\r\n                                                value={formData.first_name}\r\n                                                onChange={(e) =>\r\n                                                    handleInputChange(\r\n                                                        \"first_name\",\r\n                                                        e.target.value,\r\n                                                    )\r\n                                                }></input>\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.first_name}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"custom-form-group\">\r\n                                            <label>\r\n                                                Last Name{\" \"}\r\n                                                <span className=\"text-danger\">\r\n                                                    *\r\n                                                </span>\r\n                                            </label>\r\n                                            <input\r\n                                                className={classNames(\r\n                                                    \"form-control\",\r\n                                                    errors.last_name &&\r\n                                                        \"is-invalid\",\r\n                                                )}\r\n                                                value={formData.last_name}\r\n                                                onChange={(e) =>\r\n                                                    handleInputChange(\r\n                                                        \"last_name\",\r\n                                                        e.target.value,\r\n                                                    )\r\n                                                }></input>\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.last_name}\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"custom-form-group\">\r\n                                            <label>Middle initial</label>\r\n                                            <input\r\n                                                value={formData.middle_initial}\r\n                                                onChange={(e) =>\r\n                                                    setFormData({\r\n                                                        ...formData,\r\n                                                        middle_initial:\r\n                                                            e.target.value,\r\n                                                    })\r\n                                                }\r\n                                                className=\"form-control\"></input>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex gap-2\">\r\n                                        <div className=\"w-100\">\r\n                                            <div className=\"custom-form-group\">\r\n                                                <label>\r\n                                                    Sex{\" \"}\r\n                                                    <span className=\"text-danger\">\r\n                                                        *\r\n                                                    </span>\r\n                                                </label>\r\n                                                <Select\r\n                                                    value={sexValue}\r\n                                                    onChange={(\r\n                                                        selectedOption,\r\n                                                    ) =>\r\n                                                        handleInputChange(\r\n                                                            \"sex\",\r\n                                                            selectedOption.value,\r\n                                                        )\r\n                                                    }\r\n                                                    options={sexList.map(\r\n                                                        (item) => ({\r\n                                                            value: item.value,\r\n                                                            label: item.text,\r\n                                                        }),\r\n                                                    )}\r\n                                                    styles={selectStyles}\r\n                                                    className={classNames(\r\n                                                        \"custom-form-select\",\r\n                                                        errors.sex &&\r\n                                                            \"is-invalid\",\r\n                                                    )}\r\n                                                />\r\n                                                <div className=\"invalid-feedback\">\r\n                                                    {errors.sex}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"w-100\">\r\n                                            <div className=\"custom-form-group\">\r\n                                                <label>\r\n                                                    Date of Birth{\" \"}\r\n                                                    <span className=\"text-danger\">\r\n                                                        *\r\n                                                    </span>\r\n                                                </label>\r\n                                                <LocalizationProvider\r\n                                                    dateAdapter={AdapterDayjs}>\r\n                                                    <ThemeProvider\r\n                                                        theme={datepickerTheme}>\r\n                                                        <DatePicker\r\n                                                            value={\r\n                                                                formData.date_of_birth\r\n                                                                    ? dayjs(\r\n                                                                          formData.date_of_birth,\r\n                                                                      )\r\n                                                                    : null\r\n                                                            }\r\n                                                            onChange={(value) =>\r\n                                                                handleInputChange(\r\n                                                                    \"date_of_birth\",\r\n                                                                    dayjs(\r\n                                                                        value,\r\n                                                                    ).format(\r\n                                                                        \"YYYY-MM-DD\",\r\n                                                                    ),\r\n                                                                )\r\n                                                            }\r\n                                                            openTo={\"year\"}\r\n                                                            maxDate={dayjs(\r\n                                                                new Date(),\r\n                                                            )}\r\n                                                        />\r\n                                                    </ThemeProvider>\r\n                                                </LocalizationProvider>\r\n\r\n                                                <input\r\n                                                    readOnly\r\n                                                    hidden\r\n                                                    className={classNames(\r\n                                                        \"form-control\",\r\n                                                        errors.date_of_birth &&\r\n                                                            \"is-invalid\",\r\n                                                    )}\r\n                                                    value={\r\n                                                        formData.date_of_birth\r\n                                                    }\r\n                                                    type=\"date\"\r\n                                                />\r\n                                                <div className=\"invalid-feedback\">\r\n                                                    {errors.date_of_birth}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex gap-2\">\r\n                                        <div className=\"custom-form-group\">\r\n                                            <label>\r\n                                                Cell phone{\" \"}\r\n                                                <span className=\"text-danger\">\r\n                                                    *\r\n                                                </span>\r\n                                            </label>\r\n                                            <PhoneInput\r\n                                                phone={formData.cell_phone}\r\n                                                setPhone={(value) =>\r\n                                                    handleInputChange(\r\n                                                        \"cell_phone\",\r\n                                                        value,\r\n                                                    )\r\n                                                }\r\n                                                styles={{\r\n                                                    backgroundColor: \"#F7F9FC\",\r\n                                                }}\r\n                                                error={!!errors.cell_phone}\r\n                                            />\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.cell_phone}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"custom-form-group\">\r\n                                            <label>Email</label>\r\n                                            <input\r\n                                                className={classNames(\r\n                                                    \"form-control\",\r\n                                                    errors.email &&\r\n                                                        \"is-invalid\",\r\n                                                )}\r\n                                                value={formData.email}\r\n                                                onChange={(e) =>\r\n                                                    handleInputChange(\r\n                                                        \"email\",\r\n                                                        e.target.value,\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.email}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"custom-form-group w-100\">\r\n                                        <label>Therapy type</label>\r\n                                        <div className=\"d-flex gap-2 align-items-start\">\r\n                                            <div className=\"w-100\">\r\n                                                <Select\r\n                                                    value={therapyTypeValue}\r\n                                                    onChange={(\r\n                                                        selectedOption,\r\n                                                    ) =>\r\n                                                        handleInputChange(\r\n                                                            \"therapy_type_id\",\r\n                                                            selectedOption.value,\r\n                                                        )\r\n                                                    }\r\n                                                    options={therapyTypes.map(\r\n                                                        (item) => ({\r\n                                                            value: item.id,\r\n                                                            label: item.name,\r\n                                                        }),\r\n                                                    )}\r\n                                                    styles={selectStyles}\r\n                                                    className={classNames(\r\n                                                        \"custom-form-select\"\r\n                                                    )}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"d-flex flex-column gap-4\">\r\n                                        <div className=\"custom-form-group\">\r\n                                            <label>\r\n                                                Registration method{\" \"}\r\n                                                <span className=\"text-danger\">\r\n                                                    *\r\n                                                </span>\r\n                                            </label>\r\n                                            <Select\r\n                                                value={registrationMethodValue}\r\n                                                onChange={(selectedOption) =>\r\n                                                    handleInputChange(\r\n                                                        \"registration_method_id\",\r\n                                                        selectedOption.value,\r\n                                                    )\r\n                                                }\r\n                                                options={registrationMethods.map(\r\n                                                    (item) => ({\r\n                                                        value: item.id,\r\n                                                        label: item.name,\r\n                                                    }),\r\n                                                )}\r\n                                                styles={selectStyles}\r\n                                                className={classNames(\r\n                                                    \"custom-form-select\",\r\n                                                    errors.registration_method_id &&\r\n                                                        \"is-invalid\",\r\n                                                )}\r\n                                            />\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.registration_method_id}\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"custom-form-group w-100\">\r\n                                            <label>\r\n                                                Source{\" \"}\r\n                                                <span className=\"text-danger\">\r\n                                                    *\r\n                                                </span>\r\n                                            </label>\r\n                                            <div className=\"d-flex gap-2 align-items-start\">\r\n                                                <div className=\"w-100\">\r\n                                                    { userData.isOnlyAdmin ? (\r\n                                                        <CreatableSelect\r\n                                                            value={sourceValue}\r\n                                                            onChange={(selectedOption) =>\r\n                                                                handleSourceInputChange(\"source_id\", selectedOption.value)\r\n                                                            }\r\n                                                            onCreateOption={handleCreateSource}\r\n                                                            isLoading={isLoadingSource}\r\n                                                            options={sourceOptions}\r\n                                                            formatGroupLabel={(\r\n                                                                data,\r\n                                                            ) => (\r\n                                                                <div className=\"group-header\">\r\n                                                                    {data.label}\r\n                                                                </div>\r\n                                                            )}\r\n                                                            styles={selectStyles}\r\n                                                            className={classNames(\"custom-form-select\", errors.source_id && \"is-invalid\")}\r\n                                                        />\r\n                                                    ) : (\r\n                                                        <Select\r\n                                                            value={sourceValue}\r\n                                                            onChange={(selectedOption) =>\r\n                                                                handleSourceInputChange(\"source_id\", selectedOption.value)\r\n                                                            }\r\n                                                            options={sourceOptions}\r\n                                                            formatGroupLabel={(\r\n                                                                data,\r\n                                                            ) => (\r\n                                                                <div className=\"group-header\">\r\n                                                                    {data.label}\r\n                                                                </div>\r\n                                                            )}\r\n                                                            styles={selectStyles}\r\n                                                            className={classNames(\"custom-form-select\", errors.source_id && \"is-invalid\")}\r\n                                                        />\r\n                                                    )}\r\n\r\n                                                    <div className=\"invalid-feedback\">\r\n                                                        {errors.source_id}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"custom-form-group\">\r\n                                            <label>Marketing activity</label>\r\n                                            <input\r\n                                                className=\"form-control\"\r\n                                                value={\r\n                                                    formData.marketing_activity\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    handleInputChange(\r\n                                                        \"marketing_activity\",\r\n                                                        e.target.value,\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.forms}>\r\n                                <ExpandableForm\r\n                                    show={showAddAdditionalPatientInformation}\r\n                                    setShow={\r\n                                        setShowAddAdditionalPatientInformation\r\n                                    }\r\n                                    formName=\"add-additional-patient-information\"\r\n                                    formData={formData}\r\n                                    setFormData={setFormData}\r\n                                />\r\n                                <ExpandableForm\r\n                                    show={showAddInsuranceInformation}\r\n                                    setShow={setShowAddInsuranceInformation}\r\n                                    formName=\"add-insurance-information\"\r\n                                    formData={formData}\r\n                                    setFormData={setFormData}\r\n                                />\r\n                                <ExpandableForm\r\n                                    show={showAddDiagnosisCodes}\r\n                                    setShow={setShowAddDiagnosisCodes}\r\n                                    formName=\"add-diagnosis-codes\"\r\n                                    formData={formData}\r\n                                    setFormData={setFormData}\r\n                                />\r\n                                <ExpandableForm\r\n                                    show={showAddTemplateBillableLineItems}\r\n                                    setShow={\r\n                                        setshowAddTemplateBillableLineItems\r\n                                    }\r\n                                    formName=\"add-templare-billiable-line-items\"\r\n                                    formData={formData}\r\n                                    setFormData={setFormData}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-end gap-3 mt-3\">\r\n                            <button\r\n                                className=\"btn btn-large btn-outline-primary\"\r\n                                onClick={handleModalClose}\r\n                                style={{ width: \"95px\" }}>\r\n                                Cancel\r\n                            </button>\r\n                            <button\r\n                                className=\"btn btn-large btn-primary d-flex justify-content-center align-items-center\"\r\n                                onClick={handleSaveClick}\r\n                                style={{ width: \"95px\" }}\r\n                                disabled={isLoadingSave}>\r\n                                {isLoadingSave ? (\r\n                                    <CircleLoader\r\n                                        color={\"#fff\"}\r\n                                        size={\"small\"}\r\n                                    />\r\n                                ) : (\r\n                                    \"Save\"\r\n                                )}\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        className=\"p-1 d-flex align-items-center justify-content-center\"\r\n                        style={{ height: \"230px\" }}>\r\n                        <div\r\n                            className=\"spinner-border text-primary\"\r\n                            role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AddPatientModal;\r\n","import React from \"react\";\r\nimport CircleLoader from \"../CircleLoader\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst CircleLoaderWithOverlay = () => {\r\n    return (\r\n        <div className={styles.overlay}>\r\n            <CircleLoader />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CircleLoaderWithOverlay;\r\n","export default __webpack_public_path__ + \"static/media/details.30b71cc7.svg\";","export default __webpack_public_path__ + \"static/media/chart.fe76b1d1.svg\";","export default __webpack_public_path__ + \"static/media/create-patient.9f914a0c.svg\";","export default __webpack_public_path__ + \"static/media/call.501e259f.svg\";","export default __webpack_public_path__ + \"static/media/hex-cross.3ff5350c.svg\";","import moment from \"moment\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPrint } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./index.module.scss\";\r\nimport { useState } from \"react/index\";\r\nimport {\r\n    downloadPatientDocuments,\r\n    getBase64PatientDocument,\r\n} from \"../../../../../api/common/patientForms\";\r\nimport printJS from \"print-js\";\r\nimport _ from \"lodash\";\r\nimport NotificationsContext from \"../../../../../contexts/NotificationsContext\";\r\nimport { useContext } from \"react\";\r\nimport HelpIcon from \"../../../../HelpIcon\";\r\nimport { PAYMENT_FOR_SERVICE_FORM_TYPE_ID } from \"../../../../../constants/new-patients-dashboard\";\r\n\r\nconst FormRequestLogsTable = ({ logs, patient, needTooltip }) => {\r\n    const [showSentAtTooltip, setShowSentAtTooltip] = useState(false);\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const isFailure = (log) => {\r\n        return (\r\n            log.rejected_at ||\r\n            log.bounced_at ||\r\n            log.soft_bounced_at ||\r\n            log.spam_at ||\r\n            log.unsub_at ||\r\n            log.deferral_at ||\r\n            log.hard_bounced_at\r\n        );\r\n    };\r\n\r\n    const getFailureTitle = (log) => {\r\n        if (log.rejected_at) {\r\n            return \"Rejected\";\r\n        } else if (log.bounced_at) {\r\n            return \"Bounced\";\r\n        } else if (log.soft_bounced_at) {\r\n            return \"Soft-Bounced\";\r\n        } else if (log.spam_at) {\r\n            return \"Spam\";\r\n        } else if (log.unsub_at) {\r\n            return \"Unsub\";\r\n        } else if (log.deferral_at) {\r\n            return \"Deferral\";\r\n        } else {\r\n            return \"Hard-Bounced\";\r\n        }\r\n    };\r\n\r\n    const getFailureDate = (log) => {\r\n        if (log.rejected_at) {\r\n            return log.rejected_at;\r\n        } else if (log.bounced_at) {\r\n            return log.bounced_at;\r\n        } else if (log.soft_bounced_at) {\r\n            return log.soft_bounced_at;\r\n        } else if (log.spam_at) {\r\n            return log.spam_at;\r\n        } else if (log.unsub_at) {\r\n            return log.unsub_at;\r\n        } else if (log.deferral_at) {\r\n            return log.deferral_at;\r\n        } else {\r\n            return log.hard_bounced_at;\r\n        }\r\n    };\r\n\r\n    const getFormattedDateTime = (date) => {\r\n        return moment(date).format(\"MM/DD/YYYY hh:mm A\");\r\n    };\r\n\r\n    const printDocument = (item) => {\r\n        return new Promise((resolve) => {\r\n            printJS({\r\n                printable: item,\r\n                type: \"pdf\",\r\n                base64: true,\r\n                onPrintDialogClose: () => {\r\n                    resolve(item);\r\n                },\r\n            });\r\n        });\r\n    };\r\n\r\n    const printDocuments = (documents) => {\r\n        const documentsId = _.clone(documents);\r\n        const docId = documentsId.pop();\r\n\r\n        if (docId) {\r\n            getBase64PatientDocument(patient.id, docId.id)\r\n                .then((response) => {\r\n                    const documentBase64 = response.data.document;\r\n\r\n                    printDocument(documentBase64).then(() => {\r\n                        printDocuments(documentsId);\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    enqueueNotification(\r\n                        \"Error\",\r\n                        \"Something went wrong during document printing\",\r\n                    );\r\n                    console.log(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const downloadDocuments = (documents) => {\r\n        const documentsIds = documents.map((doc) => doc.id);\r\n\r\n        downloadPatientDocuments(patient.id, documentsIds)\r\n            .then((response) => {\r\n                const file = new Blob([response.data]);\r\n                const url = window.URL.createObjectURL(file);\r\n                const link = document.createElement(\"a\");\r\n                let filename = \"\";\r\n\r\n                if (documentsIds.length === 1) {\r\n                    filename = documents.find(\r\n                        (doc) => documentsIds[0] === doc.id,\r\n                    ).original_document_name;\r\n                } else {\r\n                    filename = \"documents.zip\";\r\n                }\r\n\r\n                link.href = url;\r\n                link.setAttribute(\"download\", filename);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n            })\r\n            .catch((error) => {\r\n                enqueueNotification(\r\n                    \"Error\",\r\n                    \"Something went wrong during document downloading\",\r\n                );\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const getPaymentForServiceTooltipText = (log) => {\r\n        const paymentForServiceRequestItem = log.items.find(\r\n            (item) => item.form_type_id === PAYMENT_FOR_SERVICE_FORM_TYPE_ID,\r\n        );\r\n\r\n        if (!paymentForServiceRequestItem) {\r\n            return null;\r\n        }\r\n\r\n        const {\r\n            co_pay,\r\n            payment_for_session_not_converted,\r\n            self_pay,\r\n            charge_for_cancellation,\r\n            other_charges_price,\r\n            other_charges,\r\n            comment,\r\n        } = paymentForServiceRequestItem.metadata;\r\n\r\n        return `<span>Co-pay and/or co-insurance for session: ${\r\n            co_pay || \"-\"\r\n        }</span>\r\n                <span>Payment for session not covered due to deductible: ${\r\n                    payment_for_session_not_converted || \"-\"\r\n                }</span>\r\n                <span>Self-pay for session when paid out-of-pocket: ${\r\n                    self_pay || \"-\"\r\n                }</span>\r\n                <span>Charge for cancellation without 24 hours’ notice: ${\r\n                    charge_for_cancellation || \"-\"\r\n                }</span>\r\n                <span>Other charges (price): ${\r\n                    other_charges_price || \"-\"\r\n                }</span>\r\n                <span>Other charges (specify): ${other_charges || \"-\"}</span>\r\n                <span>Comment: ${comment || \"-\"}</span>`;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <label className={styles.tableCaption}>\r\n                History of requests and submissions\r\n            </label>\r\n\r\n            <div className=\"table-responsive\">\r\n                <table className={styles.tableLogs}>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date Sent</th>\r\n                            <th>Date Signed</th>\r\n                            <th>Sent By</th>\r\n                            <th>Email / Phone Used</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {logs.length === 0 ? (\r\n                            <tr>\r\n                                <td colSpan=\"5\" className=\"text-center\">\r\n                                    No records\r\n                                </td>\r\n                            </tr>\r\n                        ) : (\r\n                            logs.map((log) => (\r\n                                <tr key={log.id}>\r\n                                    <td>\r\n                                        {isFailure(log) ? (\r\n                                            <OverlayTrigger\r\n                                                show={showSentAtTooltip}\r\n                                                placement=\"bottom\"\r\n                                                overlay={\r\n                                                    <Tooltip className=\"mytooltip\">\r\n                                                        {getFailureTitle(log)}\r\n                                                    </Tooltip>\r\n                                                }>\r\n                                                <span\r\n                                                    className={\r\n                                                        styles.eventFailed\r\n                                                    }\r\n                                                    onMouseEnter={() =>\r\n                                                        setShowSentAtTooltip(\r\n                                                            true,\r\n                                                        )\r\n                                                    }\r\n                                                    onMouseLeave={() =>\r\n                                                        setShowSentAtTooltip(\r\n                                                            false,\r\n                                                        )\r\n                                                    }>\r\n                                                    {getFormattedDateTime(\r\n                                                        getFailureDate(log),\r\n                                                    )}\r\n                                                </span>\r\n                                            </OverlayTrigger>\r\n                                        ) : (\r\n                                            <td className=\"d-flex align-items-center gap-1 flex-wrap\">\r\n                                                <span\r\n                                                    className={classNames(\r\n                                                        styles.eventSucceed,\r\n                                                        !log.sent_at && \"empty\",\r\n                                                    )}>\r\n                                                    {log.sent_at\r\n                                                        ? getFormattedDateTime(\r\n                                                              log.sent_at,\r\n                                                          )\r\n                                                        : \"\"}\r\n                                                </span>\r\n                                                {needTooltip && (\r\n                                                    <OverlayTrigger\r\n                                                        placement=\"bottom\"\r\n                                                        overlay={\r\n                                                            <Tooltip\r\n                                                                className={\r\n                                                                    styles.paymentForServiceLogTooltip\r\n                                                                }>\r\n                                                                <div\r\n                                                                    className=\"d-flex flex-column\"\r\n                                                                    dangerouslySetInnerHTML={{\r\n                                                                        __html: getPaymentForServiceTooltipText(\r\n                                                                            log,\r\n                                                                        ),\r\n                                                                    }}></div>\r\n                                                            </Tooltip>\r\n                                                        }>\r\n                                                        <div>\r\n                                                            <HelpIcon />\r\n                                                        </div>\r\n                                                    </OverlayTrigger>\r\n                                                )}\r\n                                            </td>\r\n                                        )}\r\n                                    </td>\r\n\r\n                                    <td className={!log.filled_at && \"empty\"}>\r\n                                        {log.filled_at &&\r\n                                            getFormattedDateTime(log.filled_at)}\r\n                                    </td>\r\n\r\n                                    <td className={!log.send_by && \"empty\"}>\r\n                                        {log.send_by}\r\n                                    </td>\r\n\r\n                                    <td\r\n                                        className={\r\n                                            !log.sent_to_email &&\r\n                                            !log.sent_to_phone &&\r\n                                            \"empty\"\r\n                                        }>\r\n                                        {log.sent_to_email}\r\n                                        {log.sent_to_phone}\r\n                                    </td>\r\n\r\n                                    <td className={styles.tdActions}>\r\n                                        <div\r\n                                            className={classNames(\r\n                                                styles.buttons,\r\n                                                (log.filled_at ||\r\n                                                    log.documents.length < 1) &&\r\n                                                    \"disabled\",\r\n                                            )}>\r\n                                            <button\r\n                                                type={\"button\"}\r\n                                                className={classNames(\r\n                                                    \"btn btn-default\",\r\n                                                    styles.btnTableAction,\r\n                                                )}\r\n                                                disabled={\r\n                                                    log.documents.length < 1\r\n                                                }\r\n                                                onClick={() =>\r\n                                                    downloadDocuments(\r\n                                                        log.documents,\r\n                                                    )\r\n                                                }>\r\n                                                <FontAwesomeIcon\r\n                                                    icon={faDownload}\r\n                                                    size=\"sm\"\r\n                                                />\r\n                                            </button>\r\n                                            <button\r\n                                                type={\"button\"}\r\n                                                className={classNames(\r\n                                                    \"btn btn-default\",\r\n                                                    styles.btnTableAction,\r\n                                                )}\r\n                                                disabled={\r\n                                                    log.documents.length < 1\r\n                                                }\r\n                                                onClick={() =>\r\n                                                    printDocuments(\r\n                                                        log.documents,\r\n                                                    )\r\n                                                }>\r\n                                                <FontAwesomeIcon\r\n                                                    icon={faPrint}\r\n                                                    size=\"sm\"\r\n                                                />\r\n                                            </button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            ))\r\n                        )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormRequestLogsTable;\r\n","import axios from 'axios';\r\n\r\nexport const getPatientForms = (patientId) => {\r\n    return axios.get(`/api/patients/${patientId}/forms`);\r\n}\r\n\r\nexport const sendPatientForms = (patientId, data) => {\r\n    return axios.post(`/api/patients/${patientId}/forms/send`, data);\r\n}\r\n\r\nexport const getBase64PatientDocument = (patientId, documentId) => {\r\n    return axios.get(\r\n        `/api/patients/${patientId}/documents/${documentId}`,\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n    );\r\n}\r\n\r\nexport const downloadPatientDocuments = (patientId, documents) => {\r\n    return axios.get(\r\n        `/api/patients/${patientId}/documents/download`,\r\n        {\r\n            params: {\r\n                documents,\r\n            },\r\n            responseType: 'blob',\r\n        }\r\n    );\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faPlus, faXmark} from '@fortawesome/free-solid-svg-icons';\r\nimport {useState} from \"react\";\r\nimport styles from './index.module.scss';\r\nimport classNames from \"classnames\";\r\n\r\nconst FormListInput = ({listData, setListData, disabled, placeholder}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleKeyPress = (e) => {\r\n        if(e.key === 'Enter'){\r\n            addListItem();\r\n        }\r\n    }\r\n\r\n    const getMaxId = () => {\r\n        if (listData?.length < 1) {\r\n            return 0;\r\n        }\r\n        const idList = listData.map(item => item.id);\r\n        return Math.max.apply(null, idList);\r\n    }\r\n\r\n    const addListItem = () => {\r\n        if (inputValue) {\r\n            const newListData = [...listData];\r\n\r\n            newListData.push({\r\n                id: getMaxId() + 1,\r\n                text: inputValue\r\n            });\r\n\r\n            setListData(newListData);\r\n            setInputValue('');\r\n        }\r\n    }\r\n    const removeFromListById = (id) => {\r\n        setListData(listData.filter(item => item.id !== id));\r\n    };\r\n\r\n    useEffect(() => {\r\n    }, [listData])\r\n\r\n    return (\r\n        <div className={styles.formListInput}>\r\n            <div className={styles.formListInputField}>\r\n                <input\r\n                    className=\"form-control long\"\r\n                    type=\"text\"\r\n                    placeholder={placeholder}\r\n                    disabled={disabled}\r\n                    value={inputValue}\r\n                    onChange={e => setInputValue(e.target.value)}\r\n                    onKeyDownCapture={handleKeyPress}\r\n                />\r\n                <button\r\n                    className={classNames(styles.formListInputBtn, !inputValue && ' hidden')}\r\n                    type=\"button\"\r\n                    onClick={addListItem}\r\n                    disabled={disabled}\r\n                >\r\n                    <FontAwesomeIcon icon={faPlus} color={'#2F80ED'} size={'xl'}/>\r\n                </button>\r\n            </div>\r\n\r\n            <ul className={styles.formTagList}>\r\n                {listData?.map(item =>\r\n                    <li  className={styles.formTagListItem} key={item.id}>\r\n                        <div className={styles.formTag}>\r\n                           <span className={styles.formTagText}>\r\n                               {item.text}\r\n                           </span>\r\n                            <button\r\n                                type=\"button\"\r\n                                className={styles.formTagRemove}\r\n                                onClick={() => removeFromListById(item.id)}\r\n                            >\r\n                                <FontAwesomeIcon icon={faXmark} color={'#fff'} size={'lg'}/>\r\n                            </button>\r\n                        </div>\r\n                    </li>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormListInput;","export default __webpack_public_path__ + \"static/media/mail-icon.a3fe184e.svg\";","export default __webpack_public_path__ + \"static/media/phone-icon.7b764aed.svg\";","export default __webpack_public_path__ + \"static/media/caret-icon.4f1a9105.svg\";","export default __webpack_public_path__ + \"static/media/check-icon.4f310b14.svg\";","export const getInquirableFullname = (inquirable) => {\r\n    return (\r\n        inquirable.first_name +\r\n        \" \" +\r\n        inquirable.last_name +\r\n        \" \" +\r\n        (inquirable.middle_initial ? inquirable.middle_initial + \" \" : \"\")\r\n    );\r\n};\r\n\r\nexport const getFormStatusLabel = (inquiry) => {\r\n    if (inquiry.stage_id > 2) {\r\n        if (!inquiry.inquirable.last_document_request) {\r\n            return \"Forms not send\";\r\n        } else if (inquiry.inquirable.last_document) {\r\n            return \"Forms signed\";\r\n        } else {\r\n            return \"Forms send\";\r\n        }\r\n    }\r\n\r\n    return \"\";\r\n};\r\n","import React, {useContext, useEffect, useState} from 'react'\r\nimport {Modal, ModalHeader} from 'react-bootstrap'\r\nimport styles from './index.module.scss';\r\nimport CheckIcon from \"../../../../../assets/icons/check-icon.svg\";\r\nimport classNames from \"classnames\";\r\nimport {sendPatientForms} from \"../../../../../api/common/patientForms\";\r\nimport CircleLoader from \"../../../../CircleLoader\";\r\nimport NotificationsContext from \"../../../../../contexts/NotificationsContext\";\r\nimport InputMask from \"react-input-mask\";\r\nimport {isValidEmail} from \"../../../../../utilities/validation\";\r\nimport {getInquirableFullname} from \"../../../../../utilities/newPatientsCrmUtils\";\r\n\r\nconst ConfirmSendingDocumentRequestModal = ({showModal, closeModal, patient, selectedFormsData, sendFormsMethod, onSuccessfulSend}) => {\r\n    const isSendMethodEmail = sendFormsMethod === 'email';\r\n    const isSendMethodPhone = sendFormsMethod === 'phone';\r\n\r\n    const getFormattedPhone = (rawPhone) => {\r\n        return rawPhone\r\n            ? '(' + rawPhone.slice(0, 3) + ')-' + rawPhone.slice(3, 7) + '-' + rawPhone.slice(7)\r\n            : '';\r\n    }\r\n    const getRawPhone = (formattedPhone) => {\r\n        return formattedPhone.replace(/[-_()]/g, '');\r\n    };\r\n\r\n    const [email, setEmail] = useState(isSendMethodEmail ? patient.email : '');\r\n    const [phone, setPhone] = useState(isSendMethodPhone ? getFormattedPhone(patient.cell_phone) : '');\r\n    const [errors, setErrors] = useState({\r\n        email: '',\r\n        phone: '',\r\n    });\r\n    const [isLoadingSendForms, setIsLoadingSendForms] = useState(false);\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    useEffect(() => {\r\n        if (showModal) {\r\n            if (isSendMethodEmail) {\r\n                setEmail(patient.email);\r\n            }\r\n            if (isSendMethodPhone) {\r\n                setPhone(getFormattedPhone(patient.cell_phone));\r\n            }\r\n        }\r\n    }, [showModal]);\r\n\r\n    const handleSave = () => {\r\n        if (validate()) {\r\n            const data = {\r\n                forms: selectedFormsData,\r\n                send_via_email: isSendMethodEmail,\r\n                send_via_sms: isSendMethodPhone,\r\n            }\r\n\r\n            if (isSendMethodEmail) {\r\n                data.email = email;\r\n            }\r\n            if (isSendMethodPhone) {\r\n                data.phone = phone;\r\n            }\r\n\r\n            setErrors({\r\n                email: '',\r\n                phone: '',\r\n            });\r\n\r\n            setIsLoadingSendForms(true);\r\n\r\n            sendPatientForms(patient.id, data)\r\n                .then(() => {\r\n                    enqueueNotification(\"Success\", 'Successfully sent request for documents');\r\n                    handleModalClose();\r\n                    onSuccessfulSend();\r\n                })\r\n                .catch(error => {\r\n                    enqueueNotification(\"Error\", 'Something went wrong');\r\n                    console.log(error);\r\n                })\r\n                .finally(() => {\r\n                    setIsLoadingSendForms(false);\r\n                })\r\n        }\r\n    };\r\n\r\n    const handleModalClose = () => {\r\n        setEmail('');\r\n        setPhone('');\r\n        setErrors({\r\n            email: '',\r\n            phone: '',\r\n        });\r\n        closeModal();\r\n    }\r\n\r\n    const validate = () => {\r\n        const newErrors = {\r\n            email: '',\r\n            phone: '',\r\n        }\r\n\r\n        if (isSendMethodEmail) {\r\n            if (!email) {\r\n                newErrors.email = 'Email is required';\r\n            } else if (! isValidEmail(email)) {\r\n                newErrors.email = 'The field must be valid email address';\r\n            }\r\n        }\r\n\r\n        if (isSendMethodPhone) {\r\n            if (!phone) {\r\n                newErrors.phone = 'Phone number is required';\r\n            } else if (getRawPhone(phone).length !== 10) {\r\n                newErrors.phone = 'The field must be a valid phone number';\r\n            }\r\n        }\r\n\r\n        setErrors(newErrors);\r\n\r\n        return ! (newErrors.email || newErrors.phone);\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            onHide={handleModalClose}\r\n            className={'custom-modal'}\r\n            dialogClassName={styles.modalDialog}\r\n            centered\r\n        >\r\n            <ModalHeader closeButton>\r\n                <h5 className={'mb-0'}>Request for documents from {getInquirableFullname(patient)}</h5>\r\n            </ModalHeader>\r\n            <Modal.Body className={'d-block py-3'}>\r\n                <p>Are you sure you have selected all required forms and supporting documents to be included in this request for signature?</p>\r\n                <p>Forms and documents selected to be sent:</p>\r\n                <div className={'requested-documents__list'}>\r\n                    {selectedFormsData.map((form, index) =>\r\n                        <div className={'requested-documents__list-item'} key={form.name}>\r\n                            <p>{index + 1}. {form.title}</p>\r\n                            <ul className={styles.unordered}>\r\n                                {form.name === 'confidential_information' && form.metadata.exchange_with.map(item =>\r\n                                    <li key={form.name + '-' + item}>\r\n                                        <img src={CheckIcon} alt=\"check-icon\"/>\r\n                                        <span className={'ms-1'}>{item}</span>\r\n                                    </li>\r\n                                )}\r\n                                {form.name === 'supporting_documents' && form.metadata.documents.map(item =>\r\n                                    <li key={form.name + '-' + item}>\r\n                                        <img src={CheckIcon} alt=\"check-icon\"/>\r\n                                        <span className={'ms-1'}>{item}</span>\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                {isSendMethodEmail &&\r\n                    <div className={classNames('form-group', styles.formGroup, errors.email ? styles.formGroupHasError : '')}>\r\n                        <label htmlFor=\"sendFormEmail\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                            Enter the email address:\r\n                        </label>\r\n                        <input\r\n                            id={'sendFormEmail'}\r\n                            className={classNames('form-control', styles.formInput)}\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        {errors.email &&\r\n                            <div className={styles.formErrors}>\r\n                                {errors.email}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n                {isSendMethodPhone &&\r\n                    <div className={classNames('form-group', styles.formGroup, errors.phone ? styles.formGroupHasError : '')}>\r\n                        <label htmlFor=\"sendFormPhone\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                            Enter the phone number:\r\n                        </label>\r\n                        <InputMask\r\n                            id={'sendFormPhone'}\r\n                            className={classNames('form-control', styles.formInput)}\r\n                            mask=\"(999)-999-9999\"\r\n                            alwaysShowMask={true}\r\n                            value={phone}\r\n                            onChange={(e) => setPhone(e.target.value)}\r\n                        />\r\n                        {/*<input*/}\r\n                        {/*    id={'sendFormPhone'}*/}\r\n                        {/*    className={classNames('form-control', styles.formInput)}*/}\r\n                        {/*    value={phone}*/}\r\n                        {/*    onChange={(e) => setPhone(e.target.value)}*/}\r\n                        {/*/>*/}\r\n                        {errors.phone &&\r\n                            <div className={styles.formErrors}>\r\n                                {errors.phone}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                }\r\n            </Modal.Body>\r\n            <Modal.Footer className={'py-2'} style={{borderTop: '1px solid #dee2e6'}}>\r\n                <button\r\n                    className=\"btn btn-large btn-primary d-flex justify-content-center align-items-center\"\r\n                    onClick={handleSave}\r\n                    disabled={isLoadingSendForms}\r\n                    style={{ width: \"100px\" }}\r\n                >\r\n                    {isLoadingSendForms ?\r\n                        <CircleLoader\r\n                            color={\"#fff\"}\r\n                            size={\"small\"}\r\n                        /> :\r\n                        'Send'\r\n                    }\r\n                </button>\r\n                <button\r\n                    className=\"btn btn-large btn-outline-primary ms-3\"\r\n                    onClick={handleModalClose}\r\n                >\r\n                    Close\r\n                </button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ConfirmSendingDocumentRequestModal;","export const isValidEmail = (email) => {\r\n    const emailRegexExp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gi;\r\n\r\n    return emailRegexExp.test(email);\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {Modal, Collapse, ModalHeader} from 'react-bootstrap'\r\nimport { ChevronDown } from 'react-bootstrap-icons';\r\nimport {useState} from \"react/index\";\r\nimport styles from './index.module.scss';\r\nimport FormRequestLogsTable from \"./components/FormRequestLog/FormRequestLogsTable\";\r\nimport FormListInput from \"../../Inputs/FormListInput\";\r\nimport classNames from \"classnames\";\r\nimport {getPatientForms} from \"../../../api/common/patientForms\";\r\nimport CircleLoader from \"../../CircleLoader\";\r\nimport moment from \"moment\";\r\nimport MailIcon from \"../../../assets/icons/mail-icon.svg\";\r\nimport PhoneIcon from \"../../../assets/icons/phone-icon.svg\";\r\nimport CaretIcon from \"../../../assets/icons/caret-icon.svg\";\r\nimport ConfirmSendingDocumentRequestModal from \"./components/ConfirmSendingDocumentRequestModal\";\r\nimport {getInquirableFullname} from \"../../../utilities/newPatientsCrmUtils\";\r\nimport { DEFAULT_CANCELLATION_FEE } from \"../../../constants\";\r\nimport _ from 'lodash';\r\n\r\nconst fieldsToValidate = [\r\n    {\r\n        name: 'co_pay',\r\n        formName: 'payment_for_service',\r\n        required: true,\r\n    },\r\n    {\r\n        name: 'self_pay',\r\n        formName: 'payment_for_service',\r\n        required: true,\r\n    },\r\n    {\r\n        name: 'other_charges',\r\n        formName: 'payment_for_service',\r\n        required: false,\r\n        requiredWith: 'other_charges_price'\r\n    },\r\n    {\r\n        name: 'charge_for_cancellation',\r\n        formName: 'payment_for_service',\r\n        required: true,\r\n    },\r\n    {\r\n        name: 'exchange_with',\r\n        formName: 'confidential_information',\r\n        required: true,\r\n    },\r\n    {\r\n        name: 'supporting_documents',\r\n        formName: 'supporting_documents',\r\n        required: false,\r\n    },\r\n];\r\nconst sendFormsMethods = [\r\n    {\r\n        value: 'email',\r\n        label: 'Email',\r\n        icon: MailIcon,\r\n    },\r\n    {\r\n        value: 'phone',\r\n        label: 'Phone',\r\n        icon: PhoneIcon,\r\n    },\r\n];\r\n\r\nconst PatientFormsModal = ({showModal, closeModal, patient}) => {\r\n    const [patientForms, setPatientForms] = useState({});\r\n    const [isLoadingPatientForms, setIsLoadingPatientForms] = useState(false);\r\n    const [isAllFormsChecked, setIsAllFormsChecked] = useState(false);\r\n    const [initialPatientForms, setInitialPatientForms] = useState(null);\r\n    const [formData, setFormData] = useState({\r\n        payment_for_service: {\r\n            co_pay: '0',\r\n            payment_for_session_not_converted: '0',\r\n            self_pay: '0',\r\n            charge_for_cancellation: '0',\r\n            other_charges_price: '0',\r\n            other_charges: '',\r\n            comment: '',\r\n        },\r\n        confidential_information: {\r\n            exchange_with: [],\r\n        },\r\n        supporting_documents: {\r\n            insurance: true,\r\n            license: true,\r\n            supporting_documents: [],\r\n        },\r\n    });\r\n    const [errors, setErrors] = useState({\r\n        payment_for_service: {\r\n            co_pay: false,\r\n            self_pay: false,\r\n            charge_for_cancellation: false,\r\n            other_charges: false,\r\n        },\r\n        confidential_information: {\r\n            exchange_with: false,\r\n        },\r\n        supporting_documents: {\r\n            supporting_documents: false,\r\n        }\r\n    });\r\n    const [sendFormsMethod, setSendFormsMethod] = useState(null);\r\n    const [showSendFormsDropdown, setShowSendFormsDropdown] = useState(false);\r\n    const [showConfirmSendingDocumentRequestModal, setShowConfirmSendingDocumentRequestModal] = useState(false);\r\n\r\n    const formsErrors = {\r\n        payment_for_service: errors.payment_for_service.co_pay || errors.payment_for_service.self_pay || errors.payment_for_service.charge_for_cancellation || errors.payment_for_service.other_charges,\r\n        confidential_information: errors.confidential_information.exchange_with,\r\n        supporting_documents: errors.supporting_documents.supporting_documents,\r\n    };\r\n    const isFormsInvalid = formsErrors.payment_for_service ||\r\n        formsErrors.confidential_information ||\r\n        formsErrors.supporting_documents;\r\n\r\n    const selectedFormsData = Object.entries(patientForms)\r\n        .filter(([formName, form]) => form.checked)\r\n        .map(([formName, form]) => {\r\n            let metadata = {};\r\n\r\n            if (formName === 'supporting_documents') {\r\n                const documents = [];\r\n\r\n                if (formData.supporting_documents.insurance) {\r\n                    documents.push('Insurance');\r\n                }\r\n                if (formData.supporting_documents.license) {\r\n                    documents.push('Driver\\'s License');\r\n                }\r\n\r\n                metadata.documents = [\r\n                    ...documents,\r\n                    ...formData.supporting_documents.supporting_documents.map(document => document.text),\r\n                ];\r\n            } else if (formName === 'confidential_information') {\r\n                metadata.exchange_with = [\r\n                    ...formData.confidential_information.exchange_with.map(document => document.text)\r\n                ];\r\n            } else {\r\n                metadata = formName in formData ? formData[formName] : {}\r\n            }\r\n\r\n            return {\r\n                name: formName,\r\n                title: form.title,\r\n                metadata,\r\n            }\r\n        });\r\n\r\n    const fetchPatientForms = () => {\r\n        setIsLoadingPatientForms(true);\r\n\r\n        setPatientForms({});\r\n\r\n        getPatientForms(patient.id)\r\n            .then((response) => {\r\n                const newFormData = {};\r\n\r\n                for (const form of response.data) {\r\n                    newFormData[form.name] = {\r\n                        title: form.title,\r\n                        requests: form.requests,\r\n                        document_type_id: form.document_type_id,\r\n                        is_required: form.is_required,\r\n                        patient_can_skip_form: form.patient_can_skip_form,\r\n                        visible_in_modal: form.visible_in_modal,\r\n                        visible_in_tab: form.visible_in_tab,\r\n                        checked: form.name !== 'credit_card_on_file',\r\n                        isOpened: false,\r\n                    };\r\n                }\r\n\r\n                if (patient.primary_insurance) {\r\n                    setFormDataField('confidential_information', 'exchange_with', [{id: 1, text: patient.primary_insurance}])\r\n                }\r\n\r\n                const updatedFormData = { ...formData };\r\n\r\n                updatedFormData['payment_for_service'] = {\r\n                    co_pay: '0',\r\n                    payment_for_session_not_converted: '0',\r\n                    self_pay: '0',\r\n                    charge_for_cancellation:'0',\r\n                    other_charges_price: '0',\r\n                    other_charges: ''\r\n                };\r\n\r\n                if (!patient.is_payment_forbidden) {\r\n                    const { is_self_pay, visit_copay, self_pay, insurance_pay } = patient;\r\n\r\n                    updatedFormData['payment_for_service'].co_pay = is_self_pay ? '0' : visit_copay;\r\n                    updatedFormData['payment_for_service'].payment_for_session_not_converted = is_self_pay ? '0' : insurance_pay;\r\n                    updatedFormData['payment_for_service'].self_pay = is_self_pay ? self_pay : '0';\r\n                    updatedFormData['payment_for_service'].charge_for_cancellation = String(DEFAULT_CANCELLATION_FEE);\r\n                }\r\n\r\n                setInitialPatientForms(_.cloneDeep(updatedFormData));\r\n                setFormData(updatedFormData);\r\n\r\n                setPatientForms(newFormData);\r\n            })\r\n            .finally(() => {\r\n                setIsLoadingPatientForms(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchPatientForms();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let value = true;\r\n        let needToValidate = false;\r\n\r\n        for (const [formName, form] of Object.entries(patientForms)) {\r\n            if (value && !form.checked) {\r\n                value = false;\r\n            }\r\n\r\n            if (!needToValidate && formsErrors[formName]) {\r\n                needToValidate = true;\r\n            }\r\n        }\r\n\r\n        if (needToValidate) {\r\n            validate();\r\n        }\r\n\r\n        setIsAllFormsChecked(value);\r\n    }, [\r\n        patientForms.payment_for_service?.checked,\r\n        patientForms.confidential_information?.checked,\r\n        patientForms.credit_card_on_file?.checked,\r\n        patientForms.supporting_documents?.checked,\r\n        patientForms.telehealth?.checked,\r\n    ]);\r\n\r\n    const validate = () => {\r\n        const newErrors = {\r\n            payment_for_service: {\r\n                co_pay: false,\r\n                self_pay: false,\r\n                charge_for_cancellation: false,\r\n                other_charges: false,\r\n            },\r\n            confidential_information: {\r\n                exchange_with: false,\r\n            },\r\n            supporting_documents: {\r\n                insurance: false,\r\n                license: false,\r\n                supporting_documents: false,\r\n            }\r\n        };\r\n\r\n        fieldsToValidate.forEach(field => {\r\n            if (! patientForms[field.formName].checked) {\r\n                return;\r\n            }\r\n\r\n            if (field.required && !formData[field.formName][field.name]) {\r\n                newErrors[field.formName][field.name] = true;\r\n            }\r\n\r\n            if (field.requiredWith && !formData[field.formName][field.name] &&\r\n                formData[field.formName][field.requiredWith] && formData[field.formName][field.requiredWith] !== '0'\r\n            ) {\r\n                newErrors[field.formName][field.name] = true;\r\n            }\r\n\r\n            if (field.name === 'exchange_with' && formData.confidential_information.exchange_with.length === 0) {\r\n                newErrors.confidential_information.exchange_with = true;\r\n            }\r\n\r\n            if (field.name === 'supporting_documents') {\r\n                if (! (formData.supporting_documents.insurance ||\r\n                    formData.supporting_documents.license ||\r\n                    formData.supporting_documents.supporting_documents.length > 0)\r\n                ) {\r\n                    newErrors.supporting_documents.supporting_documents = true;\r\n                }\r\n            }\r\n        });\r\n\r\n        setErrors(newErrors);\r\n\r\n        return ! (newErrors.payment_for_service.co_pay || newErrors.payment_for_service.self_pay || newErrors.payment_for_service.charge_for_cancellation\r\n            || newErrors.payment_for_service.other_charges || newErrors.confidential_information.exchange_with\r\n            || newErrors.supporting_documents.supporting_documents);\r\n    }\r\n\r\n    const toggleSelectAllForms = () => {\r\n        const value = ! isAllFormsChecked;\r\n\r\n        const newPatientForms = {...patientForms};\r\n\r\n        for (const formName of Object.keys(patientForms)) {\r\n            newPatientForms[formName].checked = value;\r\n        }\r\n\r\n        setPatientForms(newPatientForms);\r\n\r\n        if (isFormsInvalid) {\r\n            validate();\r\n        }\r\n    }\r\n\r\n    const setPatientFormsProperty = (formName, property, value) => {\r\n        const newPatientForms = {...patientForms};\r\n\r\n        newPatientForms[formName][property] = value;\r\n\r\n        setPatientForms(newPatientForms);\r\n\r\n        if (formsErrors[formName]) {\r\n            validate();\r\n        }\r\n    };\r\n\r\n    const setFormDataField = (formName, field, value) => {\r\n        const newFormData = {...formData};\r\n\r\n        newFormData[formName][field] = value;\r\n\r\n        setFormData(newFormData);\r\n\r\n        if (formName in errors &&\r\n            (errors[formName][field] ||\r\n                (formName === 'supporting_documents' && errors.supporting_documents.supporting_documents)\r\n            )\r\n        ) {\r\n            validate();\r\n        }\r\n    };\r\n\r\n    const getFormSentAt = (requests) => {\r\n        return moment(requests[requests.length - 1].sent_at).format('MM/DD/YYYY hh:mm A');\r\n    }\r\n\r\n    const handleSendFormClick = (method) => {\r\n        setShowSendFormsDropdown(false);\r\n\r\n        if (validate()) {\r\n            setSendFormsMethod(method);\r\n            setShowConfirmSendingDocumentRequestModal(true);\r\n        }\r\n    }\r\n\r\n    const handleModalClose = () => {\r\n        setShowSendFormsDropdown(false);\r\n        setShowConfirmSendingDocumentRequestModal(false);\r\n        setFormData(initialPatientForms);\r\n        closeModal();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            onHide={handleModalClose}\r\n            disabled={showConfirmSendingDocumentRequestModal}\r\n            className={classNames('custom-modal', showConfirmSendingDocumentRequestModal && 'faded')}\r\n            dialogClassName={styles.modalDialog}\r\n            centered\r\n        >\r\n            <ModalHeader closeButton>\r\n                <h5 className={'mb-0'}>Send forms to {getInquirableFullname(patient)}</h5>\r\n            </ModalHeader>\r\n            <Modal.Body>\r\n                {isLoadingPatientForms ?\r\n                    <CircleLoader /> :\r\n                    <div className={'mb-2'}>\r\n                        <div className=\"appointment-documents\">\r\n                            <div className=\"d-flex flex-row justify-content-between align-items-center mb-3\">\r\n                                <div className={'collapse-document__item-title'}>\r\n                                    <input\r\n                                        id={'selectAllForms'}\r\n                                        type=\"checkbox\"\r\n                                        checked={isAllFormsChecked}\r\n                                        onChange={toggleSelectAllForms}\r\n                                        onClick={e => e.stopPropagation()}\r\n                                    />\r\n                                    <label className=\"control-label\" htmlFor=\"selectAllForms\">\r\n                                        Select all\r\n                                    </label>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    {isFormsInvalid &&\r\n                                        <div className={'alert alert-danger mb-0 py-2'}>\r\n                                            Please make sure you have filled all the required fields\r\n                                        </div>\r\n                                    }\r\n\r\n                                </div>\r\n\r\n                                <div className={classNames('dropdown dropdown-send', showSendFormsDropdown && 'open')}                                >\r\n                                    <button\r\n                                        type=\"button\"\r\n                                        className=\"btn btn-primary btn-dropdown\"\r\n                                        style={{display: 'flex', padding: 0}}\r\n                                        disabled={isFormsInvalid || selectedFormsData.length === 0}\r\n                                        onClick={() => setShowSendFormsDropdown(! showSendFormsDropdown)}\r\n                                        onBlur={() => setShowSendFormsDropdown(false)}\r\n                                    >\r\n                                        <span className=\"btn__text\">\r\n                                            Send to\r\n                                        </span>\r\n                                        <span className=\"btn__caret\">\r\n                                            <img src={CaretIcon}/> \r\n                                        </span>\r\n                                    </button>\r\n\r\n                                    <ul className=\"dropdown-menu\">\r\n                                        {sendFormsMethods.map(item =>\r\n                                            <li className=\"dropdown-menu__item\" key={item.value}>\r\n                                                <a\r\n                                                    href={'#'}\r\n                                                    onMouseDown={(e) => e.preventDefault()}\r\n                                                    onClick={() => handleSendFormClick(item.value)}\r\n                                                >\r\n                                            <span className=\"menu-item__icon\">\r\n                                                <img src={item.icon} alt={`send-method-${item.value}`} />\r\n                                            </span>\r\n                                                    {item.label}\r\n                                                </a>\r\n                                            </li>\r\n                                        )}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={'collapse-document'}>\r\n                                {Object.entries(patientForms).map(([formName, form]) =>\r\n                                    <div className={classNames('collapse-document__item', formsErrors[formName] ? 'invalid' : '')} key={formName}>\r\n                                        <div className={'el-collapse-item__header'} onClick={() => setPatientFormsProperty(formName, 'isOpened', !form.isOpened)}>\r\n                                            <div className={'collapse-document__item-title'}>\r\n                                                <input\r\n                                                    type=\"checkbox\"\r\n                                                    checked={form.checked}\r\n                                                    onChange={e => setPatientFormsProperty(formName, 'checked', e.target.checked)}\r\n                                                    onClick={e => e.stopPropagation()}\r\n                                                />\r\n                                                {form.title}\r\n                                                {form.requests.length !== 0 && <div className=\"collapse-document__item-title__date\">Sent at: {getFormSentAt(form.requests)}</div>}\r\n                                                <ChevronDown className={'el-collapse-item__arrow' + (form.isOpened ? ' is-active' : '')}/>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <Collapse in={form.isOpened} className={'el-collapse-item__content'}>\r\n                                            <form noValidate className={'collapse-document__item-form'}>\r\n                                                {formName === 'payment_for_service' &&\r\n                                                    <div>\r\n                                                        <div className={classNames('form-group d-flex my-3', errors.payment_for_service.co_pay ? 'has-error': '')}>\r\n                                                            <label htmlFor={'coPay'} className=\"col-sm-5 control-label\">\r\n                                                                Co-pay and/or co-insurance for session\r\n                                                            </label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <input\r\n                                                                    id={'coPay'}\r\n                                                                    className=\"form-control\"\r\n                                                                    value={formData.payment_for_service.co_pay}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'co_pay', e.target.value)}\r\n                                                                    disabled\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={'form-group d-flex my-3'}>\r\n                                                            <label htmlFor={'forSession'} className=\"col-sm-5 control-label\">\r\n                                                                Payment for session not covered due to deductible\r\n                                                            </label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <input\r\n                                                                    id={'payment_for_session_not_converted'}\r\n                                                                    className=\"form-control\"\r\n                                                                    value={formData.payment_for_service.payment_for_session_not_converted}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'payment_for_session_not_converted', e.target.value)}\r\n                                                                    disabled\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={classNames('form-group d-flex my-3', errors.payment_for_service.self_pay ? 'has-error': '')}>\r\n                                                            <label htmlFor={'selfPay'} className=\"col-sm-5 control-label\">\r\n                                                                Self-pay for session when paid out-of-pocket\r\n                                                            </label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <input\r\n                                                                    id={'selfPay'}\r\n                                                                    className=\"form-control\"\r\n                                                                    value={formData.payment_for_service.self_pay}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'self_pay', e.target.value)}\r\n                                                                    disabled\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={classNames('form-group d-flex my-3', errors.payment_for_service.self_pay ? 'has-error': '')}>\r\n                                                            <label htmlFor={'chargeForCancellation'} className=\"col-sm-5 control-label\">\r\n                                                                Charge for cancellation without 24 hours’ notice\r\n                                                            </label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <input\r\n                                                                    id=\"chargeForCancellation\"\r\n                                                                    className=\"form-control\"\r\n                                                                    value={formData.payment_for_service.charge_for_cancellation}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'charge_for_cancellation', e.target.value)}\r\n                                                                    disabled\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={'form-group d-flex my-3'}>\r\n                                                            <label htmlFor={'otherChargesPrice'} className=\"col-sm-5 control-label\">\r\n                                                                Other charges (price)\r\n                                                            </label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <input\r\n                                                                    id=\"otherChargesPrice\"\r\n                                                                    className=\"form-control\"\r\n                                                                    value={formData.payment_for_service.other_charges_price}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'other_charges_price', e.target.value)}\r\n                                                                    disabled={!form.checked || patient.is_payment_forbidden}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={classNames('form-group d-flex my-3', errors.payment_for_service.other_charges ? 'has-error': '')}>\r\n                                                            <label htmlFor={'otherCharges'} className=\"col-sm-5 control-label\">\r\n                                                                Other charges (specify)\r\n                                                            </label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <input\r\n                                                                    id=\"otherCharges\"\r\n                                                                    className=\"form-control long\"\r\n                                                                    value={formData.payment_for_service.other_charges}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'other_charges', e.target.value)}\r\n                                                                    disabled={!form.checked || !formData.payment_for_service.other_charges_price || formData.payment_for_service.other_charges_price === '0' || patient.is_payment_forbidden}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={'form-group d-flex my-3'}>\r\n                                                            <label htmlFor={'comment'} className=\"col-sm-5 control-label\">\r\n                                                                Comment\r\n                                                            </label>\r\n                                                            <div className=\"col-sm-8\">\r\n                                                                <input\r\n                                                                    id=\"comment\"\r\n                                                                    className=\"form-control long\"\r\n                                                                    value={formData.payment_for_service.comment}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'comment', e.target.value)}\r\n                                                                    disabled={!form.checked}\r\n                                                                />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    formName === 'confidential_information' &&\r\n                                                    <div className={classNames('form-group d-flex my-3', errors.confidential_information.exchange_with ? 'has-error': '')}>\r\n                                                        <div className=\"col-sm-8\">\r\n                                                            <FormListInput\r\n                                                                listData={formData.confidential_information.exchange_with}\r\n                                                                setListData={(newListData) => setFormDataField(formName, 'exchange_with', newListData)}\r\n                                                                placeholder=\"Add person\"\r\n                                                                disabled={!form.checked}\r\n                                                            />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    formName === 'supporting_documents' &&\r\n                                                    <div className={classNames('form-group', errors.supporting_documents.supporting_documents ? 'has-error': '')}>\r\n                                                        <div className={'row--flex row-inputs'}>\r\n                                                            <div className=\"checkbox\">\r\n                                                                <input\r\n                                                                    id={'insurance'}\r\n                                                                    type={'checkbox'}\r\n                                                                    checked={formData.supporting_documents.insurance}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'insurance', e.target.checked)}\r\n                                                                    onClick={e => e.stopPropagation()}\r\n                                                                    disabled={!form.checked}\r\n                                                                />\r\n                                                                <label htmlFor={'insurance'} className={'control-label'}>\r\n                                                                    Insurance\r\n                                                                </label>\r\n                                                            </div>\r\n                                                            <div className=\"checkbox\">\r\n                                                                <input\r\n                                                                    id={'license'}\r\n                                                                    type={'checkbox'}\r\n                                                                    checked={formData.supporting_documents.license}\r\n                                                                    onChange={(e) => setFormDataField(formName, 'license', e.target.checked)}\r\n                                                                    onClick={e => e.stopPropagation()}\r\n                                                                    disabled={!form.checked}\r\n                                                                />\r\n                                                                <label htmlFor={'license'} className={'control-label'}>\r\n                                                                    Driver's License\r\n                                                                </label>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <FormListInput\r\n                                                            listData={formData.supporting_documents.supporting_documents}\r\n                                                            setListData={(newListData) => setFormDataField(formName, 'supporting_documents', newListData)}\r\n                                                            placeholder=\"Add document\"\r\n                                                            disabled={!form.checked}\r\n                                                        />\r\n                                                    </div>\r\n                                                }\r\n\r\n                                                <FormRequestLogsTable\r\n                                                    logs={form.requests}\r\n                                                    patient={patient}\r\n                                                    needTooltip={formName === 'payment_for_service'}\r\n                                                />\r\n                                            </form>\r\n                                        </Collapse>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {selectedFormsData.length > 0 &&\r\n                            <ConfirmSendingDocumentRequestModal\r\n                                showModal={showConfirmSendingDocumentRequestModal}\r\n                                closeModal={() => setShowConfirmSendingDocumentRequestModal(false)}\r\n                                patient={patient}\r\n                                selectedFormsData={selectedFormsData}\r\n                                sendFormsMethod={sendFormsMethod}\r\n                                onSuccessfulSend={fetchPatientForms}\r\n                            />\r\n                        }\r\n                    </div>\r\n                }\r\n            </Modal.Body>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PatientFormsModal;","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst SourceTag = ({ source, size = \"small\" }) => {\r\n    return (\r\n        <div\r\n            className={classNames(\r\n                \"badge bg-primary d-flex align-items-center\",\r\n                styles.sourceTag,\r\n                size === \"lg\" && styles.sourceTageLarge,\r\n            )}>\r\n            {source.name}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SourceTag;\r\n","export default __webpack_public_path__ + \"static/media/dots-vertical.f4c2e2f3.svg\";","import React, { useState, useRef } from \"react\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport DotsVerticalIcon from \"../../../../assets/icons/dots-vertical.svg\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst ThreeDotsMenu = ({ onAction, text, disabled = false }) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const dotsRef = useRef(null);\r\n    const menuRef = useRef(null);\r\n\r\n    const toggleMenu = (e) => {\r\n        e.stopPropagation();\r\n        setShowMenu(!showMenu);\r\n    };\r\n\r\n    const handleAction = (e, action) => {\r\n        e.stopPropagation();\r\n        setShowMenu(false);\r\n        if (onAction) {\r\n            onAction(action);\r\n        }\r\n    };\r\n\r\n    useOnClickOutside(menuRef, (e) => {\r\n        if (!dotsRef.current || !dotsRef.current.contains(e.target)) {\r\n            setShowMenu(false);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <div ref={dotsRef} className={styles.dotsIcon} onClick={toggleMenu}>\r\n                <img src={DotsVerticalIcon} alt=\"dots-icon\" />\r\n            </div>\r\n            {showMenu && (\r\n                <button\r\n                    ref={menuRef}\r\n                    className={styles.menuDialog}\r\n                    disabled={disabled}\r\n                    onClick={handleAction}>\r\n                    {text}\r\n                </button>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ThreeDotsMenu;\r\n","import classNames from \"classnames\";\r\nimport moment from \"moment-timezone\";\r\nimport React from \"react\";\r\nimport styles from \"../../index.module.scss\";\r\n\r\nconst PatientLeadDocumentComment = ({ comment }) => {\r\n    return (\r\n        <div className={styles.systemComment}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className={styles.name}>System</div>\r\n                <div className={classNames(styles.date, \"text-primary\")}>\r\n                    {moment(comment.created_at).format(\"DD MMM. YYYY h:mm A\")}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.content}>\r\n                <b>\r\n                    {comment.document_uploader ||\r\n                        comment.full_admin_name ||\r\n                        comment.provider_name}\r\n                </b>{\" \"}\r\n                added document <b>«{comment.document_type}»</b>:{\" \"}\r\n                {comment.original_document_name}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientLeadDocumentComment;\r\n","import classNames from \"classnames\";\r\nimport moment from \"moment-timezone\";\r\nimport React from \"react\";\r\nimport styles from \"../../index.module.scss\";\r\n\r\nconst PatientAlertComment = ({ comment }) => {\r\n    return (\r\n        <div className={styles.systemComment}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className={styles.name}>System</div>\r\n                <div className={classNames(styles.date, \"text-primary\")}>\r\n                    {moment(comment.created_at).format(\"DD MMM. YYYY h:mm A\")}\r\n                </div>\r\n            </div>\r\n\r\n            <div\r\n                dangerouslySetInnerHTML={{\r\n                    __html: comment.comment,\r\n                }}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientAlertComment;\r\n","import classNames from \"classnames\";\r\nimport moment from \"moment-timezone\";\r\nimport React from \"react\";\r\nimport StarRating from \"../../../../../../components/StarRating\";\r\nimport styles from \"../../index.module.scss\";\r\n\r\nconst InitialSurveyCompleteComment = ({ comment }) => {\r\n    return (\r\n        <div className={styles.systemComment}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className={styles.name}>{comment.full_admin_name}</div>\r\n                <div className={classNames(styles.date, \"text-primary\")}>\r\n                    {moment(comment.created_at).format(\"DD MMM. YYYY h:mm A\")}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"form-label fw-bold\">Comment</label>\r\n                <div\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: comment.comment,\r\n                    }}></div>\r\n            </div>\r\n            <div className=\"d-flex flex-column gap-2\">\r\n                <div>\r\n                    <label className=\"form-label fw-bold\">\r\n                        Appointment survey for provider{\" \"}\r\n                        {comment.provider_name_from_appointment}\r\n                    </label>\r\n                    <div>\r\n                        <div>\r\n                            On a scale of 1-5 (with 5 being the highest) how do\r\n                            you rate the services you just received?\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                            <StarRating\r\n                                value={comment.comment_metadata.service_rate}\r\n                                fieldName=\"service_rate\"\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        On a scale of 1-5 (with 5 being the highest) how do you\r\n                        rate the provider that was assigned to you?\r\n                    </div>\r\n                    <div className=\"mt-1\">\r\n                        <StarRating\r\n                            value={comment.comment_metadata.provider_rate}\r\n                            fieldName=\"provider_rate\"\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        Do you have any suggestions as to how we can elevate\r\n                        your experience with Change WithinReach?\r\n                    </div>\r\n                    <div className=\"d-flex gap-1 mt-1\">\r\n                        {comment.comment_metadata.suggestions || \"-\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InitialSurveyCompleteComment;\r\n","import classNames from \"classnames\";\r\nimport moment from \"moment-timezone\";\r\nimport React from \"react\";\r\nimport { getUsFormat } from \"../../../../../../mixins/phone-format\";\r\nimport styles from \"../../index.module.scss\";\r\n\r\nconst OnboardingCompleteComment = ({ comment }) => {\r\n    const phone = getUsFormat(String(comment.comment_metadata.phone));\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.systemComment}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div className={styles.name}>{comment.full_admin_name}</div>\r\n                    <div className={classNames(styles.date, \"text-primary\")}>\r\n                        {moment(comment.created_at).format(\r\n                            \"DD MMM. YYYY h:mm A\",\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div className=\"fw-bold\">Onboarding done</div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-label fw-bold\">Comment</label>\r\n                    <div\r\n                        dangerouslySetInnerHTML={{\r\n                            __html: comment.comment,\r\n                        }}></div>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"form-label fw-bold\">Phone</label>\r\n                    <div>{phone}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OnboardingCompleteComment;\r\n","import React from \"react\";\r\nimport styles from \"../../index.module.scss\";\r\nimport {\r\n    CANCELLATION_COMMENT_TYPE,\r\n    CHANGE_VISIT_FREQUENCY_COMMENT_TYPE,\r\n    CREATION_COMMENT_TYPE,\r\n    RESCHEDULE_COMMENT_TYPE,\r\n} from \"../../../../../../constants/new-patients-dashboard\";\r\nimport moment from \"moment-timezone\";\r\nimport classNames from \"classnames\";\r\n\r\nconst DefaultComment = ({ comment }) => {\r\n    let additionalInfo = null;\r\n    let appointmentDate = null;\r\n    let visitReason = null;\r\n\r\n    if (comment.appointment) {\r\n        appointmentDate = moment\r\n            .unix(comment.appointment.time)\r\n            .format(\"MM/DD/YYYY h:mm a\");\r\n        visitReason = comment.comment_metadata ? comment.comment_metadata.visit_reason : null;\r\n    }\r\n\r\n    switch (comment.comment_type) {\r\n        case CANCELLATION_COMMENT_TYPE:\r\n            additionalInfo = 'cancelled appointment';\r\n            if (appointmentDate) {\r\n                if (visitReason) {\r\n                    additionalInfo += ` with reason \"${visitReason}\" <br><span style=\"line-height: 1.5;\">(Appt. date: ${appointmentDate})</span>`\r\n                } else {\r\n                    additionalInfo += ` (Appt. date: ${appointmentDate})`;\r\n                }\r\n            }\r\n            break;\r\n        case RESCHEDULE_COMMENT_TYPE:\r\n            additionalInfo = 'rescheduled appointment';\r\n            let newAppointmentDate = null;\r\n\r\n            if (comment.new_appointment) {\r\n                newAppointmentDate = moment\r\n                    .unix(comment.new_appointment.time)\r\n                    .format(\"MM/DD/YYYY h:mm a\");\r\n            } else if (\r\n                comment.comment_metadata &&\r\n                comment.comment_metadata.old_time &&\r\n                comment.comment_metadata.new_time\r\n            ) {\r\n                appointmentDate = moment\r\n                    .unix(comment.comment_metadata.old_time)\r\n                    .format(\"MM/DD/YYYY h:mm a\");\r\n                newAppointmentDate = moment\r\n                    .unix(comment.comment_metadata.new_time)\r\n                    .format(\"MM/DD/YYYY h:mm a\");\r\n            }\r\n\r\n            if (appointmentDate && newAppointmentDate) {\r\n                if (visitReason) {\r\n                    additionalInfo += ` with reason \"${visitReason}\" <br><span style=\"line-height: 1.5;\">(Old appt. date: ${appointmentDate}, new appt. date: ${newAppointmentDate})</span>`\r\n                } else {\r\n                    additionalInfo += ` (Old appt. date: ${appointmentDate}, new appt. date: ${newAppointmentDate})`;\r\n                }\r\n            }\r\n\r\n            break;\r\n        case CREATION_COMMENT_TYPE:\r\n            additionalInfo = 'scheduled appointment';\r\n            if (appointmentDate) {\r\n                if (visitReason) {\r\n                    additionalInfo += ` with reason \"${visitReason}\" <br><span style=\"line-height: 1.5;\">(Appt. date: ${appointmentDate})</span>`\r\n                } else {\r\n                    additionalInfo += ` (Appt. date: ${appointmentDate})`;\r\n                }\r\n            }\r\n            break;\r\n        case CHANGE_VISIT_FREQUENCY_COMMENT_TYPE:\r\n            additionalInfo = \"changed patient Frequency of Treatment\";\r\n            const metadata = comment.comment_metadata;\r\n            if (metadata) {\r\n                additionalInfo += ` (${\r\n                    metadata.old_value\r\n                        ? `Old value: ${metadata.old_value}; `\r\n                        : \"\"\r\n                }New value: ${metadata.new_value})`;\r\n            }\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.comment}>\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <span className={styles.name}>\r\n                            {comment.full_admin_name || comment.provider_name}\r\n                        </span>{\" \"}\r\n                        <span dangerouslySetInnerHTML={{ __html: additionalInfo }}></span>\r\n                    </div>\r\n                    <div className={classNames(styles.date, \"text-primary\")}>\r\n                        {moment(comment.created_at).format(\r\n                            \"DD MMM. YYYY h:mm A\",\r\n                        )}\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: comment.comment,\r\n                    }}></div>\r\n            </div>\r\n            <hr className=\"m-0\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DefaultComment;\r\n","import classNames from \"classnames\";\r\nimport moment from \"moment-timezone\";\r\nimport React from \"react\";\r\nimport StarRating from \"../../../../../../components/StarRating\";\r\nimport styles from \"../../index.module.scss\";\r\n\r\nconst SecondSurveyCompleteComment = ({ comment }) => {\r\n    return (\r\n        <div className={styles.systemComment}>\r\n            <div className=\"d-flex justify-content-between\">\r\n                <div className={styles.name}>{comment.full_admin_name}</div>\r\n                <div className={classNames(styles.date, \"text-primary\")}>\r\n                    {moment(comment.created_at).format(\"DD MMM. YYYY h:mm A\")}\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"form-label fw-bold\">Comment</label>\r\n                <div\r\n                    dangerouslySetInnerHTML={{\r\n                        __html: comment.comment,\r\n                    }}></div>\r\n            </div>\r\n            <div className=\"d-flex flex-column gap-2\">\r\n                <div>\r\n                    <label className=\"form-label fw-bold\">\r\n                        Appointment survey for provider{\" \"}\r\n                        {comment.provider_name_from_appointment}\r\n                    </label>\r\n                    <div>\r\n                        <div>\r\n                            How well do you feel understood and supported by\r\n                            your therapist? Please rate from 1 to 5 stars, where\r\n                            1 star means 'not at all' and 5 stars means\r\n                            'completely'.\r\n                        </div>\r\n                        <div className=\"d-flex gap-1 mt-1\">\r\n                            <StarRating\r\n                                value={\r\n                                    comment.comment_metadata\r\n                                        .therapist_understanding_support_rate\r\n                                }\r\n                                fieldName=\"therapist_understanding_support_rate\"\r\n                                readOnly\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        How would you rate the overall atmosphere or vibe during\r\n                        your therapy sessions? Please rate from 1 to 5 stars,\r\n                        where 1 star means 'very poor' and 5 stars means\r\n                        'excellent'.\r\n                    </div>\r\n                    <div className=\"d-flex gap-1 mt-1\">\r\n                        <StarRating\r\n                            value={\r\n                                comment.comment_metadata.therapy_atmosphere_rate\r\n                            }\r\n                            fieldName=\"therapy_atmosphere_rate\"\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        How easy has it been for you to open up and share with\r\n                        your therapist? Please rate from 1 to 5 stars, where 1\r\n                        star means 'very difficult' and 5 stars means 'very\r\n                        easy'.\r\n                    </div>\r\n                    <div className=\"d-flex gap-1 mt-1\">\r\n                        <StarRating\r\n                            value={\r\n                                comment.comment_metadata\r\n                                    .therapist_openness_share_rate\r\n                            }\r\n                            fieldName=\"therapist_openness_share_rate\"\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        How do you feel after your therapy sessions? Please rate\r\n                        your sense of being heard and validated from 1 to 5\r\n                        stars, where 1 star means 'not at all' and 5 stars means\r\n                        'completely'.\r\n                    </div>\r\n                    <div className=\"d-flex gap-1 mt-1\">\r\n                        <StarRating\r\n                            value={\r\n                                comment.comment_metadata\r\n                                    .therapy_session_after_feelings_rate\r\n                            }\r\n                            fieldName=\"therapy_session_after_feelings_rate\"\r\n                            readOnly\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        Do you have any suggestions as to how we can elevate\r\n                        your experience with Change WithinReach?\r\n                    </div>\r\n                    <div className=\"d-flex gap-1 mt-1\">\r\n                        {comment.comment_metadata.suggestions || \"-\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SecondSurveyCompleteComment;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport Tribute from \"tributejs\";\r\nimport classNames from \"classnames\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiAttachment } from \"@mdi/js\";\r\nimport DetailsIcon from \"../../../../assets/icons/details.svg\";\r\nimport ChartIcon from \"../../../../assets/icons/chart.svg\";\r\nimport CreatePatientIcon from \"../../../../assets/icons/create-patient.svg\";\r\nimport CallIcon from \"../../../../assets/icons/call.svg\";\r\nimport HexCrossIcon from \"../../../../assets/icons/hex-cross.svg\";\r\nimport PatientFormsModal from \"../../../../components/Modals/PatientFormsModal\";\r\nimport SourceTag from \"../SourceTag\";\r\nimport ThreeDotsMenu from \"../ThreeDotsMenu\";\r\nimport CircleLoader from \"../../../../components/CircleLoader\";\r\nimport { getInquirableFullname } from \"../../../../utilities/newPatientsCrmUtils\";\r\nimport {\r\n    ACTIVE_APPOINTMENT_TYPE,\r\n    RESCHEDULED_APPOINTMENT_TYPE,\r\n} from \"../../../../constants\";\r\nimport * as newPatientsDashboardApi from \"../../../../api/pages/new-patients-dashboard-page\";\r\nimport * as newPatientsDashboardReducer from \"../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport * as utils from \"./utils\";\r\nimport styles from \"./index.module.scss\";\r\nimport moment from \"moment-timezone\";\r\nimport {\r\n    APPOINTMENT_SCHEDULED_LANE_ID,\r\n    INITIAL_SURVEY_COMMENT_TYPE,\r\n    ONBOARDING_COMPLETE_COMMENT_TYPE,\r\n    SECOND_SURVEY_COMMENT_TYPE,\r\n} from \"../../../../constants/new-patients-dashboard\";\r\nimport { getDisplayedProviderForInquiry, processCardData } from \"../../utils\";\r\nimport { getUsFormat } from \"../../../../mixins/phone-format\";\r\nimport PatientLeadDocumentComment from \"./components/PatientLeadDocumentComment\";\r\nimport PatientAlertComment from \"./components/PatientAlertComment\";\r\nimport InitialSurveyCompleteComment from \"./components/InitialSurveyCompleteComment\";\r\nimport OnboardingCompleteComment from \"./components/OnboardingCompleteComment\";\r\nimport DefaultComment from \"./components/DefaultComment\";\r\nimport SecondSurveyCompleteComment from \"./components/SecondSurveyCompleteComment\";\r\n\r\nconst PatientDetailsModal = () => {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n\r\n    const { app, newPatientsDashboard } = useSelector((state) => state);\r\n    const { queryParams } = app;\r\n    const {\r\n        selectedCardData,\r\n        removeCardData,\r\n        eventBus,\r\n        fileTypeSelection,\r\n        providersDatasetForTribute,\r\n    } = newPatientsDashboard;\r\n\r\n    const commentsObserverRef = useRef(null);\r\n    const dotsIconRef = useRef(null);\r\n    const sendFormDialogRef = useRef(null);\r\n    const commentRef = useRef(null);\r\n\r\n    const [commentsPage, setCommentsPage] = useState(1);\r\n    const [commentsPageCount, setCommentsPageCount] = useState(1);\r\n    const [newComment, setNewComment] = useState(\"\");\r\n    const [showSendFormDialog, setShowSendFormDialog] = useState(false);\r\n    const [isLoadingComments, setIsLoadingComments] = useState(false);\r\n    const [commentIsSaving, setCommentIsSaving] = useState(false);\r\n    const [isLoadingAdditionalComments, setIsLoadingAdditionalComments] =\r\n        useState(false);\r\n    const [isLoadingCreatePatient, setIsLoadingCreatePatient] = useState(false);\r\n\r\n    const show =\r\n        selectedCardData && !removeCardData && !fileTypeSelection.showModal;\r\n\r\n    const patientName =\r\n        selectedCardData && getInquirableFullname(selectedCardData);\r\n    const dateOfBirth =\r\n        selectedCardData && selectedCardData.date_of_birth\r\n            ? utils.formatDate(selectedCardData.date_of_birth)\r\n            : \"Not specified\";\r\n    const age =\r\n        selectedCardData && selectedCardData.date_of_birth\r\n            ? utils.calculateAge(selectedCardData.date_of_birth)\r\n            : \"Not specified\";\r\n    const sex = selectedCardData && utils.getSexLabel(selectedCardData.sex);\r\n    const nextAppointmentDateTime = selectedCardData?.nextAppointment\r\n        ?.date_of_service\r\n        ? `${selectedCardData.nextAppointment.date_of_service.date} ${selectedCardData.nextAppointment.date_of_service.time}`\r\n        : null;\r\n    const displayedProvider = selectedCardData\r\n        ? getDisplayedProviderForInquiry({\r\n              nextAppointment: selectedCardData.nextAppointment,\r\n              isPatientCreated: selectedCardData.isPatientCreated,\r\n              inquirable: selectedCardData,\r\n          })\r\n        : null;\r\n\r\n    const getNextAppointmentType = () => {\r\n        if (!selectedCardData || !selectedCardData.nextAppointment) {\r\n            return null;\r\n        }\r\n\r\n        return selectedCardData.rescheduledAppointment\r\n            ? RESCHEDULED_APPOINTMENT_TYPE\r\n            : ACTIVE_APPOINTMENT_TYPE;\r\n    };\r\n\r\n    const nextAppointmentType = getNextAppointmentType();\r\n\r\n    const threeDotsText = <div style={{ width: \"214px\" }}>Patient forms</div>;\r\n\r\n    const fetchAdditionalComments = () => {\r\n        if (\r\n            selectedCardData &&\r\n            selectedCardData.comments?.length &&\r\n            commentsPage < commentsPageCount\r\n        ) {\r\n            setIsLoadingAdditionalComments(true);\r\n\r\n            newPatientsDashboardApi\r\n                .getInquiryComments({\r\n                    id: selectedCardData.inquiry_id,\r\n                    page: commentsPage + 1,\r\n                })\r\n                .then((res) => {\r\n                    if (\r\n                        localStorage.getItem(\"currentInquiryId\")?.toString() ===\r\n                            selectedCardData.inquiry_id.toString() &&\r\n                        res.data.data.length\r\n                    ) {\r\n                        const data = [\r\n                            ...selectedCardData.comments,\r\n                            ...res.data.data,\r\n                        ];\r\n                        dispatch(\r\n                            newPatientsDashboardReducer.setCommentsInSelectedCardDataAC(\r\n                                { data },\r\n                            ),\r\n                        );\r\n                        setCommentsPage(commentsPage + 1);\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    if (\r\n                        localStorage.getItem(\"currentInquiryId\")?.toString() ===\r\n                        selectedCardData.inquiry_id.toString()\r\n                    ) {\r\n                        setIsLoadingAdditionalComments(false);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    const clearComment = () => {\r\n        setNewComment(\"\");\r\n        commentRef.current.innerHTML = \"\";\r\n    };\r\n\r\n    const handleSaveComment = () => {\r\n        setCommentIsSaving(true);\r\n\r\n        const payload = {\r\n            id: selectedCardData.inquiry_id,\r\n            data: { comment: newComment },\r\n        };\r\n        newPatientsDashboardApi.createInquiryComment(payload).then((res) => {\r\n            const data = res.data;\r\n\r\n            const comment = {\r\n                model: \"PatientComment\",\r\n                comment: data.comment,\r\n                full_admin_name: `${data.admin.firstname} ${data.admin.lastname}`,\r\n                created_at: data.created_at,\r\n            };\r\n\r\n            dispatch(\r\n                newPatientsDashboardReducer.setCommentsInSelectedCardDataAC({\r\n                    data: [comment, ...selectedCardData.comments],\r\n                }),\r\n            );\r\n            clearComment();\r\n            setCommentIsSaving(false);\r\n        });\r\n    };\r\n\r\n    const closeModal = () => {\r\n        dispatch(\r\n            newPatientsDashboardReducer.setSelectedCardDataAC({ data: null }),\r\n        );\r\n        setCommentsPage(1);\r\n        setCommentsPageCount(1);\r\n        setIsLoadingCreatePatient(false);\r\n        setIsLoadingComments(false);\r\n        setIsLoadingAdditionalComments(false);\r\n        localStorage.removeItem(\"currentInquiryId\");\r\n    };\r\n\r\n    const patientChartClick = () => {\r\n        window.open(`/chart/${selectedCardData.id}`, \"_blank\");\r\n    };\r\n\r\n    const createPatientClick = () => {\r\n        if (isLoadingCreatePatient) {\r\n            return;\r\n        }\r\n\r\n        setIsLoadingCreatePatient(true);\r\n\r\n        newPatientsDashboardApi\r\n            .createPatientFromPatientLeadForInquiry({\r\n                id: selectedCardData.inquiry_id,\r\n            })\r\n            .then((res) => {\r\n                const inquiry = res.data;\r\n                inquiry.id = inquiry.id.toString();\r\n\r\n                dispatch(\r\n                    newPatientsDashboardReducer.setSelectedCardDataAC({\r\n                        data: {\r\n                            ...inquiry.inquirable,\r\n                            inquiry_id: inquiry.id,\r\n                            stageId: inquiry.stage_id,\r\n                            source: inquiry.source,\r\n                            registrationMethod: inquiry.registration_method,\r\n                            isPatientCreated: true,\r\n                        },\r\n                    }),\r\n                );\r\n\r\n                const updatedCard = processCardData(inquiry);\r\n\r\n                eventBus.publish({\r\n                    type: \"UPDATE_CARD\",\r\n                    laneId: inquiry.stage_id,\r\n                    card: updatedCard,\r\n                });\r\n\r\n                dispatch(\r\n                    newPatientsDashboardReducer.updateCardDataAC({\r\n                        data: updatedCard,\r\n                        meta: {\r\n                            stageId: inquiry.stage_id,\r\n                            id: inquiry.id,\r\n                        },\r\n                    }),\r\n                );\r\n            })\r\n            .finally(() => {\r\n                setIsLoadingCreatePatient(false);\r\n            });\r\n    };\r\n\r\n    const patientCallClick = () => {\r\n        closeModal();\r\n\r\n        const data = {\r\n            patientId: selectedCardData.id,\r\n            patientType: selectedCardData.isPatientCreated\r\n                ? \"patient\"\r\n                : \"patient_lead\",\r\n        };\r\n        dispatch(newPatientsDashboardReducer.setCallModalDataAC({ data }));\r\n    };\r\n\r\n    const handleCancelClick = () => {\r\n        clearComment();\r\n    };\r\n\r\n    const handleArchivePatientClick = () => {\r\n        const data = {\r\n            laneId: selectedCardData.stageId,\r\n            cardId: selectedCardData.inquiry_id,\r\n            patientName,\r\n        };\r\n        dispatch(newPatientsDashboardReducer.setRemoveCardDataAC({ data }));\r\n    };\r\n\r\n    const handleUploadFile = (e) => {\r\n        const selectedFile = e.target.files[0];\r\n\r\n        const payload = new FormData();\r\n\r\n        payload.append(\"qquuid\", uuidv4());\r\n        payload.append(\"qqfilename\", selectedFile.name);\r\n        payload.append(\"qqtotalfilesize\", String(selectedFile.size));\r\n        payload.append(\"qqfile\", selectedFile);\r\n\r\n        dispatch(\r\n            newPatientsDashboardReducer.setFileTypeSelectionAC({\r\n                data: { showModal: true, fileId: null },\r\n            }),\r\n        );\r\n\r\n        if (selectedCardData.isPatientCreated) {\r\n            payload.append(\"patient_id\", selectedCardData.id);\r\n\r\n            newPatientsDashboardApi.uploadPatientFile(payload).then((res) => {\r\n                dispatch(\r\n                    newPatientsDashboardReducer.setFileTypeSelectionAC({\r\n                        data: {\r\n                            showModal: true,\r\n                            fileId: res.data.new_file_id,\r\n                            patientIsCreated: selectedCardData.isPatientCreated,\r\n                        },\r\n                    }),\r\n                );\r\n            });\r\n        } else {\r\n            newPatientsDashboardApi\r\n                .uploadPatientLeadFile(selectedCardData.id, payload)\r\n                .then((res) => {\r\n                    dispatch(\r\n                        newPatientsDashboardReducer.setFileTypeSelectionAC({\r\n                            data: {\r\n                                showModal: true,\r\n                                fileId: res.data.new_file_id,\r\n                                patientIsCreated:\r\n                                    selectedCardData.isPatientCreated,\r\n                            },\r\n                        }),\r\n                    );\r\n                });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let observer;\r\n\r\n        if (commentsObserverRef.current) {\r\n            observer = new IntersectionObserver(\r\n                (entries) => {\r\n                    if (entries[0].isIntersecting) {\r\n                        fetchAdditionalComments();\r\n                    }\r\n                },\r\n                { threshold: 1 },\r\n            );\r\n\r\n            observer.observe(commentsObserverRef.current);\r\n        }\r\n\r\n        return () => {\r\n            if (observer) {\r\n                observer.disconnect();\r\n            }\r\n        };\r\n    });\r\n\r\n    const attachTributeToComment = () => {\r\n        if (commentRef.current && selectedCardData) {\r\n            const values = selectedCardData.isPatientCreated\r\n                ? providersDatasetForTribute\r\n                : providersDatasetForTribute.filter((item) => {\r\n                      return (\r\n                          item.key.includes(\"(Admin)\") ||\r\n                          item.key.includes(\"(Secretary)\") ||\r\n                          item.key.includes(\"(Patient Relation Manager)\")\r\n                      );\r\n                  });\r\n\r\n            const options = {\r\n                trigger: \"@\",\r\n                values,\r\n                selectTemplate: function (item) {\r\n                    return (\r\n                        '<span class=\"comment-mention\" data-id=\"' +\r\n                        item.original.id +\r\n                        '\" contenteditable=\"false\">@' +\r\n                        item.original.value +\r\n                        \"</span>\"\r\n                    );\r\n                },\r\n            };\r\n            const tribute = new Tribute(options);\r\n\r\n            tribute.attach(commentRef.current);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        attachTributeToComment();\r\n    }, [selectedCardData]);\r\n\r\n    const fetchComments = () => {\r\n        if (selectedCardData) {\r\n            setIsLoadingComments(true);\r\n            localStorage.setItem(\r\n                \"currentInquiryId\",\r\n                selectedCardData.inquiry_id,\r\n            );\r\n\r\n            newPatientsDashboardApi\r\n                .getInquiryComments({\r\n                    id: selectedCardData.inquiry_id,\r\n                    page: commentsPage,\r\n                })\r\n                .then((res) => {\r\n                    if (\r\n                        localStorage.getItem(\"currentInquiryId\")?.toString() ===\r\n                        selectedCardData.inquiry_id.toString()\r\n                    ) {\r\n                        dispatch(\r\n                            newPatientsDashboardReducer.setCommentsInSelectedCardDataAC(\r\n                                { data: res.data.data },\r\n                            ),\r\n                        );\r\n                        setCommentsPageCount(res.data.last_page);\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    if (\r\n                        localStorage.getItem(\"currentInquiryId\")?.toString() ===\r\n                        selectedCardData.inquiry_id.toString()\r\n                    ) {\r\n                        setIsLoadingComments(false);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchComments();\r\n    }, [selectedCardData?.id]);\r\n\r\n    const scrollToCommentById = (id) => {\r\n        const commentElement = document.getElementById(`comment-${id}`);\r\n\r\n        if (commentElement) {\r\n            commentElement.scrollIntoView({\r\n                behavior: \"smooth\",\r\n                block: \"center\",\r\n            });\r\n            navigate(\"/new-patients-dashboard\");\r\n        } else {\r\n            const lastCommentIndex = selectedCardData.comments.length - 1;\r\n            const lastCommentId =\r\n                selectedCardData.comments[lastCommentIndex].id;\r\n            scrollToCommentById(lastCommentId);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedCardData?.comments?.length && queryParams.comment) {\r\n            setTimeout(() => {\r\n                scrollToCommentById(queryParams.comment);\r\n            }, 200);\r\n        }\r\n    }, [selectedCardData?.comments]);\r\n\r\n    useOnClickOutside(sendFormDialogRef, (e) => {\r\n        if (!dotsIconRef.current || !dotsIconRef.current.contains(e.target)) {\r\n            setShowSendFormDialog(false);\r\n        }\r\n    });\r\n\r\n    if (!selectedCardData) {\r\n        return <></>;\r\n    }\r\n\r\n    const { onboardingDate, onboardingTime, alert } = selectedCardData;\r\n\r\n    const formattedOnboardingDate = onboardingDate\r\n        ? moment(onboardingDate, \"YYYY-MM-DD\").format(\"MM/DD/YYYY\")\r\n        : \"-\";\r\n    const formattedOnboardingTime = onboardingTime || \"-\";\r\n\r\n    let coPay = \"-\";\r\n    let deductible = \"-\";\r\n\r\n    if (alert) {\r\n        coPay = `$${alert.co_pay}`;\r\n        deductible = `$${alert.deductible}`;\r\n    }\r\n\r\n    const getOnboardingInfo = () => {\r\n        if (selectedCardData.onboardingCompleteComment) {\r\n            const { comment, metadata, admin, created_at } =\r\n                selectedCardData.onboardingCompleteComment;\r\n\r\n            const adminName = `${admin.firstname} ${admin.lastname}`;\r\n            const formattedPhone = metadata.phone\r\n                ? getUsFormat(metadata.phone)\r\n                : \"-\";\r\n            const createdAtTime = moment(created_at).format(\"hh:mm A\");\r\n\r\n            return (\r\n                <div className={styles.info}>\r\n                    <div className=\"d-flex gap-1\">\r\n                        <div className=\"fw-bold nowrap\">Onboarding done</div>\r\n                        <div>\r\n                            by {adminName} at {createdAtTime}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex gap-1\">\r\n                        <div className=\"fw-bold\" style={{ width: \"75px\" }}>\r\n                            Comment:\r\n                        </div>\r\n                        <div>{comment}</div>\r\n                    </div>\r\n                    <div className=\"d-flex gap-1\">\r\n                        <div className=\"fw-bold\" style={{ width: \"75px\" }}>\r\n                            Phone:\r\n                        </div>\r\n                        <div>{formattedPhone}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if (selectedCardData.stageId === APPOINTMENT_SCHEDULED_LANE_ID) {\r\n            return (\r\n                <div className={styles.info}>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className={styles.field}>Onboarding time:</div>\r\n                        <div className={styles.value}>\r\n                            {`${formattedOnboardingDate} ${formattedOnboardingTime}`}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className={styles.field}>Co-pay:</div>\r\n                        <div className={styles.value}>{coPay || \"-\"}</div>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className={styles.field}>Deductible:</div>\r\n                        <div className={styles.value}>{deductible || \"-\"}</div>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className={styles.field}>Message:</div>\r\n                        <div className={styles.value}>\r\n                            {selectedCardData.alert?.message || \"-\"}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <div className={styles.field}>Phone:</div>\r\n                        <div className={styles.value}>\r\n                            {selectedCardData.onboardingPhone || \"-\"}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return <></>;\r\n    };\r\n\r\n    const getCommentComponent = (comment) => {\r\n        switch (comment.model) {\r\n            case \"PatientDocument\":\r\n            case \"PatientLeadDocument\":\r\n                return <PatientLeadDocumentComment comment={comment} />;\r\n            case \"PatientAlert\":\r\n                return <PatientAlertComment comment={comment} />;\r\n            default:\r\n                if (comment.comment_type === INITIAL_SURVEY_COMMENT_TYPE) {\r\n                    return <InitialSurveyCompleteComment comment={comment} />;\r\n                }\r\n\r\n                if (comment.comment_type === SECOND_SURVEY_COMMENT_TYPE) {\r\n                    return <SecondSurveyCompleteComment comment={comment} />;\r\n                }\r\n\r\n                if (comment.comment_type === ONBOARDING_COMPLETE_COMMENT_TYPE) {\r\n                    return <OnboardingCompleteComment comment={comment} />;\r\n                }\r\n\r\n                return <DefaultComment comment={comment} />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            onHide={closeModal}\r\n            disabled={showSendFormDialog}\r\n            className={classNames(\r\n                \"custom-modal\",\r\n                showSendFormDialog && \"faded\",\r\n            )}>\r\n            <ModalHeader closeButton className={styles.header}>\r\n                <img src={DetailsIcon} alt=\"details-icon\" />\r\n                <div className={styles.name}>{patientName}</div>\r\n                <div className={styles.age}>\r\n                    {age} years, {sex}\r\n                </div>\r\n            </ModalHeader>\r\n            <ModalBody className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7 d-flex flex-column gap-4\">\r\n                        <div className=\"d-flex flex-column align-items-end\">\r\n                            <div className=\"mb-3 w-100 custom-form-group\">\r\n                                <label htmlFor=\"exampleFormControlTextarea1\">\r\n                                    Enter your comment\r\n                                </label>\r\n                                <div className=\"position-relative \">\r\n                                    <div\r\n                                        className={classNames(\r\n                                            styles.commentTextarea,\r\n                                            \"form-control comment-textarea\",\r\n                                        )}\r\n                                        contentEditable\r\n                                        ref={commentRef}\r\n                                        onInput={(e) =>\r\n                                            setNewComment(e.target.innerHTML)\r\n                                        }></div>\r\n                                    <label\r\n                                        htmlFor=\"file\"\r\n                                        className={styles.clip}>\r\n                                        <Icon path={mdiAttachment} size={1} />\r\n                                    </label>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        id=\"file\"\r\n                                        hidden\r\n                                        onChange={handleUploadFile}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex gap-1\">\r\n                                <div className=\"d-flex gap-2\">\r\n                                    <button\r\n                                        className=\"btn btn-large btn-outline-primary\"\r\n                                        onClick={handleCancelClick}>\r\n                                        Cancel\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={handleSaveComment}\r\n                                        className=\"btn btn-large btn-primary text-white d-flex align-items-center justify-content-center gap-2\"\r\n                                        disabled={!newComment}\r\n                                        style={{ width: \"106px\" }}>\r\n                                        <div>Save</div>\r\n                                        {commentIsSaving && (\r\n                                            <div\r\n                                                className=\"spinner-border spinner-border-sm\"\r\n                                                role=\"status\"></div>\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {isLoadingComments ? (\r\n                            <CircleLoader />\r\n                        ) : selectedCardData.comments?.length ? (\r\n                            <div className=\"d-flex flex-column gap-4\">\r\n                                {selectedCardData.comments.map(\r\n                                    (comment, index) => (\r\n                                        <div\r\n                                            key={index}\r\n                                            id={`comment-${comment.id}`}>\r\n                                            {getCommentComponent(comment)}\r\n                                        </div>\r\n                                    ),\r\n                                )}\r\n                            </div>\r\n                        ) : (\r\n                            <div>No comments yet</div>\r\n                        )}\r\n                        {!isLoadingComments && !isLoadingAdditionalComments && (\r\n                            <div ref={commentsObserverRef} />\r\n                        )}\r\n                        {isLoadingAdditionalComments && (\r\n                            <div\r\n                                className={\r\n                                    \"d-flex gap-1 align-items-center justify-content-center\"\r\n                                }\r\n                                style={{ height: \"10px\" }}>\r\n                                <CircleLoader />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className={classNames(styles.patientDetails, \"col-5\")}>\r\n                        <div className={styles.title}>\r\n                            <div>Patient details:</div>\r\n                            <ThreeDotsMenu\r\n                                text={threeDotsText}\r\n                                onAction={() => setShowSendFormDialog(true)}\r\n                                disabled={!selectedCardData.isPatientCreated}\r\n                            />\r\n                        </div>\r\n                        <div className=\"d-flex gap-2\">\r\n                            {selectedCardData.isPatientCreated ? (\r\n                                <button\r\n                                    onClick={patientChartClick}\r\n                                    className=\"btn btn-large btn-primary text-white d-flex justify-content-center align-items-center gap-1 w-100\">\r\n                                    <img src={ChartIcon} alt=\"chart-icon\" />\r\n                                    <div>Chart</div>\r\n                                </button>\r\n                            ) : (\r\n                                <button\r\n                                    onClick={createPatientClick}\r\n                                    disabled={isLoadingCreatePatient}\r\n                                    className=\"btn btn-large btn-primary text-white d-flex justify-content-center align-items-center gap-1 w-100\">\r\n                                    {isLoadingCreatePatient ? (\r\n                                        <CircleLoader\r\n                                            color={\"#fff\"}\r\n                                            size={\"small\"}\r\n                                        />\r\n                                    ) : (\r\n                                        <>\r\n                                            <img\r\n                                                src={CreatePatientIcon}\r\n                                                alt=\"chart-icon\"\r\n                                            />\r\n                                            <div>Create pt.</div>\r\n                                        </>\r\n                                    )}\r\n                                </button>\r\n                            )}\r\n\r\n                            <button\r\n                                className=\"btn btn-large btn-primary text-white d-flex justify-content-center align-items-center gap-1 w-100\"\r\n                                disabled={!selectedCardData.cell_phone && !selectedCardData.home_phone && !selectedCardData.work_phone}\r\n                                onClick={patientCallClick}>\r\n                                <img src={CallIcon} alt=\"call-icon\" />\r\n                                <div>Call</div>\r\n                            </button>\r\n                        </div>\r\n                        <button\r\n                            onClick={handleArchivePatientClick}\r\n                            className=\"btn btn-danger d-flex gap-1 align-items-center justify-content-center\">\r\n                            <img src={HexCrossIcon} alt=\"cross-icon\" />\r\n                            <div>Archive inquiry</div>\r\n                        </button>\r\n\r\n                        <div className={styles.info}>\r\n                            <div className=\"d-flex my-2 gap-2 flex-wrap\">\r\n                                {selectedCardData.therapy_type && (\r\n                                    <SourceTag\r\n                                        size={\"lg\"}\r\n                                        source={selectedCardData.therapy_type}\r\n                                    />\r\n                                )}\r\n                                <SourceTag\r\n                                    source={selectedCardData.registrationMethod}\r\n                                    size={\"lg\"}\r\n                                />\r\n                                <SourceTag\r\n                                    source={selectedCardData.source}\r\n                                    size={\"lg\"}\r\n                                />\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>Full name:</div>\r\n                                <div className={styles.value}>\r\n                                    {patientName}\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>\r\n                                    Date of birth:\r\n                                </div>\r\n                                <div className={styles.value}>\r\n                                    {dateOfBirth}\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>Age:</div>\r\n                                <div className={styles.value}>{age}</div>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>Sex:</div>\r\n                                <div className={styles.value}>{sex}</div>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>Email:</div>\r\n                                <div className={styles.value}>\r\n                                    {selectedCardData.email || \"-\"}\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>Insurance:</div>\r\n                                <div className={styles.value}>\r\n                                    {selectedCardData.insurance?.insurance ||\r\n                                        selectedCardData.primary_insurance ||\r\n                                        \"-\"}\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>Address:</div>\r\n                                <div className={styles.value}>\r\n                                    {selectedCardData.address || \"-\"}\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>Provider:</div>\r\n                                <div className={styles.value}>\r\n                                    {displayedProvider?.provider_name || \"-\"}\r\n                                </div>\r\n                            </div>\r\n                            <hr className=\"m-0\" />\r\n                            <div className=\"d-flex align-items-center\">\r\n                                <div className={styles.field}>\r\n                                    Appt. scheduled:\r\n                                </div>\r\n                                <div\r\n                                    className={classNames(\r\n                                        styles.value,\r\n                                        styles[nextAppointmentType],\r\n                                    )}>\r\n                                    {nextAppointmentDateTime || \"-\"}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {getOnboardingInfo()}\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedCardData.isPatientCreated && <PatientFormsModal\r\n                    showModal={showSendFormDialog}\r\n                    closeModal={() => {\r\n                        setShowSendFormDialog(false);\r\n                    }}\r\n                    patient={selectedCardData}\r\n                />}\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default PatientDetailsModal;\r\n","import moment from \"../../../../utilities/moment-config\";\r\n\r\nexport const calculateAge = (dateString) => {\r\n    const birthDate = moment(dateString);\r\n    const today = moment();\r\n    return today.diff(birthDate, \"years\");\r\n};\r\n\r\nexport const formatDate = (dateString) => {\r\n    return moment(dateString).format(\"MM/DD/YYYY\");\r\n};\r\n\r\nexport const getSexLabel = (sex) => {\r\n    switch (sex) {\r\n        case \"M\":\r\n            return \"Male\";\r\n        case \"F\":\r\n            return \"Female\";\r\n        case \"U\":\r\n            return \"Unknown\";\r\n        default:\r\n            return \"Not specified\";\r\n    }\r\n};","export default __webpack_public_path__ + \"static/media/change-stage.29825bde.svg\";","import { createContext } from \"react\";\r\n\r\nconst MoveCardContext = createContext();\r\n\r\nexport default MoveCardContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport ChangeStageIcon from \"../../../../../../assets/icons/change-stage.svg\";\r\nimport * as utils from \"../../../../../../utilities/newPatientsCrmUtils\";\r\nimport MoveCardContext from \"../../../../../../contexts/MoveCardContext\";\r\n\r\nconst CommentModal = () => {\r\n    const {\r\n        moveCardData,\r\n        fromLaneTitle,\r\n        toLaneTitle,\r\n        errors,\r\n        setErrors,\r\n        clearError,\r\n        isSaving,\r\n        closeModal,\r\n        handleConfirmCardMoveAcrossLanes,\r\n    } = useContext(MoveCardContext);\r\n\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (!comment) {\r\n            errors.comment = \"Comment field is required.\";\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const getFormData = () => {\r\n        return {\r\n            stage_id: moveCardData.toLaneId,\r\n            comment,\r\n        };\r\n    }\r\n\r\n    const handleModalConfirm = async () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        const formData = getFormData();\r\n\r\n        await handleConfirmCardMoveAcrossLanes(formData);\r\n\r\n        resetModalData();\r\n        closeModal();\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n        resetModalData();\r\n        closeModal();\r\n    };\r\n\r\n    const inputComment = (e) => {\r\n        const value = e.target.value;\r\n\r\n        setComment(value);\r\n\r\n        if (value) {\r\n            clearError([\"comment\"]);\r\n        }\r\n    };\r\n\r\n    const resetModalData = () => {\r\n        setComment(\"\");\r\n        setErrors({});\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={moveCardData}\r\n            className=\"custom-modal\"\r\n            backdrop=\"true\"\r\n            onHide={handleModalCancel}\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <div>Сhange inquiry stage:</div>\r\n                <div className=\"name\">\r\n                    {utils.getInquirableFullname(\r\n                        moveCardData.cardDetails.inquirable,\r\n                    )}\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    <div className=\"d-flex align-items-center gap-2 fs-16\">\r\n                        <div>\r\n                            From:{\" \"}\r\n                            <span className=\"stage\">\"{fromLaneTitle}\"</span>\r\n                        </div>\r\n                        <img src={ChangeStageIcon} alt=\"change-stage-icon\" />\r\n                        <div>\r\n                            To: <span className=\"stage\">\"{toLaneTitle}\"</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"custom-form-group mt-4\">\r\n                        <label>\r\n                            Comment <span className={\"text-danger\"}>*</span>\r\n                        </label>\r\n                        <input\r\n                            placeholder=\"Add your comment...\"\r\n                            className={classNames(\r\n                                \"form-control\",\r\n                                errors.comment && \"is-invalid\",\r\n                            )}\r\n                            style={{ backgroundColor: \"#fcfcfc\" }}\r\n                            autoFocus\r\n                            value={comment}\r\n                            onChange={inputComment}\r\n                        />\r\n                        <div className=\"invalid-feedback\">{errors.comment}</div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        {isSaving ? (\r\n                            <div\r\n                                className=\"text-primary spinner-border spinner-border-md\"\r\n                                role=\"status\"></div>\r\n                        ) : (\r\n                            <div className=\"d-flex align-items-center justify-content-end gap-2\">\r\n                                <button\r\n                                    className=\"btn btn-large btn-outline-primary\"\r\n                                    onClick={handleModalCancel}>\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn btn-large btn-primary\"\r\n                                    onClick={handleModalConfirm}>\r\n                                    Confirm\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CommentModal;\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nexport const datepickerTheme = createTheme({\r\n    components: {\r\n        MuiInputBase: {\r\n            styleOverrides: {\r\n                root: {\r\n                    height: \"44px\",\r\n                    backgroundColor: \"rgb(247, 249, 252)\",\r\n                    fontSize: \"14px\",\r\n                },\r\n            },\r\n        },\r\n        MuiOutlinedInput: {\r\n            styleOverrides: {\r\n                root: ({ ownerState }) => ({\r\n                    ...(ownerState.focused && {\r\n                        boxShadow: \"0 0 0 0.25rem rgba(45, 133, 201, 0.25)\",\r\n                    }),\r\n                }),\r\n                notchedOutline: ({ ownerState }) => ({\r\n                    border: \"1px solid #ced4da !important\",\r\n                }),\r\n            },\r\n        },\r\n    },\r\n});\r\n","import classNames from \"classnames\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport PhoneInput from \"../../../../../../components/Inputs/PhoneInput\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { TextField, ThemeProvider } from \"@mui/material\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport styles from \"./index.module.scss\";\r\nimport MoveCardContext from \"../../../../../../contexts/MoveCardContext\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport ChangeStageIcon from \"../../../../../../assets/icons/change-stage.svg\";\r\nimport * as utils from \"../../../../../../utilities/newPatientsCrmUtils\";\r\nimport { datepickerTheme } from \"./date-picker-theme\";\r\nimport dayjs from \"dayjs\";\r\nimport _ from \"lodash\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DEFAULT_CANCELLATION_FEE } from \"../../../../../../constants\";\r\n\r\nconst PAYMENT_FOR_SERVICE_FORM_NAME = \"payment_for_service\";\r\nconst CONFIDENTIAL_INFORMATION_FORM_NAME = \"confidential_information\";\r\n\r\nconst initialForms = [\r\n    {\r\n        name: \"new_patient\",\r\n        title: \"Patient Information / Informed Consent / Privacy Notice\",\r\n        metadata: {},\r\n    },\r\n    {\r\n        name: PAYMENT_FOR_SERVICE_FORM_NAME,\r\n        title: \"Payment for Service and Fee Arrangements\",\r\n        metadata: {\r\n            co_pay: 0,\r\n            payment_for_session_not_converted: 0,\r\n            self_pay: 0,\r\n            charge_for_cancellation: 0,\r\n            other_charges_price: 0,\r\n            other_charges: \"\",\r\n        },\r\n    },\r\n    {\r\n        name: CONFIDENTIAL_INFORMATION_FORM_NAME,\r\n        title: \"Authorization to Release Confidential Information\",\r\n        metadata: {\r\n            exchange_with: [],\r\n        },\r\n    },\r\n    {\r\n        name: \"telehealth\",\r\n        title: \"Telehealth Consent Form\",\r\n        metadata: {},\r\n    },\r\n    {\r\n        name: \"supporting_documents\",\r\n        title: \"Supporting Documents\",\r\n        metadata: {\r\n            documents: [\"Insurance\", \"Driver's License\"],\r\n        },\r\n    },\r\n    {\r\n        name: \"credit_card_on_file\",\r\n        title: \"Add a Credit Card on File \",\r\n        metadata: {},\r\n    },\r\n];\r\n\r\nconst initialOnboardingFormData = {\r\n    date: \"\",\r\n    time: \"\",\r\n    phone: \"\",\r\n};\r\n\r\nconst MoveToAppointmentScheduledStageModal = () => {\r\n    const {\r\n        moveCardData,\r\n        fromLaneTitle,\r\n        toLaneTitle,\r\n        errors,\r\n        setErrors,\r\n        clearError,\r\n        isSaving,\r\n        closeModal,\r\n        handleConfirmCardMoveAcrossLanes,\r\n    } = useContext(MoveCardContext);\r\n\r\n    const [forms, setForms] = useState(initialForms);\r\n    const [onboardingFormData, setOnboardingFormData] = useState(\r\n        initialOnboardingFormData,\r\n    );\r\n    const [allFormsCheckbox, setAllFormsCheckbox] = useState(false);\r\n    const [requireCreditCardCheckbox, setRequireCreditCardCheckbox] =\r\n        useState(false);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [sendViaEmail, setSendViaEmail] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [sendViaSms, setSendViaSms] = useState(false);\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [exchangeWithName, setExchangeWithName] = useState(\"\");\r\n    const [openTimepicker, setOpenTimepicker] = useState(false);\r\n\r\n    const handleAllFormsCheckboxChange = (e) => {\r\n        const value = e.target.checked;\r\n\r\n        if (!value) {\r\n            setRequireCreditCardCheckbox(false);\r\n            setSendViaEmail(false);\r\n            setSendViaSms(false);\r\n\r\n            clearError([\"email\", \"phone\", \"exchange_with_name\", \"send_via\", \"other_charges\"]);\r\n        }\r\n\r\n        setAllFormsCheckbox(value);\r\n    };\r\n\r\n    const handleSendViaEmailCheckboxChange = (e) => {\r\n        const value = e.target.checked;\r\n\r\n        if (!value) {\r\n            clearError([\"email\"]);\r\n        }\r\n\r\n        clearError([\"send_via\"]);\r\n\r\n        setSendViaEmail(value);\r\n    };\r\n\r\n    const isValidEmail = (email) => {\r\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n        return emailRegex.test(email);\r\n    };\r\n\r\n    const handleInputEmail = (e) => {\r\n        const value = e.target.value.trim();\r\n\r\n        if (isValidEmail(value)) {\r\n            clearError([\"email\"]);\r\n        }\r\n\r\n        setEmail(value);\r\n    };\r\n\r\n    const handleSendViaSmsCheckboxChange = (e) => {\r\n        const value = e.target.checked;\r\n\r\n        if (!value) {\r\n            let newErrors = _.cloneDeep(errors);\r\n            delete newErrors.phone;\r\n            setErrors(newErrors);\r\n        }\r\n\r\n        clearError([\"send_via\"]);\r\n\r\n        setSendViaSms(value);\r\n    };\r\n\r\n    const isValidPhoneNumber = (phone) => {\r\n        return phone.length === 10;\r\n    };\r\n\r\n    const handleInputPhone = (value) => {\r\n        const formattedValue = value.replace(/\\D+/g, '');\r\n\r\n        if (isValidPhoneNumber(formattedValue)) {\r\n            clearError([\"phone\"]);\r\n        }\r\n\r\n        setPhone(formattedValue);\r\n    };\r\n\r\n    const handleInputOnboardingPhone = (value) => {\r\n        const formattedValue = value.replace(/\\D+/g, '');\r\n\r\n        if (isValidPhoneNumber(formattedValue)) {\r\n            clearError([\"onboarding_phone\"]);\r\n        }\r\n\r\n        setOnboardingFormData({ ...onboardingFormData, phone: formattedValue });\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (sendViaEmail && !isValidEmail(email)) {\r\n            errors.email = \"Please enter a valid email.\";\r\n        }\r\n\r\n        if (sendViaSms && !isValidPhoneNumber(phone)) {\r\n            errors.phone = \"Please enter a valid number.\";\r\n        }\r\n\r\n        if (allFormsCheckbox) {\r\n            if (!sendViaEmail && !sendViaSms) {\r\n                errors.send_via = \"Please select a form submission method.\";\r\n            }\r\n\r\n            if (\r\n                confidentialInformationForm.metadata.exchange_with.length === 0\r\n            ) {\r\n                errors.exchange_with_name =\r\n                    \"Please add at least one name to provide form access.\";\r\n            }\r\n\r\n            if (\r\n                paymentForServiceForm.metadata.other_charges_price > 0 &&\r\n                !paymentForServiceForm.metadata.other_charges\r\n            ) {\r\n                errors.other_charges = \"Please fill out this field.\";\r\n            }\r\n        }\r\n\r\n        if (\r\n            onboardingFormData.phone &&\r\n            !isValidPhoneNumber(onboardingFormData.phone)\r\n        ) {\r\n            errors.onboarding_phone = \"Please enter a valid number.\";\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const getFormData = () => {\r\n        const payload = {\r\n            stage_id: moveCardData.toLaneId,\r\n            onboarding_data: onboardingFormData,\r\n            send_via_email: sendViaEmail,\r\n            send_via_sms: sendViaSms,\r\n            phone,\r\n            email,\r\n            comment,\r\n        };\r\n\r\n        if (allFormsCheckbox) {\r\n            payload.forms = forms;\r\n\r\n            if (!requireCreditCardCheckbox) {\r\n                payload.forms = payload.forms.filter(\r\n                    (form) => form.name !== \"credit_card_on_file\",\r\n                );\r\n            }\r\n        }\r\n\r\n        return payload;\r\n    };\r\n\r\n    const handleModalConfirm = async () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        const formData = getFormData();\r\n\r\n        await handleConfirmCardMoveAcrossLanes(formData);\r\n\r\n        resetModalData();\r\n        closeModal();\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n        resetModalData();\r\n        closeModal();\r\n    };\r\n\r\n    const inputComment = (e) => {\r\n        const value = e.target.value;\r\n\r\n        setComment(value);\r\n\r\n        if (value) {\r\n            clearError([\"comment\"]);\r\n        }\r\n    };\r\n\r\n    const resetModalData = () => {\r\n        setForms(initialForms);\r\n        setOnboardingFormData(onboardingFormData);\r\n        setAllFormsCheckbox(false);\r\n        setRequireCreditCardCheckbox(false);\r\n        setComment(\"\");\r\n        setSendViaEmail(false);\r\n        setEmail(\"\");\r\n        setSendViaSms(false);\r\n        setPhone(\"\");\r\n        setErrors({});\r\n    };\r\n\r\n    const paymentForServiceForm = forms.find(\r\n        (form) => form.name === PAYMENT_FOR_SERVICE_FORM_NAME,\r\n    );\r\n\r\n    const confidentialInformationForm = forms.find(\r\n        (form) => form.name === CONFIDENTIAL_INFORMATION_FORM_NAME,\r\n    );\r\n\r\n    const changePaymentFormServiceMetadata = (key, value) => {\r\n        const updatedForms = forms.map((form) => {\r\n            if (form.name === PAYMENT_FOR_SERVICE_FORM_NAME) {\r\n                const metadata = { ...form.metadata, [key]: value };\r\n\r\n                return { ...form, metadata };\r\n            }\r\n\r\n            return form;\r\n        });\r\n\r\n        const clearErrorsArray = [key];\r\n\r\n        if (key === \"other_charges_price\" && Number(value) === 0) {\r\n            clearErrorsArray.push(\"other_charges\");\r\n        }\r\n\r\n        clearError(clearErrorsArray);\r\n\r\n        setForms(updatedForms);\r\n    };\r\n\r\n    const batchChangePaymentFormServiceMetadata = (values, initialForms = null) => {\r\n        if (!initialForms) {\r\n            initialForms = forms;\r\n        }\r\n\r\n        const updatedForms = initialForms.map((form) => {\r\n            if (form.name === PAYMENT_FOR_SERVICE_FORM_NAME) {\r\n                const metadata = { ...form.metadata, ...values };\r\n\r\n                return { ...form, metadata };\r\n            }\r\n\r\n            return form;\r\n        });\r\n\r\n        const clearErrorsArray = [];\r\n\r\n        for (let [key, value] of Object.entries(values)) {\r\n            clearErrorsArray.push(key);\r\n            if (key === \"other_charges_price\" && Number(value) === 0) {\r\n                clearErrorsArray.push(\"other_charges\");\r\n            }\r\n        }\r\n\r\n        clearError(clearErrorsArray);\r\n\r\n        setForms(updatedForms);\r\n    };\r\n\r\n    const handleInputExchangeWithName = (e) => {\r\n        const value = e.target.value;\r\n        setExchangeWithName(value);\r\n\r\n        if (value) {\r\n            clearError([\"exchange_with_name\"]);\r\n        }\r\n    };\r\n\r\n    const addExchangeWithValue = () => {\r\n        const updatedForms = forms.map((form) => {\r\n            if (form.name === CONFIDENTIAL_INFORMATION_FORM_NAME) {\r\n                const exchangeWith = form.metadata.exchange_with;\r\n\r\n                const metadata = {\r\n                    ...form.metadata,\r\n                    exchange_with: [...exchangeWith, exchangeWithName],\r\n                };\r\n\r\n                return { ...form, metadata };\r\n            }\r\n\r\n            return form;\r\n        });\r\n\r\n        setExchangeWithName(\"\");\r\n\r\n        setForms(updatedForms);\r\n        clearError([\"exchange_with_name\"]);\r\n    };\r\n\r\n    const removeEchangeWithValue = (value) => {\r\n        const updatedForms = forms.map((form) => {\r\n            if (form.name === CONFIDENTIAL_INFORMATION_FORM_NAME) {\r\n                const exchangeWith = form.metadata.exchange_with.filter(\r\n                    (el) => el !== value,\r\n                );\r\n\r\n                const metadata = {\r\n                    ...form.metadata,\r\n                    exchange_with: exchangeWith,\r\n                };\r\n\r\n                return { ...form, metadata };\r\n            }\r\n\r\n            return form;\r\n        });\r\n\r\n        setExchangeWithName(\"\");\r\n\r\n        setForms(updatedForms);\r\n    };\r\n\r\n    const initExchangeWithInForms = (primaryInsurance) => {\r\n        const updatedForms = forms.map((form) => {\r\n            if (form.name === CONFIDENTIAL_INFORMATION_FORM_NAME) {\r\n                const metadata = {\r\n                    ...form.metadata,\r\n                    exchange_with: [ primaryInsurance ],\r\n                };\r\n\r\n                return { ...form, metadata };\r\n            }\r\n            return form;\r\n        });\r\n\r\n        setForms(updatedForms);\r\n\r\n        return updatedForms;\r\n    }\r\n\r\n    const initPatientData = () => {\r\n        const { email, cell_phone, home_phone, work_phone, primary_insurance, is_payment_forbidden, visit_copay, is_self_pay, self_pay, insurance_pay } = moveCardData.cardDetails.inquirable;\r\n        const phone = cell_phone || home_phone || work_phone;\r\n\r\n        setEmail(email);\r\n        setPhone(phone);\r\n        setOnboardingFormData({ ...onboardingFormData, phone });\r\n\r\n        let initialForms = forms;\r\n        if (primary_insurance) {\r\n            initialForms = initExchangeWithInForms(primary_insurance);\r\n        }\r\n\r\n        if (!is_payment_forbidden) {\r\n            batchChangePaymentFormServiceMetadata({\r\n                \"co_pay\": is_self_pay ? 0 : visit_copay,\r\n                \"payment_for_session_not_converted\": is_self_pay ? 0 : insurance_pay,\r\n                \"self_pay\": is_self_pay ? self_pay : 0,\r\n                \"charge_for_cancellation\": DEFAULT_CANCELLATION_FEE\r\n            }, initialForms);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (moveCardData) {\r\n            initPatientData();\r\n        }\r\n    }, [moveCardData])\r\n\r\n    let coPay = \"-\";\r\n    let deductible = \"-\";\r\n    let message = \"-\";\r\n\r\n    const patientAlert = moveCardData.cardDetails.inquirable.alert;\r\n    if (patientAlert) {\r\n        coPay = `$${patientAlert.co_pay}`;\r\n        deductible = `$${patientAlert.deductible}`;\r\n        message = patientAlert.message;\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={moveCardData}\r\n            className=\"custom-modal\"\r\n            backdrop=\"true\"\r\n            onHide={handleModalCancel}\r\n            centered>\r\n            <Modal.Header closeButton>\r\n                <div>Сhange inquiry stage:</div>\r\n                <div className=\"name\">\r\n                    {utils.getInquirableFullname(\r\n                        moveCardData.cardDetails.inquirable,\r\n                    )}\r\n                </div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    <div className=\"d-flex align-items-center gap-2 fs-16\">\r\n                        <div>\r\n                            From:{\" \"}\r\n                            <span className=\"stage\">\"{fromLaneTitle}\"</span>\r\n                        </div>\r\n                        <img src={ChangeStageIcon} alt=\"change-stage-icon\" />\r\n                        <div>\r\n                            To: <span className=\"stage\">\"{toLaneTitle}\"</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                checked={allFormsCheckbox}\r\n                                onChange={handleAllFormsCheckboxChange}\r\n                                id=\"allFormsCheckbox\"\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"allFormsCheckbox\">\r\n                                All forms\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"form-check\">\r\n                            <input\r\n                                className=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                checked={requireCreditCardCheckbox}\r\n                                disabled={!allFormsCheckbox}\r\n                                onChange={(e) =>\r\n                                    setRequireCreditCardCheckbox(\r\n                                        e.target.checked,\r\n                                    )\r\n                                }\r\n                                id=\"requireCreditCardCheckbox\"\r\n                            />\r\n                            <label\r\n                                className=\"form-check-label\"\r\n                                htmlFor=\"requireCreditCardCheckbox\">\r\n                                Require credit card\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    {allFormsCheckbox && (\r\n                        <div>\r\n                            <div\r\n                                className=\"mt-2 mb-2\"\r\n                                style={{ fontSize: \"16px\" }}>\r\n                                <div className=\"d-flex gap-1\">\r\n                                    <div className=\"fw-bold\">Co-pay:</div>\r\n                                    <div>{coPay}</div>\r\n                                </div>\r\n                                <div className=\"d-flex gap-1\">\r\n                                    <div className=\"fw-bold\">Deductible:</div>\r\n                                    <div>{deductible}</div>\r\n                                </div>\r\n                                <div className=\"d-flex gap-1\">\r\n                                    <div className=\"fw-bold\">Message:</div>\r\n                                    <div>{message}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-column gap-2\">\r\n                                <div className=\"form-group d-flex align-items-center\">\r\n                                    <label\r\n                                        htmlFor=\"coPay\"\r\n                                        className={classNames(\r\n                                            \"control-label\",\r\n                                            styles.formLabel,\r\n                                        )}>\r\n                                        Co-pay and/or co-insurance for session\r\n                                    </label>\r\n                                    <input\r\n                                        className={classNames(\r\n                                            \"form-control\",\r\n                                            styles.formInput,\r\n                                        )}\r\n                                        value={\r\n                                            paymentForServiceForm.metadata\r\n                                                .co_pay\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            changePaymentFormServiceMetadata(\r\n                                                \"co_pay\",\r\n                                                e.target.value,\r\n                                            )\r\n                                        }\r\n                                        type=\"number\"\r\n                                        id=\"coPay\"\r\n                                        disabled\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group d-flex align-items-center\">\r\n                                    <label\r\n                                        htmlFor=\"forSession\"\r\n                                        className={classNames(\r\n                                            \"control-label\",\r\n                                            styles.formLabel,\r\n                                        )}>\r\n                                        Payment for session not covered due to\r\n                                        deductible\r\n                                    </label>\r\n                                    <input\r\n                                        className={classNames(\r\n                                            \"form-control\",\r\n                                            styles.formInput,\r\n                                        )}\r\n                                        type=\"number\"\r\n                                        value={\r\n                                            paymentForServiceForm.metadata\r\n                                                .payment_for_session_not_converted\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            changePaymentFormServiceMetadata(\r\n                                                \"payment_for_session_not_converted\",\r\n                                                e.target.value,\r\n                                            )\r\n                                        }\r\n                                        id=\"forSession\"\r\n                                        disabled\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group d-flex align-items-center\">\r\n                                    <label\r\n                                        htmlFor=\"selfPay\"\r\n                                        className={classNames(\r\n                                            \"control-label\",\r\n                                            styles.formLabel,\r\n                                        )}>\r\n                                        Self-pay for session when paid\r\n                                        out-of-pocket\r\n                                    </label>\r\n                                    <input\r\n                                        className={classNames(\r\n                                            \"form-control\",\r\n                                            styles.formInput,\r\n                                        )}\r\n                                        type=\"number\"\r\n                                        value={\r\n                                            paymentForServiceForm.metadata\r\n                                                .self_pay\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            changePaymentFormServiceMetadata(\r\n                                                \"self_pay\",\r\n                                                e.target.value,\r\n                                            )\r\n                                        }\r\n                                        id=\"selfPay\"\r\n                                        disabled\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group d-flex align-items-center\">\r\n                                    <label\r\n                                        htmlFor=\"chargeCancellation\"\r\n                                        className={classNames(\r\n                                            \"control-label\",\r\n                                            styles.formLabel,\r\n                                        )}>\r\n                                        Charge for cancellation without 24\r\n                                        hours’ notice\r\n                                    </label>\r\n                                    <input\r\n                                        className={classNames(\r\n                                            \"form-control\",\r\n                                            styles.formInput,\r\n                                        )}\r\n                                        type=\"number\"\r\n                                        value={\r\n                                            paymentForServiceForm.metadata\r\n                                                .charge_for_cancellation\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            changePaymentFormServiceMetadata(\r\n                                                \"charge_for_cancellation\",\r\n                                                e.target.value,\r\n                                            )\r\n                                        }\r\n                                        id=\"chargeCancellation\"\r\n                                        disabled\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group d-flex align-items-center\">\r\n                                    <label\r\n                                        htmlFor=\"otherCharges\"\r\n                                        className={classNames(\r\n                                            \"control-label\",\r\n                                            styles.formLabel,\r\n                                        )}>\r\n                                        Other charges (price)\r\n                                    </label>\r\n                                    <input\r\n                                        className={classNames(\r\n                                            \"form-control\",\r\n                                            styles.formInput,\r\n                                        )}\r\n                                        type=\"number\"\r\n                                        value={\r\n                                            paymentForServiceForm.metadata\r\n                                                .other_charges_price\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            changePaymentFormServiceMetadata(\r\n                                                \"other_charges_price\",\r\n                                                e.target.value,\r\n                                            )\r\n                                        }\r\n                                        id=\"otherCharges\"\r\n                                        disabled={moveCardData.cardDetails.inquirable.is_payment_forbidden}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group d-flex align-items-center\">\r\n                                    <label\r\n                                        htmlFor=\"otherPrice\"\r\n                                        className={classNames(\r\n                                            \"control-label\",\r\n                                            styles.formLabel,\r\n                                        )}>\r\n                                        Other charges (specify)\r\n                                    </label>\r\n                                    <div className=\"d-flex flex-column\">\r\n                                    <input\r\n                                        className={classNames(\"form-control\", errors.other_charges && \"is-invalid\")}\r\n                                        style={{ width: \"270px\" }}\r\n                                        value={\r\n                                            paymentForServiceForm.metadata\r\n                                                .other_charges\r\n                                        }\r\n                                        disabled={\r\n                                            Number(\r\n                                                paymentForServiceForm.metadata\r\n                                                    .other_charges_price,\r\n                                            ) <= 0 || moveCardData.cardDetails.inquirable.is_payment_forbidden\r\n                                        }\r\n                                        onChange={(e) =>\r\n                                            changePaymentFormServiceMetadata(\r\n                                                \"other_charges\",\r\n                                                e.target.value,\r\n                                            )\r\n                                        }\r\n                                        id=\"otherPrice\"\r\n                                    />\r\n                                    <div className=\"invalid-feedback\">\r\n                                            {errors.other_charges}\r\n                                        </div>\r\n                                        </div>\r\n                                </div>\r\n                                <div className=\"form-group d-flex align-items-start\">\r\n                                    <label\r\n                                        htmlFor=\"otherPrice\"\r\n                                        className={classNames(\r\n                                            \"mt-1\",\r\n                                            \"control-label\",\r\n                                            styles.formLabel,\r\n                                        )}>\r\n                                        Authorization to Release Confidential\r\n                                        Information\r\n                                    </label>\r\n                                    <div\r\n                                        className=\"d-flex flex-column\"\r\n                                        style={{ width: \"270px\" }}>\r\n                                        <input\r\n                                            className={classNames(\r\n                                                \"form-control\",\r\n                                                errors.exchange_with_name &&\r\n                                                    \"is-invalid\",\r\n                                            )}\r\n                                            value={exchangeWithName}\r\n                                            placeholder=\"Add person name\"\r\n                                            onChange={\r\n                                                handleInputExchangeWithName\r\n                                            }\r\n                                            id=\"exchangeWithName\"\r\n                                        />\r\n                                        <div className=\"invalid-feedback\">\r\n                                            {errors.exchange_with_name}\r\n                                        </div>\r\n                                    </div>\r\n                                    {exchangeWithName && (\r\n                                        <button\r\n                                            className={classNames(\r\n                                                \"mt-1\",\r\n                                                styles.formListInputBtn,\r\n                                            )}\r\n                                            type=\"button\"\r\n                                            onClick={addExchangeWithValue}\r\n                                            disabled={!exchangeWithName}>\r\n                                            <FontAwesomeIcon\r\n                                                icon={faPlus}\r\n                                                color={\"#2F80ED\"}\r\n                                                size={\"xl\"}\r\n                                            />\r\n                                        </button>\r\n                                    )}\r\n                                </div>\r\n                                {confidentialInformationForm.metadata\r\n                                    .exchange_with.length > 0 && (\r\n                                    <ul className={styles.formTagList}>\r\n                                        {confidentialInformationForm.metadata.exchange_with.map(\r\n                                            (item) => (\r\n                                                <li\r\n                                                    className={\r\n                                                        styles.formTagListItem\r\n                                                    }\r\n                                                    key={item}>\r\n                                                    <div\r\n                                                        className={\r\n                                                            styles.formTag\r\n                                                        }>\r\n                                                        <span\r\n                                                            className={\r\n                                                                styles.formTagText\r\n                                                            }>\r\n                                                            {item}\r\n                                                        </span>\r\n                                                        <button\r\n                                                            type=\"button\"\r\n                                                            className={\r\n                                                                styles.formTagRemove\r\n                                                            }\r\n                                                            onClick={() =>\r\n                                                                removeEchangeWithValue(\r\n                                                                    item,\r\n                                                                )\r\n                                                            }>\r\n                                                            <FontAwesomeIcon\r\n                                                                icon={faXmark}\r\n                                                                color={\"#fff\"}\r\n                                                                size={\"lg\"}\r\n                                                            />\r\n                                                        </button>\r\n                                                    </div>\r\n                                                </li>\r\n                                            ),\r\n                                        )}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"d-flex flex-column gap-1 mt-4\">\r\n                                <div className=\"fw-bold\">\r\n                                    How to send the forms? To email or phone\r\n                                    number?\r\n                                </div>\r\n                                <div>\r\n                                    <input\r\n                                        hidden\r\n                                        className={classNames(\r\n                                            errors.send_via && \"is-invalid\",\r\n                                        )}\r\n                                    />\r\n                                    <div className=\"invalid-feedback\">\r\n                                        {errors.send_via}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column gap-1\">\r\n                                    <div>Send Forms Via Email</div>\r\n                                    <div className=\"d-flex gap-2\">\r\n                                        <div className=\"mt-2\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"checkbox\"\r\n                                                checked={sendViaEmail}\r\n                                                onChange={\r\n                                                    handleSendViaEmailCheckboxChange\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column w-100\">\r\n                                            <input\r\n                                                className={classNames(\r\n                                                    \"form-control\",\r\n                                                    errors.email &&\r\n                                                        \"is-invalid\",\r\n                                                )}\r\n                                                value={email}\r\n                                                disabled={!sendViaEmail}\r\n                                                onChange={handleInputEmail}\r\n                                                placeholder=\"Email\"\r\n                                            />\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.email}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"d-flex flex-column gap-1\">\r\n                                    <div>Send Forms Via SMS</div>\r\n                                    <div className=\"d-flex gap-2\">\r\n                                        <div className=\"mt-2\">\r\n                                            <input\r\n                                                className=\"form-check-input\"\r\n                                                type=\"checkbox\"\r\n                                                checked={sendViaSms}\r\n                                                onChange={\r\n                                                    handleSendViaSmsCheckboxChange\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column w-100\">\r\n                                            <PhoneInput\r\n                                                phone={phone}\r\n                                                setPhone={handleInputPhone}\r\n                                                placeholder=\"Phone number\"\r\n                                                disabled={!sendViaSms}\r\n                                                styles={{\r\n                                                    backgroundColor: \"#F7F9FC\",\r\n                                                }}\r\n                                                error={!!errors.phone}\r\n                                            />\r\n                                            <div className=\"invalid-feedback\">\r\n                                                {errors.phone}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"d-flex flex-column gap-2 mt-2\">\r\n                        <div className=\"fw-bold\">\r\n                            Choose onboarding date and time\r\n                        </div>\r\n                        <div className=\"d-flex gap-2\">\r\n                            <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                                <ThemeProvider theme={datepickerTheme}>\r\n                                    <DatePicker\r\n                                        open={openTimepicker}\r\n                                        onOpen={() => setOpenTimepicker(true)}\r\n                                        onClose={() => setOpenTimepicker(false)}\r\n                                        value={onboardingFormData.date}\r\n                                        onChange={(value) =>\r\n                                            setOnboardingFormData({\r\n                                                ...onboardingFormData,\r\n                                                date: dayjs(value).format(\r\n                                                    \"YYYY-MM-DD\",\r\n                                                ),\r\n                                            })\r\n                                        }\r\n                                        openTo={\"day\"}\r\n                                        minDate={dayjs().startOf(\"day\")}\r\n                                        maxDate={dayjs.unix(moveCardData.cardDetails.nextAppointment.time)}\r\n                                        slotProps={{\r\n                                            field: {\r\n                                                readOnly: true,\r\n                                                onClick: () => setOpenTimepicker(!openTimepicker)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                </ThemeProvider>\r\n                            </LocalizationProvider>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                value={onboardingFormData.time}\r\n                                onChange={(e) =>\r\n                                    setOnboardingFormData({\r\n                                        ...onboardingFormData,\r\n                                        time: e.target.value,\r\n                                    })\r\n                                }\r\n                                placeholder=\"Write time for the call\"\r\n                            />\r\n                        </div>\r\n                        <div>\r\n                            <PhoneInput\r\n                                phone={onboardingFormData.phone}\r\n                                setPhone={handleInputOnboardingPhone}\r\n                                placeholder=\"Phone number\"\r\n                                styles={{\r\n                                    backgroundColor: \"#F7F9FC\",\r\n                                }}\r\n                                error={!!errors.onboarding_phone}\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {errors.onboarding_phone}\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <input\r\n                                className={classNames(\r\n                                    \"form-control\",\r\n                                    errors.comment && \"is-invalid\",\r\n                                )}\r\n                                value={comment}\r\n                                onChange={inputComment}\r\n                                placeholder=\"Add your comment...\"\r\n                            />\r\n                            <div className=\"invalid-feedback\">\r\n                                {errors.comment}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        {isSaving ? (\r\n                            <div\r\n                                className=\"text-primary spinner-border spinner-border-md\"\r\n                                role=\"status\"></div>\r\n                        ) : (\r\n                            <div className=\"d-flex align-items-center justify-content-end gap-2\">\r\n                                <button\r\n                                    className=\"btn btn-large btn-outline-primary\"\r\n                                    onClick={handleModalCancel}>\r\n                                    Cancel\r\n                                </button>\r\n                                <button\r\n                                    className=\"btn btn-large btn-primary\"\r\n                                    onClick={handleModalConfirm}>\r\n                                    Confirm\r\n                                </button>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default MoveToAppointmentScheduledStageModal;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NotificationsContext from \"../../../../contexts/NotificationsContext\";\r\nimport { changeState } from \"../../../../api/pages/new-patients-dashboard-page\";\r\nimport * as NewPatientsDashboardReducer from \"../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport _ from \"lodash\";\r\nimport { APPOINTMENT_SCHEDULED_LANE_ID } from \"../../../../constants/new-patients-dashboard\";\r\nimport CommentModal from \"./components/CommentModal\";\r\nimport MoveCardContext from \"../../../../contexts/MoveCardContext\";\r\nimport MoveToAppointmentScheduledStageModal from \"./components/MoveToAppointmentScheduledStageModal\";\r\nimport { processCardData } from \"../../utils\";\r\n\r\nconst CardMoveAcrossLanesModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const newPatientsDashboard = useSelector(\r\n        (state) => state.newPatientsDashboard,\r\n    );\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const { moveCardData, lanes, eventBus } = newPatientsDashboard;\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [isSaving, setIsSaving] = useState(false);\r\n\r\n    const fromLaneTitle = moveCardData\r\n        ? lanes.filter((item) => item.id === moveCardData.fromLaneId)[0]\r\n              .titleText\r\n        : \"\";\r\n    const toLaneTitle = moveCardData\r\n        ? lanes.filter((item) => item.id === moveCardData.toLaneId)[0].titleText\r\n        : \"\";\r\n\r\n    const handleConfirmCardMoveAcrossLanes = async (payload) => {\r\n        try {\r\n            setIsSaving(true);\r\n\r\n            const res = await changeState({\r\n                id: moveCardData.cardId,\r\n                data: payload,\r\n            });\r\n\r\n            const updatedCardData = processCardData(res.data);\r\n\r\n            dispatch(\r\n                NewPatientsDashboardReducer.cardMoveAcrossLanesAC({\r\n                    data: { ...moveCardData, cardDetails: updatedCardData },\r\n                }),\r\n            );\r\n\r\n            eventBus.publish({\r\n                type: \"MOVE_CARD\",\r\n                fromLaneId: moveCardData.fromLaneId,\r\n                toLaneId: moveCardData.toLaneId,\r\n                cardId: moveCardData.cardId,\r\n                index: moveCardData.index,\r\n            });\r\n\r\n            eventBus.publish({\r\n                type: \"UPDATE_CARD\",\r\n                laneId: moveCardData.toLaneId,\r\n                card: updatedCardData,\r\n            });\r\n        } catch (error) {\r\n            if (error.response?.status === 422) {\r\n                const message = error.response.data.errors.stage_id\r\n                    ? error.response.data.errors.stage_id\r\n                    : error.response.data.message;\r\n\r\n                enqueueNotification(\"Error\", message);\r\n            } else {\r\n                throw error;\r\n            }\r\n        } finally {\r\n            setIsSaving(false);\r\n        }\r\n    };\r\n\r\n    const closeModal = () => {\r\n        dispatch(NewPatientsDashboardReducer.setMoveCardDataAC({ data: null }));\r\n    };\r\n\r\n    const clearError = (keys) => {\r\n        let newErrors = _.cloneDeep(errors);\r\n\r\n        keys.forEach((key) => {\r\n            delete newErrors[key];\r\n        });\r\n\r\n        setErrors(newErrors);\r\n    };\r\n\r\n    if (!moveCardData) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <MoveCardContext.Provider\r\n            value={{\r\n                moveCardData,\r\n                fromLaneTitle,\r\n                toLaneTitle,\r\n                errors,\r\n                setErrors,\r\n                clearError,\r\n                isSaving,\r\n                closeModal,\r\n                handleConfirmCardMoveAcrossLanes,\r\n            }}>\r\n            {moveCardData.toLaneId === APPOINTMENT_SCHEDULED_LANE_ID ? (\r\n                <MoveToAppointmentScheduledStageModal />\r\n            ) : (\r\n                <CommentModal />\r\n            )}\r\n        </MoveCardContext.Provider>\r\n    );\r\n};\r\nexport default CardMoveAcrossLanesModal;\r\n","import React from \"react\";\r\nimport styles from \"./index.module.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nconst CustomOption = ({ option, onSelect, level }) => {\r\n    const handleClick = () => {\r\n        if (option.options) {\r\n            return;\r\n        }\r\n        onSelect(option.value);\r\n    };\r\n\r\n    const optionStyle = {\r\n        paddingLeft: `${level * 7}px`,\r\n    };\r\n\r\n    const isGroupTitle = !!option.options;\r\n\r\n    return (\r\n        <div className={styles.optionComponent}>\r\n            <div\r\n                onClick={handleClick}\r\n                className={classNames(\r\n                    isGroupTitle ? styles.groupTitle : styles.option,\r\n                )}\r\n                style={optionStyle}>\r\n                {option.label}\r\n            </div>\r\n            {option.options && (\r\n                <div className=\"nested-options\">\r\n                    {option.options.map((childOption, index) => (\r\n                        <CustomOption\r\n                            key={index}\r\n                            option={childOption}\r\n                            onSelect={onSelect}\r\n                            level={level + 1}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomOption;\r\n","import React, { useRef, useState } from \"react\";\r\nimport CustomOption from \"../CustomOption\";\r\nimport styles from \"./index.module.scss\";\r\nimport classNames from \"classnames\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiMenuDown, mdiMenuUp } from \"@mdi/js\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\n\r\nconst CustomSelect = ({ options, selectedOption, onSelect }) => {\r\n    const optionsRef = useRef(null);\r\n\r\n    const [showOptions, setShowOptions] = useState(false);\r\n\r\n    useOnClickOutside(optionsRef, (e) => {\r\n        if (!optionsRef.current || !optionsRef.current.contains(e.target)) {\r\n            setShowOptions(false);\r\n        }\r\n    });\r\n\r\n    const toggleOptions = (e) => {\r\n        e.stopPropagation();\r\n        setShowOptions(!showOptions);\r\n    };\r\n\r\n    const handleOptionClick = (value) => {\r\n        setShowOptions(false);\r\n        onSelect(value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"position-relative\">\r\n            <div\r\n                className={classNames(\r\n                    styles.selectInput,\r\n                    showOptions && styles.isFocused,\r\n                )}\r\n                onClick={toggleOptions}>\r\n                <div>{selectedOption}</div>\r\n                <Icon\r\n                    className={styles.arrow}\r\n                    path={showOptions ? mdiMenuUp : mdiMenuDown}\r\n                    size={1}\r\n                />\r\n            </div>\r\n            {showOptions && (\r\n                <div ref={optionsRef} className={styles.options}>\r\n                    {options.map((option) => (\r\n                        <CustomOption\r\n                            key={option.id}\r\n                            option={option}\r\n                            onSelect={handleOptionClick}\r\n                            level={1}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomSelect;\r\n","import React, { useState } from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as NewPatientsDashboardApi from \"../../../../api/pages/new-patients-dashboard-page\";\r\nimport * as NewPatientsDashboardReducer from \"../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport CustomSelect from \"./components/CustomSelect\";\r\n\r\nconst FileTypeSelectorModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector((state) => state.app);\r\n\r\n    const { selectedCardData, fileTypeSelection, documentTypes } = useSelector(\r\n        (state) => state.newPatientsDashboard,\r\n    );\r\n\r\n    const [selectedTypeId, setSelectedTypeId] = useState(null);\r\n    const [visibleOnlyForAdmin, setVisibleOnlyForAdmin] = useState(false);\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const convertToFormat = (node) => {\r\n        const result = [];\r\n\r\n        const processNode = (currentNode) => {\r\n            const options = [];\r\n            for (const key in currentNode) {\r\n                if (currentNode.hasOwnProperty(key)) {\r\n                    const group = {\r\n                        label: currentNode[key].type,\r\n                        options: [],\r\n                    };\r\n                    if (currentNode[key].childs) {\r\n                        const nestedOptions = processNode(\r\n                            currentNode[key].childs,\r\n                        );\r\n                        if (nestedOptions.length > 0) {\r\n                            group.options = nestedOptions;\r\n                        }\r\n                    }\r\n                    if (group.options.length === 0) {\r\n                        options.push({\r\n                            value: currentNode[key].id,\r\n                            label: group.label,\r\n                        });\r\n                    } else {\r\n                        options.push(group);\r\n                    }\r\n                }\r\n            }\r\n            return options;\r\n        };\r\n\r\n        result.push(...processNode(node));\r\n        return result;\r\n    };\r\n\r\n    const formattedData = convertToFormat(documentTypes);\r\n\r\n    const findDocumentTypeById = (id, data) => {\r\n        let value = \"\";\r\n        for (const el of data) {\r\n            if (el.value === id) {\r\n                value = el.label;\r\n                break;\r\n            }\r\n\r\n            if (el.options) {\r\n                const foundOption = findDocumentTypeById(id, el.options);\r\n                if (foundOption) {\r\n                    value = foundOption.label || foundOption;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return value;\r\n    };\r\n\r\n    const selectedTypeValue = selectedTypeId\r\n        ? findDocumentTypeById(selectedTypeId, formattedData)\r\n        : \"\";\r\n\r\n    const deleteDocument = () => {\r\n        if (fileTypeSelection.patientIsCreated) {\r\n            return NewPatientsDashboardApi.deletePatientDocument({\r\n                id: fileTypeSelection.fileId,\r\n            });\r\n        }\r\n\r\n        return NewPatientsDashboardApi.deletePatientLeadDocument(\r\n            fileTypeSelection.fileId,\r\n        );\r\n    };\r\n\r\n    window.onbeforeunload = () => {\r\n        deleteDocument();\r\n    };\r\n\r\n    const resetState = () => {\r\n        setSelectedTypeId(null);\r\n        setVisibleOnlyForAdmin(false);\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        deleteDocument();\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setFileTypeSelectionAC({\r\n                data: {\r\n                    showModal: false,\r\n                    fileId: null,\r\n                    patientIsCreated: false,\r\n                },\r\n            }),\r\n        );\r\n        resetState();\r\n    };\r\n\r\n    const handleChangeType = () => {\r\n        setIsLoading(true);\r\n\r\n        const payload = {\r\n            document_id: fileTypeSelection.fileId,\r\n            document_type_id: selectedTypeId,\r\n            other_document_type: \"\",\r\n            visible_only_for_admin: visibleOnlyForAdmin,\r\n        };\r\n\r\n        const handleSuccessChangeType = (res) => {\r\n            const { original_document_name, document_type, document_uploader, created_at } =\r\n                res.data;\r\n\r\n            const comment = {\r\n                model: \"PatientDocument\",\r\n                full_admin_name: `${user.firstname} ${user.lastname}`,\r\n                document_type: document_type.type,\r\n                document_uploader: document_uploader,\r\n                created_at,\r\n                original_document_name,\r\n            };\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setCommentsInSelectedCardDataAC({\r\n                    data: [comment, ...selectedCardData.comments],\r\n                }),\r\n            );\r\n\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setFileTypeSelectionAC({\r\n                    data: {\r\n                        showModal: false,\r\n                        fileId: null,\r\n                        patientIsCreated: false,\r\n                    },\r\n                }),\r\n            );\r\n            resetState();\r\n        };\r\n\r\n        if (fileTypeSelection.patientIsCreated) {\r\n            NewPatientsDashboardApi.setPatientDocumentType(payload).then(\r\n                (res) => {\r\n                    handleSuccessChangeType(res);\r\n                },\r\n            );\r\n        } else {\r\n            NewPatientsDashboardApi.setPatientLeadDocumentType(payload).then(\r\n                (res) => {\r\n                    handleSuccessChangeType(res);\r\n                },\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleOnSelect = (value) => {\r\n        setSelectedTypeId(value);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={fileTypeSelection.showModal}\r\n            centered\r\n            onHide={closeModal}\r\n            className=\"custom-modal custom-modal-sm\"\r\n        >\r\n            <Modal.Header closeButton>\r\n                <h4 className='modal-title m-0'>File Type</h4>\r\n            </Modal.Header>\r\n\r\n            <Modal.Body className=\"container\">\r\n                {fileTypeSelection.fileId ? (\r\n                    <div className=\"d-flex flex-column align-items-end gap-3\">\r\n                        <div className=\"w-100\">\r\n                            <CustomSelect\r\n                                options={formattedData}\r\n                                selectedOption={selectedTypeValue}\r\n                                onSelect={handleOnSelect}\r\n                            />\r\n                        </div>\r\n                        <div className=\"w-100 form-group custom-form-group\">\r\n                            <div className=\"checkbox prompt-checkbox\">\r\n                                <label htmlFor=\"checkbox\" className='d-flex gap-2' style={{ width: 'fit-content' }}>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        id=\"checkbox\"\r\n                                        defaultChecked={visibleOnlyForAdmin}\r\n                                        onChange={(e) => setVisibleOnlyForAdmin(e.target.checked)}\r\n                                    />\r\n                                    <span>Visible Only For Administrator</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            {isLoading ? (\r\n                                <div\r\n                                    className=\"spinner-border text-primary\"\r\n                                    role=\"status\"></div>\r\n                            ) : (\r\n                                <button\r\n                                    onClick={handleChangeType}\r\n                                    className=\"btn btn-primary\"\r\n                                    disabled={!selectedTypeId}>\r\n                                    Ok\r\n                                </button>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"p-1 d-flex align-items-center justify-content-center\">\r\n                        <div\r\n                            className=\"spinner-border text-primary\"\r\n                            role=\"status\"></div>\r\n                    </div>\r\n                )}\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default FileTypeSelectorModal;\r\n","export default __webpack_public_path__ + \"static/media/search-icon.810019f4.svg\";","import React from \"react\";\r\nimport searchIcon from \"../../assets/icons/search-icon.svg\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst SearchInput = ({ value, onChange, placeholder, style }) => {\r\n    return (\r\n        <div className=\"position-relative d-flex align-items-center h-100\">\r\n            <img\r\n                src={searchIcon}\r\n                alt=\"search-icon\"\r\n                className={styles.searchIcon}\r\n            />\r\n            <input\r\n                value={value}\r\n                onChange={onChange}\r\n                className={classNames(styles.searchInput, \"form-control\")}\r\n                style={style}\r\n                placeholder={placeholder}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchInput;\r\n","export default __webpack_public_path__ + \"static/media/stethoscope.e603a773.svg\";","export default __webpack_public_path__ + \"static/media/bin-red.c8e4693b.svg\";","export default __webpack_public_path__ + \"static/media/forms-not-send.80f19fa7.svg\";","export default __webpack_public_path__ + \"static/media/forms-send.3f59a22c.svg\";","export default __webpack_public_path__ + \"static/media/forms-signed.4f571609.svg\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport FormsNotSendIcon from \"../../../../assets/icons/forms-not-send.svg\";\r\nimport FormsSendIcon from \"../../../../assets/icons/forms-send.svg\";\r\nimport FormsSignedIcon from \"../../../../assets/icons/forms-signed.svg\";\r\nimport styles from \"./index.module.scss\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst FormStatusIndicator = ({ inquirable }) => {\r\n    const { last_document_request, last_document } = inquirable;\r\n\r\n    const FORMS_NOT_SEND = \"Forms not send\";\r\n    const FORMS_SEND = \"Forms send\";\r\n    const FORMS_SIGNED = \"Forms signed\";\r\n\r\n    const getFormStatus = () => {\r\n        if (!last_document_request) {\r\n            return FORMS_NOT_SEND;\r\n        } else if (!last_document) {\r\n            return FORMS_SEND;\r\n        } else {\r\n            return FORMS_SIGNED;\r\n        }\r\n    };\r\n\r\n    const formStatus = getFormStatus();\r\n\r\n    const getStatusData = () => {\r\n        if (formStatus === FORMS_NOT_SEND) {\r\n            return {\r\n                className: styles[\"notSend\"],\r\n                icon: FormsNotSendIcon,\r\n                tooltipText: \"Forms not sent\",\r\n            };\r\n        }\r\n        if (formStatus === FORMS_SEND) {\r\n            return {\r\n                className: styles[\"send\"],\r\n                icon: FormsSendIcon,\r\n                tooltipText: `Forms sent at ${moment(\r\n                    inquirable.last_document_request.created_at,\r\n                ).format(\"MM/DD/YY\")}`,\r\n            };\r\n        }\r\n        if (formStatus === FORMS_SIGNED) {\r\n            return {\r\n                className: styles[\"signed\"],\r\n                icon: FormsSignedIcon,\r\n                tooltipText: `Forms signed at ${moment(\r\n                    inquirable.last_document.created_at,\r\n                ).format(\"MM/DD/YY\")}`,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const statusData = getStatusData();\r\n\r\n    if (!statusData) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={<Tooltip>{statusData.tooltipText}</Tooltip>}>\r\n            <div className={classNames(styles.status, statusData.className)}>\r\n                <img src={statusData.icon} alt=\"status-icon\" />\r\n            </div>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport default FormStatusIndicator;\r\n","import React from \"react\";\r\nimport moment from \"../../../../utilities/moment-config\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst DurationIndicator = ({ createdAt, stageChangedAt }) => {\r\n    const formattedDate = moment(createdAt).format(\"MM/DD/YY\");\r\n\r\n    const getDaysOnTheStage = () => {\r\n        if (!stageChangedAt) {\r\n            const currentDateTime = moment();\r\n            const duration = moment.duration(\r\n                currentDateTime.diff(moment(createdAt)),\r\n            );\r\n            return duration.days();\r\n        }\r\n\r\n        const currentDateTime = moment();\r\n        const duration = moment.duration(\r\n            currentDateTime.diff(moment(stageChangedAt)),\r\n        );\r\n        return duration.days();\r\n    };\r\n\r\n    const daysOnTheStage = getDaysOnTheStage();\r\n\r\n    const getDaysOnTheStageTooltipText = () => {\r\n        const pluralize = (count, singular, plural) =>\r\n            count === 1 ? singular : plural;\r\n        const daysText = pluralize(daysOnTheStage, \"day\", \"days\");\r\n        return `${daysOnTheStage} ${daysText} on the stage`;\r\n    };\r\n\r\n    const daysOnTheStageTooltipText = getDaysOnTheStageTooltipText();\r\n\r\n    if (!daysOnTheStage) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={\r\n                <Tooltip>\r\n                    <div>{daysOnTheStageTooltipText}</div>\r\n                    <div>Created at: {formattedDate}</div>\r\n                </Tooltip>\r\n            }>\r\n            <div className={styles.durationIndicator}>{daysOnTheStage}d</div>\r\n        </OverlayTrigger>\r\n    );\r\n};\r\n\r\nexport default DurationIndicator;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport moment from \"../../../../utilities/moment-config\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport StethoscopeIcon from \"../../../../assets/icons/stethoscope.svg\";\r\nimport BinIcon from \"../../../../assets/icons/bin-red.svg\";\r\nimport ThreeDotsMenu from \"../ThreeDotsMenu\";\r\nimport SourceTag from \"../SourceTag\";\r\nimport FormStatusIndicator from \"../FormStatusIndicator\";\r\nimport { ACTIVE_APPOINTMENT_TYPE, RESCHEDULED_APPOINTMENT_TYPE } from \"../../../../constants\";\r\nimport * as NewPatientsDashboardReducer from \"../../../../store/reducers/newPatientsDashboard.reducer\";\r\nimport styles from \"./index.module.scss\";\r\nimport DurationIndicator from \"../DurationIndicator\";\r\nimport { getInquirableFullname } from \"../../../../utilities/newPatientsCrmUtils\";\r\nimport { INBOX_LANE_ID, IN_PROGRESS_LANE_ID } from \"../../../../constants/new-patients-dashboard\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiFileDocumentCheck, mdiStar } from \"@mdi/js\";\r\nimport { getDisplayedProviderForInquiry } from \"../../utils\";\r\n\r\nconst PatientCard = ({\r\n    id,\r\n    stageId,\r\n    inquirable,\r\n    source,\r\n    registrationMethod,\r\n    nextAppointment,\r\n    rescheduledAppointment,\r\n    style,\r\n    createdAt,\r\n    stageChangedAt,\r\n    isPatientCreated,\r\n    isArchived,\r\n    initialSurveyComplete,\r\n    secondSurveyComplete,\r\n    onboardingDate,\r\n    onboardingTime,\r\n    onboardingPhone,\r\n    onboardingCompleteComment,\r\n}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [\r\n        isNextAppointmentStatusTooltipVisible,\r\n        setNextAppointmentStatusTooltipVisible,\r\n    ] = useState(false);\r\n\r\n    const handleNextAppointmentStatusMouseEnter = () => {\r\n        setNextAppointmentStatusTooltipVisible(true);\r\n    };\r\n\r\n    const handleNextAppointmentStatusMouseLeave = () => {\r\n        setNextAppointmentStatusTooltipVisible(false);\r\n    };\r\n\r\n    const showFormStatusIndicator =\r\n        stageId !== INBOX_LANE_ID && stageId !== IN_PROGRESS_LANE_ID;\r\n\r\n    const threeDotsText = (\r\n        <div className=\"d-flex gap-1 text-danger\">\r\n            <img src={BinIcon} alt=\"bin-icon\" />\r\n            <div>Archive inquiry</div>\r\n        </div>\r\n    );\r\n\r\n    const generatePatientName = (inquirable) => {\r\n        return getInquirableFullname(inquirable).trim();\r\n    };\r\n\r\n    const patientName = generatePatientName(inquirable);\r\n\r\n    const formatDateToYears = (dateString) => {\r\n        const dateObject = moment(dateString);\r\n        const yearsDifference = moment().diff(dateObject, \"years\");\r\n        return `${yearsDifference} years`;\r\n    };\r\n\r\n    const age = formatDateToYears(inquirable.date_of_birth);\r\n    const status = inquirable.status ? inquirable.status.status : \"Not created\";\r\n    const statusColor = inquirable.status\r\n        ? `#${inquirable.status.hex_color}`\r\n        : \"#000000\";\r\n\r\n    const getNextAppointmentType = () => {\r\n        if (!nextAppointment) {\r\n            return null;\r\n        }\r\n\r\n        return rescheduledAppointment\r\n            ? RESCHEDULED_APPOINTMENT_TYPE\r\n            : ACTIVE_APPOINTMENT_TYPE;\r\n    };\r\n\r\n    const nextAppointmentType = getNextAppointmentType();\r\n\r\n    const getNextAppointmentTooltipHtml = () => {\r\n        if (!nextAppointment) {\r\n            return { __html: \"\" };\r\n        }\r\n\r\n        let html = \"\";\r\n        const nextAppointmentDateTime = `${nextAppointment.date_of_service.date} ${nextAppointment.date_of_service.time}`;\r\n\r\n        switch (nextAppointmentType) {\r\n            case ACTIVE_APPOINTMENT_TYPE:\r\n                html = `Appointment scheduled: ${nextAppointmentDateTime}`;\r\n                break;\r\n            case RESCHEDULED_APPOINTMENT_TYPE:\r\n                const oldAppointmentDateTime = `${rescheduledAppointment.date_of_service.date} ${rescheduledAppointment.date_of_service.time}`;\r\n                html = `Old appointment: ${oldAppointmentDateTime} <br /> Rescheduled appointment: ${nextAppointmentDateTime}`;\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n\r\n        return { __html: html };\r\n    };\r\n\r\n    const nextAppointmentTooltipHtml = getNextAppointmentTooltipHtml();\r\n\r\n    const getSexLabel = (sex) => {\r\n        switch (sex) {\r\n            case \"M\":\r\n                return \"Male\";\r\n            case \"F\":\r\n                return \"Female\";\r\n            case \"U\":\r\n                return \"Unknown\";\r\n            default:\r\n                return \"Not specified\";\r\n        }\r\n    };\r\n    const sex = getSexLabel(inquirable.sex);\r\n\r\n    const displayedProvider = getDisplayedProviderForInquiry({\r\n        nextAppointment,\r\n        isPatientCreated,\r\n        inquirable,\r\n    });\r\n\r\n    const tooltipProviders = inquirable.providers\r\n        ? inquirable.providers.filter((provider) => {\r\n              if (displayedProvider) {\r\n                  return provider.id !== displayedProvider.id;\r\n              }\r\n\r\n              return true;\r\n          })\r\n        : [];\r\n\r\n    const onCardClick = () => {\r\n        if (isArchived) {\r\n            return;\r\n        }\r\n\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setSelectedCardDataAC({\r\n                data: {\r\n                    ...inquirable,\r\n                    inquiry_id: id,\r\n                    stageId,\r\n                    source,\r\n                    registrationMethod,\r\n                    isPatientCreated,\r\n                    nextAppointment,\r\n                    rescheduledAppointment,\r\n                    onboardingDate,\r\n                    onboardingTime,\r\n                    onboardingPhone,\r\n                    onboardingCompleteComment,\r\n                },\r\n            }),\r\n        );\r\n    };\r\n\r\n    const threeDotsAction = () => {\r\n        const data = {\r\n            cardId: id,\r\n            laneId: stageId,\r\n            patientName,\r\n        };\r\n        dispatch(NewPatientsDashboardReducer.setRemoveCardDataAC({ data }));\r\n    };\r\n\r\n    return (\r\n        <div className={styles.patientCard} style={style} onClick={onCardClick}>\r\n            <div className={styles.patientInfo}>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div className=\"d-flex gap-1 flex-wrap\">\r\n                        {inquirable.therapy_type && (\r\n                            <SourceTag source={inquirable.therapy_type} />\r\n                        )}\r\n                        <SourceTag source={registrationMethod} />\r\n                        <SourceTag source={source} />\r\n                    </div>\r\n                    <div\r\n                        className={classNames(\r\n                            \"d-flex align-items-center gap-2\",\r\n                            isArchived && styles.archived,\r\n                        )}>\r\n                        {showFormStatusIndicator && (\r\n                            <FormStatusIndicator inquirable={inquirable} />\r\n                        )}\r\n                        <div className={styles.threeDotsButton}>\r\n                            <ThreeDotsMenu\r\n                                text={threeDotsText}\r\n                                onAction={threeDotsAction}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex flex-column gap-1\">\r\n                    <div className={styles.patientName}>{patientName}</div>\r\n                    <div className=\"d-flex justify-content-between align-items-end\">\r\n                        <div>\r\n                            <span>\r\n                                {age}, {sex},{\" \"}\r\n                            </span>\r\n                            <span\r\n                                className={styles.patientStatus}\r\n                                style={{ color: statusColor }}>\r\n                                {status}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"d-flex flex-column align-items-center gap-1\">\r\n                            <div className=\"d-flex gap-1\">\r\n                                {onboardingCompleteComment ? (\r\n                                    <OverlayTrigger\r\n                                        placement=\"bottom\"\r\n                                        overlay={\r\n                                            <Tooltip>\r\n                                                <div>Onboarding completed</div>\r\n                                            </Tooltip>\r\n                                        }>\r\n                                        <Icon\r\n                                            path={mdiFileDocumentCheck}\r\n                                            size={1}\r\n                                            color=\"rgb(51, 135, 199)\"\r\n                                        />\r\n                                    </OverlayTrigger>\r\n                                ) : (\r\n                                    <></>\r\n                                )}\r\n                                {initialSurveyComplete ? (\r\n                                    <OverlayTrigger\r\n                                        placement=\"bottom\"\r\n                                        overlay={\r\n                                            <Tooltip>\r\n                                                <div>Survey completed</div>\r\n                                            </Tooltip>\r\n                                        }>\r\n                                        <div className=\"d-flex align-items-center\">\r\n                                            <Icon\r\n                                                path={mdiStar}\r\n                                                size={1}\r\n                                                color=\"rgb(51, 135, 199)\"\r\n                                            />\r\n                                            {secondSurveyComplete && (\r\n                                                <span\r\n                                                    className=\"fw-bold\"\r\n                                                    style={{\r\n                                                        color: \"rgb(51, 135, 199)\",\r\n                                                    }}>\r\n                                                    2\r\n                                                </span>\r\n                                            )}\r\n                                        </div>\r\n                                    </OverlayTrigger>\r\n                                ) : (\r\n                                    <></>\r\n                                )}\r\n                            </div>\r\n\r\n                            <DurationIndicator\r\n                                createdAt={createdAt}\r\n                                stageChangedAt={stageChangedAt}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {displayedProvider && (\r\n                <div>\r\n                    <hr className=\"m-0\" />\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        overlay={\r\n                            !isNextAppointmentStatusTooltipVisible &&\r\n                            tooltipProviders.length > 1 ? (\r\n                                <Tooltip id=\"plus-icon\">\r\n                                    <div className=\"text-start\">\r\n                                        {tooltipProviders.map((provider) => (\r\n                                            <div key={provider.id}>\r\n                                                {provider.provider_name}\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </Tooltip>\r\n                            ) : (\r\n                                <></>\r\n                            )\r\n                        }>\r\n                        <div\r\n                            className={styles.therapistInfo}\r\n                            style={{ backgroundColor: style.backgroundColor }}>\r\n                            <div className={styles.providerName}>\r\n                                <img\r\n                                    src={StethoscopeIcon}\r\n                                    alt=\"stethoscope-icon\"\r\n                                />\r\n                                <div>{displayedProvider.provider_name}</div>\r\n                            </div>\r\n                            {nextAppointment && (\r\n                                <OverlayTrigger\r\n                                    placement=\"bottom\"\r\n                                    overlay={\r\n                                        <Tooltip>\r\n                                            <span\r\n                                                dangerouslySetInnerHTML={\r\n                                                    nextAppointmentTooltipHtml\r\n                                                }></span>\r\n                                        </Tooltip>\r\n                                    }>\r\n                                    <div\r\n                                        onMouseEnter={\r\n                                            handleNextAppointmentStatusMouseEnter\r\n                                        }\r\n                                        onMouseLeave={\r\n                                            handleNextAppointmentStatusMouseLeave\r\n                                        }\r\n                                        className={classNames(\r\n                                            styles.nexAppointmentDate,\r\n                                            styles[nextAppointmentType],\r\n                                        )}>\r\n                                        (\r\n                                        {moment\r\n                                            .unix(nextAppointment.time)\r\n                                            .format(\"MM/DD\")}\r\n                                        )\r\n                                    </div>\r\n                                </OverlayTrigger>\r\n                            )}\r\n                        </div>\r\n                    </OverlayTrigger>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientCard;\r\n","import React from \"react\";\r\nimport styles from \"./index.module.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CustomLaneHeader = ({ id, titleText }) => {\r\n    const { lanes } = useSelector((state) => state.newPatientsDashboard);\r\n    const currentLane = lanes.find((el) => el.id === id);\r\n\r\n    if (!currentLane) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div className={styles.laneHeader}>\r\n            <div>{titleText}</div>\r\n            <div className={styles.label}>{currentLane.label || 0}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CustomLaneHeader;\r\n","import React, { useEffect } from \"react\";\r\nimport Board from \"react-trello\";\r\nimport PatientCard from \"../PatientCard\";\r\nimport CustomLaneHeader from \"../CustomLaneHeader\";\r\n\r\nconst EnhancedTrelloBoard = ({\r\n    data,\r\n    eventBusHandle,\r\n    handleDragEnd,\r\n    onLaneScroll,\r\n}) => {\r\n    const components = {\r\n        Card: PatientCard,\r\n        LaneHeader: CustomLaneHeader,\r\n    };\r\n\r\n    const laneStyle = {\r\n        display: \"flex\",\r\n        margin: \"0\",\r\n        padding: \"0\",\r\n        backgroundColor: \"#FFFFFF\",\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Board\r\n                data={data}\r\n                style={{\r\n                    backgroundColor: \"white\",\r\n                    padding: \"0\",\r\n                    gap: \"10px\",\r\n                    display: \"flex\",\r\n                }}\r\n                components={components}\r\n                cardDraggable\r\n                hideCardDeleteIcon\r\n                eventBusHandle={eventBusHandle}\r\n                handleDragEnd={handleDragEnd}\r\n                onLaneScroll={onLaneScroll}\r\n                laneStyle={laneStyle}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EnhancedTrelloBoard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport AppMainLayout from \"../../layouts/AppMainLayout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRingCentralNumbers } from \"../../api/common/ringCentral\";\r\nimport _ from \"lodash\";\r\nimport NotificationsContext from \"../../contexts/NotificationsContext\";\r\nimport EditIcon from \"../../assets/icons/edit.svg\";\r\nimport FilterMultipleSelect from \"./components/FilterMultipleSelect\";\r\nimport ArchivePatientModal from \"./components/ArchivePatientModal\";\r\nimport AddPatientModal from \"./components/AddPatientModal\";\r\nimport CallModal from \"../../components/CallModal\";\r\nimport CircleLoaderWithOverlay from \"../../components/CircleLoaderWithOverlay\";\r\nimport CallResultModal from \"../../components/CallResultModal\";\r\nimport PatientDetailsModal from \"./components/PatientDetailsModal\";\r\nimport CardMoveAcrossLanesModal from \"./components/CardMoveAcrossLanesModal\";\r\nimport FileTypeSelectorModal from \"./components/FileTypeSelectorModal\";\r\nimport * as AppReducer from \"../../store/reducers/app.reducer\";\r\nimport * as NewPatientsDashboardReducer from \"../../store/reducers/newPatientsDashboard.reducer\";\r\nimport * as NewPatientsDashboardApi from \"../../api/pages/new-patients-dashboard-page\";\r\nimport \"./index.scss\";\r\nimport SearchInput from \"../../components/SearchInput\";\r\nimport { ARCHIVED_INQUIRIES_LANE_ID } from \"../../constants/new-patients-dashboard\";\r\nimport EnhancedTrelloBoard from \"./components/EnhancedTrelloBoard\";\r\nimport { columnRules, processCardData } from \"./utils\";\r\n\r\nconst NewPatientsDashboard = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { newPatientsDashboard, app } = useSelector((state) => state);\r\n    const { userData, queryParams } = app;\r\n    const { filters, lanes, searchValue, callModalData, loading } = newPatientsDashboard;\r\n\r\n    const [boardData, setBoardData] = useState({ lanes: [] });\r\n    const [isLoadedData, setIsLoadedData] = useState(false);\r\n    const [showCallResultModal, setShowCallResultModal] = React.useState(false);\r\n    const [isShowArchived, setIsShowArchived] = useState(false);\r\n    const [searchValueState, setSearchValueState] = useState(searchValue);\r\n    const [filtersState, setFiltersState] = useState(filters);\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const setEventBus = (event) => {\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setEventBusAC({ eventBus: event }),\r\n        );\r\n    };\r\n\r\n    const handleCloseCallModal = () => {\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setCallModalDataAC({ data: null }),\r\n        );\r\n    };\r\n\r\n    const handleShowCallResultModal = () => {\r\n        if (showCallResultModal) {\r\n            return;\r\n        }\r\n\r\n        setShowCallResultModal(true);\r\n    };\r\n\r\n    const handleCloseCallResultModal = () => {\r\n        setShowCallResultModal(false);\r\n    };\r\n\r\n    const handleDragEnd = (\r\n        cardId,\r\n        sourceLaneId,\r\n        targetLaneId,\r\n        position,\r\n        cardDetails,\r\n    ) => {\r\n        if (\r\n            sourceLaneId === ARCHIVED_INQUIRIES_LANE_ID ||\r\n            targetLaneId === ARCHIVED_INQUIRIES_LANE_ID\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (sourceLaneId === targetLaneId) {\r\n            return true;\r\n        }\r\n\r\n        const columnRule = columnRules[targetLaneId];\r\n        if (columnRule) {\r\n            const errorMessage = columnRule.check(cardDetails);\r\n            if (errorMessage) {\r\n                enqueueNotification(\"Error\", errorMessage);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const data = {\r\n            fromLaneId: sourceLaneId,\r\n            toLaneId: targetLaneId,\r\n            cardId,\r\n            index: position,\r\n            cardDetails,\r\n        };\r\n\r\n        dispatch(NewPatientsDashboardReducer.setMoveCardDataAC({ data }));\r\n\r\n        return false;\r\n    };\r\n\r\n    const handleAddPatientDealClick = () => {\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setShowAddPatientModalAC({\r\n                value: true,\r\n            }),\r\n        );\r\n    };\r\n\r\n    const handleShowClick = () => {\r\n        const newLanes = lanes.map((column) => {\r\n            return { ...column, currentPage: 1 };\r\n        });\r\n\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setLanesInTableAC({ data: newLanes }),\r\n        );\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setFiltersAC({ data: filtersState }),\r\n        );\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setSearchValueAC({\r\n                value: searchValueState,\r\n            }),\r\n        );\r\n    };\r\n\r\n    const serializeLaneData = (data) => {\r\n        return data.map((item) => processCardData(item));\r\n    };\r\n\r\n    const uploadInquiries = async () => {\r\n        dispatch(NewPatientsDashboardReducer.setLoadingAC({ value: true }));\r\n\r\n        /* Archived inquiries */\r\n        const boardLanes = lanes.filter(\r\n            (lane) => lane.id !== ARCHIVED_INQUIRIES_LANE_ID,\r\n        );\r\n\r\n        const promisesArray = [];\r\n        boardLanes.forEach((column) => {\r\n            const { id, currentPage } = column;\r\n\r\n            let promise;\r\n\r\n            const params = {\r\n                page: currentPage,\r\n                search_text: searchValue,\r\n                source_id: filters.source,\r\n            };\r\n\r\n            if (id === ARCHIVED_INQUIRIES_LANE_ID) {\r\n                promise = NewPatientsDashboardApi.getArchivedInquiries(params);\r\n            } else {\r\n                params.stage_id = id;\r\n                promise = NewPatientsDashboardApi.getInquiriesByStage(params);\r\n            }\r\n\r\n            promisesArray.push(promise);\r\n        });\r\n\r\n        const inquirableResponses = await Promise.all(promisesArray);\r\n\r\n        inquirableResponses.forEach((response, index) => {\r\n            const { data, meta } = response.data;\r\n\r\n            const laneId = boardLanes[index].id;\r\n\r\n            const serializedData = serializeLaneData(data, laneId);\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setDataInLaneAC({\r\n                    data: serializedData,\r\n                    meta,\r\n                    laneId,\r\n                }),\r\n            );\r\n        });\r\n\r\n        dispatch(NewPatientsDashboardReducer.setLoadingAC({ value: false }));\r\n    };\r\n\r\n    const loadInitialData = async () => {\r\n        try {\r\n            const registrationMethodsPromise =\r\n                NewPatientsDashboardApi.getRegistrationMethods();\r\n            const channelsPromise = NewPatientsDashboardApi.getChannels();\r\n            const sourcesPromise = NewPatientsDashboardApi.getSources();\r\n            const documentTypesPromise =\r\n                NewPatientsDashboardApi.getDocumentTypesTree();\r\n            const providersDatasetPromise =\r\n                NewPatientsDashboardApi.getProvidersDatasetForTribute();\r\n            const therapyTypesPromise =\r\n                NewPatientsDashboardApi.getTherapyTypes();\r\n            const callNumbersPromise = getRingCentralNumbers();\r\n\r\n            const [\r\n                registrationMethods,\r\n                channels,\r\n                sources,\r\n                documentTypes,\r\n                providersDataset,\r\n                therapyTypes,\r\n                callNumbersResponse,\r\n            ] = await Promise.all([\r\n                registrationMethodsPromise,\r\n                channelsPromise,\r\n                sourcesPromise,\r\n                documentTypesPromise,\r\n                providersDatasetPromise,\r\n                therapyTypesPromise,\r\n                callNumbersPromise,\r\n            ]);\r\n\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setRegistrationMethodsAC({\r\n                    data: registrationMethods.data,\r\n                }),\r\n            );\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setChannelsAC({\r\n                    data: channels.data,\r\n                }),\r\n            );\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setSourcesAC({\r\n                    data: sources.data,\r\n                }),\r\n            );\r\n\r\n            const sourceIds = sources.data.map((source) => source.id);\r\n            const newFilters = { ...filters, source: sourceIds };\r\n            setFiltersState(newFilters);\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setFiltersAC({ data: newFilters }),\r\n            );\r\n\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setDocumentTypesAC({\r\n                    data: documentTypes.data,\r\n                }),\r\n            );\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setProvidersDatasetForTributeAC({\r\n                    data: providersDataset.data,\r\n                }),\r\n            );\r\n\r\n            dispatch(\r\n                AppReducer.setRingCentralNumbersAC({\r\n                    numbers: callNumbersResponse.data,\r\n                }),\r\n            );\r\n\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setTherapyTypesAC({\r\n                    data: therapyTypes.data.therapy_types,\r\n                }),\r\n            );\r\n\r\n            await uploadInquiries();\r\n\r\n            setIsLoadedData(true);\r\n        } catch (e) {\r\n            //\r\n        }\r\n    };\r\n\r\n    const processSelectedCard = () => {\r\n        let selectedCard;\r\n\r\n        const selectedCardId = queryParams.selectedCard;\r\n\r\n        if (selectedCardId) {\r\n            Object.values(lanes).forEach((lane) => {\r\n                if (selectedCard) {\r\n                    return;\r\n                }\r\n                selectedCard = lane.cards.find(\r\n                    (card) => card.id === selectedCardId,\r\n                );\r\n                console.log(selectedCard);\r\n\r\n                if (selectedCard) {\r\n                    return;\r\n                }\r\n            });\r\n        }\r\n        if (selectedCard) {\r\n            const {\r\n                inquirable,\r\n                id,\r\n                stageId,\r\n                source,\r\n                registrationMethod,\r\n                isPatientCreated,\r\n            } = selectedCard;\r\n            dispatch(\r\n                NewPatientsDashboardReducer.setSelectedCardDataAC({\r\n                    data: {\r\n                        ...inquirable,\r\n                        inquiry_id: id,\r\n                        stageId,\r\n                        source,\r\n                        registrationMethod,\r\n                        isPatientCreated,\r\n                    },\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleLaneScroll = async (page, laneId) => {\r\n        const currentLane = lanes.find((column) => column.id === laneId);\r\n        const nextPage = currentLane.currentPage + 1;\r\n\r\n        if (nextPage <= currentLane.lastPage) {\r\n            await loadMoreInquiries(nextPage, laneId);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    };\r\n\r\n    const updateBoardData = () => {\r\n        let newLanes = _.cloneDeep(lanes);\r\n\r\n        if (!isShowArchived) {\r\n            newLanes = newLanes.filter(\r\n                (column) => column.id !== ARCHIVED_INQUIRIES_LANE_ID,\r\n            );\r\n        }\r\n\r\n        setBoardData((prevBoardData) => ({\r\n            ...prevBoardData,\r\n            lanes: newLanes,\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateBoardData();\r\n        loadInitialData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isLoadedData) {\r\n            return;\r\n        }\r\n\r\n        updateBoardData();\r\n        processSelectedCard();\r\n    }, [isLoadedData]);\r\n\r\n    useEffect(() => {\r\n        if (!isLoadedData) {\r\n            return;\r\n        }\r\n\r\n        updateBoardData();\r\n    }, [isShowArchived]);\r\n\r\n    useEffect(() => {\r\n        if (!isLoadedData) {\r\n            return;\r\n        }\r\n\r\n        uploadInquiries();\r\n    }, [searchValue, filters]);\r\n\r\n    useEffect(() => {\r\n        if (\r\n            JSON.stringify(lanes) !== JSON.stringify(boardData.lanes) &&\r\n            isLoadedData\r\n        ) {\r\n            updateBoardData();\r\n        }\r\n    }, [lanes]);\r\n\r\n    const loadMoreInquiries = async (page, laneId) => {\r\n        const currentLane = lanes.find((column) => column.id === laneId);\r\n\r\n        let response;\r\n\r\n        let params = {\r\n            page,\r\n            search_text: searchValue,\r\n            source_id: filters.source,\r\n        };\r\n\r\n        if (laneId === ARCHIVED_INQUIRIES_LANE_ID) {\r\n            response = await NewPatientsDashboardApi.getArchivedInquiries(\r\n                params,\r\n            );\r\n        } else {\r\n            params.stage_id = laneId;\r\n            response = await NewPatientsDashboardApi.getInquiriesByStage(\r\n                params,\r\n            );\r\n        }\r\n\r\n        const serializedData = serializeLaneData(response.data.data, laneId);\r\n        const newData = currentLane.cards.concat(serializedData);\r\n\r\n        dispatch(\r\n            NewPatientsDashboardReducer.setDataInLaneAC({\r\n                data: newData,\r\n                meta: response.data.meta,\r\n                laneId,\r\n            }),\r\n        );\r\n    };\r\n\r\n    const showButtonIsDisabled =\r\n        JSON.stringify(filters) === JSON.stringify(filtersState) &&\r\n        searchValue.toLowerCase() === searchValueState.toLowerCase();\r\n\r\n    return (\r\n        <AppMainLayout>\r\n            <div className=\"container-fluid\">\r\n                {loading && <CircleLoaderWithOverlay />}\r\n                <div className=\"dashboardCard fullHeightDashboardCard position-relative\">\r\n                    <div className=\"d-flex flex-column gap-3\">\r\n                        <div\r\n                            className=\"d-flex justify-content-between\"\r\n                            style={{ height: \"44px\" }}>\r\n                            <div className=\"position-relative d-flex align-items-center gap-3\">\r\n                                <SearchInput\r\n                                    value={searchValueState}\r\n                                    onChange={(e) =>\r\n                                        setSearchValueState(e.target.value)\r\n                                    }\r\n                                    placeholder=\"Search by name\"\r\n                                    style={{ width: \"254px\" }}\r\n                                />\r\n                                <FilterMultipleSelect\r\n                                    filters={filtersState}\r\n                                    setFilters={setFiltersState}\r\n                                />\r\n                                <button\r\n                                    className=\"btn btn-primary text-white d-flex align-items-center\"\r\n                                    onClick={handleShowClick}\r\n                                    disabled={showButtonIsDisabled}>\r\n                                    Show\r\n                                </button>\r\n                            </div>\r\n                            <button\r\n                                onClick={handleAddPatientDealClick}\r\n                                className=\"btn btn-large btn-primary text-white d-flex align-items-center gap-2 ps-3\">\r\n                                <img src={EditIcon} alt=\"edit-icon\"></img>\r\n                                <span>Add patient inquiry</span>\r\n                            </button>\r\n                        </div>\r\n\r\n                        {/* Archived inquiries */}\r\n                        {/* <div className=\"d-flex gap-2\">\r\n                            <input\r\n                                id={\"selectAllForms\"}\r\n                                type=\"checkbox\"\r\n                                checked={isShowArchived}\r\n                                onChange={(e) =>\r\n                                    setIsShowArchived(e.currentTarget.checked)\r\n                                }\r\n                                onClick={(e) => e.stopPropagation()}\r\n                            />\r\n                            <label\r\n                                className=\"control-label\"\r\n                                htmlFor=\"selectAllForms\">\r\n                                Show archived inquiries\r\n                            </label>\r\n                        </div> */}\r\n\r\n                        <EnhancedTrelloBoard\r\n                            data={boardData}\r\n                            eventBusHandle={setEventBus}\r\n                            handleDragEnd={handleDragEnd}\r\n                            onLaneScroll={handleLaneScroll}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {!loading && (\r\n                <div>\r\n                    <AddPatientModal />\r\n                    <PatientDetailsModal />\r\n                    <ArchivePatientModal />\r\n                    <CardMoveAcrossLanesModal />\r\n                    <FileTypeSelectorModal />\r\n\r\n                    <CallModal\r\n                        patientId={callModalData?.patientId}\r\n                        patientType={callModalData?.patientType}\r\n                        showModal={!!callModalData}\r\n                        closeModal={handleCloseCallModal}\r\n                        openCallResultModal={handleShowCallResultModal}\r\n                    />\r\n                    <CallResultModal\r\n                        showModal={showCallResultModal}\r\n                        closeModal={handleCloseCallResultModal}\r\n                    />\r\n                </div>\r\n            )}\r\n        </AppMainLayout>\r\n    );\r\n};\r\n\r\nexport default NewPatientsDashboard;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { LOGOUT_TIMEOUT_IF_MODAL_OPEN, STILL_HERE_MODAL_TIMEOUT } from '../../../constants';\r\nimport { debounce } from 'throttle-debounce';\r\n\r\nconst AreYouStillHereModal = () => {\r\n    const showModalTimeout = STILL_HERE_MODAL_TIMEOUT;\r\n    let showModalTimeoutId = null;\r\n\r\n    const logoutTimeout = LOGOUT_TIMEOUT_IF_MODAL_OPEN;\r\n    let logoutTimeoutId = null;\r\n\r\n    // used to open/close a modal window\r\n    const [modalHasShownState, setModalHasShownState] = useState(false);\r\n\r\n    // used to check if the modal window is open in the resetTimer method\r\n    let modalHasShown = false;\r\n\r\n    const show_modal_timeout_ms = showModalTimeout * 1000;\r\n    const show_modal_timeout_mins = Math.round(showModalTimeout / 60);\r\n    const logout_timeout_ms = logoutTimeout * 1000;\r\n\r\n    const storageEventListener = (event) => {\r\n        if (event.key === 'are_you_still_modal_has_shown' && !JSON.parse(event.newValue)) {\r\n            closeModal();\r\n            resetTimer();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        setupTimers();\r\n\r\n        localStorage.setItem('are_you_still_modal_has_shown', false.toString());\r\n\r\n        window.addEventListener('storage', storageEventListener);\r\n\r\n        return () => {\r\n            window.removeEventListener('storage', storageEventListener);\r\n        };\r\n    }, []);\r\n\r\n    const debounceResetTimerOnServer = debounce(30 * 1000, function () {\r\n        axios.post('/empty-request');\r\n    });\r\n\r\n    const startTimer = () => {\r\n        showModalTimeoutId = setTimeout(handleShowModalTimeout, show_modal_timeout_ms)\r\n    };\r\n\r\n    const resetTimer = () => {\r\n        if (!modalHasShown) {\r\n            localStorage.setItem('are_you_still_modal_has_shown', false.toString());\r\n\r\n            clearTimeout(showModalTimeoutId);\r\n\r\n            if (logoutTimeoutId) {\r\n                clearTimeout(logoutTimeoutId);\r\n            }\r\n\r\n            startTimer();\r\n            debounceResetTimerOnServer();\r\n        }\r\n    }\r\n\r\n    const setupTimers = () => {\r\n        document.addEventListener(\"keypress\", resetTimer);\r\n        document.addEventListener(\"mousemove\", resetTimer);\r\n        document.addEventListener(\"mousedown\", resetTimer);\r\n        document.addEventListener(\"touchmove\", resetTimer);\r\n\r\n        startTimer();\r\n    };\r\n\r\n    const handleShowModalTimeout = () => {\r\n        localStorage.setItem('are_you_still_modal_has_shown', true.toString());\r\n        setModalHasShownState(true);\r\n        modalHasShown = true;\r\n        logoutTimeoutId = setTimeout(handleLogoutTimeout, logout_timeout_ms);\r\n    };\r\n\r\n    const handleLogoutTimeout = () => {\r\n        document.getElementById('logout-form').submit();\r\n    };\r\n\r\n    const handleYesButtonClick = () => {\r\n        axios.post('/empty-request');\r\n        closeModal();\r\n        resetTimer();\r\n        localStorage.setItem('are_you_still_modal_has_shown', false.toString());\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setModalHasShownState(false);\r\n        modalHasShown = false;\r\n    };\r\n\r\n    return (\r\n        <Modal show={modalHasShownState} centered style={{ zIndex: 9999 }}>\r\n            <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h4 style={{ fontSize: '18px' }} className=\"m-0\">\r\n                        Are you still here?\r\n                    </h4>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    No activity for {show_modal_timeout_mins} minutes. Are you still here?\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button type=\"button\" className=\"btn btn-primary text-white\" onClick={handleYesButtonClick}>\r\n                        Yes\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AreYouStillHereModal;\r\n","import axios from \"axios\";\r\n\r\nexport const getSupervisors = () => {\r\n    return axios.get(`/api/supervisor`);\r\n};\r\n\r\nexport const getSupervisees = (query = {}) => {\r\n    return axios.get(`/api/supervisor/supervisees`, { params: query });\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n    dateValueCell,\r\n    patientNameValueCell,\r\n} from \"../../mixins/cells-functions\";\r\nimport CustomBadge from \"../../pages/SecretaryDashboard/components/CustomBadge\";\r\nimport hexToRgba from \"../../utilities/hexToRgba\";\r\nimport { ROW_NUMBER_COLUMN } from \"../../constants\";\r\nimport { sortingDate, sortingStatus } from \"../../mixins/sorting-functions\";\r\nimport moment from \"moment-timezone\";\r\n\r\nconst initialState = {\r\n    supervisees: null,\r\n    tableColumns: [\r\n        {\r\n            Header: \"\",\r\n            accessor: ROW_NUMBER_COLUMN,\r\n            disableSortBy: true,\r\n            width: 50,\r\n        },\r\n        {\r\n            accessor: \"patient_name\",\r\n            Header: \"Patient's Name\",\r\n            Cell: patientNameValueCell,\r\n            width: 150,\r\n        },\r\n        {\r\n            accessor: \"patient_status\",\r\n            Header: \"Patient's Status\",\r\n            Cell: ({ value }) => (\r\n                <CustomBadge\r\n                    title={value.status}\r\n                    background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                    textColor={\"#\" + value.hex_color}\r\n                />\r\n            ),\r\n            sortType: sortingStatus,\r\n            width: 80,\r\n        },\r\n        {\r\n            accessor: \"patient_insurance\",\r\n            Header: \"Patient's Insurance\",\r\n            width: 120,\r\n        },\r\n        {\r\n            accessor: \"date_of_assignment\",\r\n            Header: \"Date of Assignment\",\r\n            Cell: ({ value }) => value ? moment(value).format('MM/DD/YY') : '-',\r\n            sortType: sortingDate,\r\n            width: 80,\r\n        },\r\n        {\r\n            accessor: \"count_visits\",\r\n            Header: \"Count of Visits\",\r\n            width: 100,\r\n        },\r\n        {\r\n            accessor: \"date_of_last_visit\",\r\n            Header: \"Date of Last Visit\",\r\n            Cell: dateValueCell,\r\n            sortType: sortingDate,\r\n            width: 80,\r\n        },\r\n    ],\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"supervisorDashboard\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setSuperviseesAC(state, action) {\r\n            state.supervisees = action.payload.data;\r\n        },\r\n    },\r\n});\r\n\r\nexport const supervisorDashboardReducer = slice.reducer;\r\n\r\nexport const { setSuperviseesAC } = slice.actions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\nimport styles from \"./index.module.scss\";\r\nimport { getInquirableFullname } from \"../../../../utilities/newPatientsCrmUtils\";\r\nimport Table from \"../../../../components/Table\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SuperviseeBlock = ({ supervisee }) => {\r\n    const { tableColumns } = useSelector((state) => state.supervisorDashboard);\r\n\r\n    const [tableData, setTableData] = useState(null);\r\n\r\n    const getTableData = () => {\r\n        const patients = supervisee.provider && supervisee.provider.patients ? supervisee.provider.patients : [];\r\n        return patients.map((patient) => ({\r\n            id: patient.id,\r\n            patient_id: patient.id,\r\n            patient_name: getInquirableFullname(patient),\r\n            patient_status: patient.status,\r\n            patient_insurance: patient.insurance\r\n                ? patient.insurance.insurance\r\n                : \"-\",\r\n            count_visits: patient.appointments_count,\r\n            date_of_last_visit: patient.last_appointment\r\n                ? patient.last_appointment.date_of_service.date\r\n                : \"-\",\r\n            date_of_assignment: patient.date_of_assignment,\r\n        }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (supervisee) {\r\n            setTableData(getTableData());\r\n        }\r\n    }, [supervisee]);\r\n\r\n    if (!tableData) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Accordion className={styles.accordion}>\r\n            <Accordion.Item eventKey={supervisee.id}>\r\n                <Accordion.Header className={styles.header}>\r\n                    <div className=\"d-flex gap-1\">\r\n                        <div className=\"fw-bold\">\r\n                            {supervisee.provider.provider_name}\r\n                        </div>\r\n                        <div>\r\n                            (Patients: {supervisee.provider.patients.length})\r\n                        </div>\r\n                        {supervisee.provider.user.deleted_at &&\r\n                            <div className={'text-danger'}>Access suspended</div>\r\n                        }\r\n                    </div>\r\n                </Accordion.Header>\r\n                <Accordion.Body className={styles.body}>\r\n                    <div className=\"dashboard-table-wrapper\">\r\n                        <Table\r\n                            pageSize={1000}\r\n                            columns={tableColumns}\r\n                            data={tableData}\r\n                            dataIsLoaded={!!tableData}\r\n                        />\r\n                    </div>\r\n                </Accordion.Body>\r\n            </Accordion.Item>\r\n        </Accordion>\r\n    );\r\n};\r\n\r\nexport default SuperviseeBlock;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AppMainLayout from \"../../layouts/AppMainLayout\";\r\nimport {\r\n    getSupervisees,\r\n    getSupervisors,\r\n} from \"../../api/pages/supervisor-dashboard-page\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSuperviseesAC } from \"../../store/reducers/supervisorDashboard.reducer\";\r\nimport SuperviseeBlock from \"./components/SuperviseeBlock\";\r\nimport CircleLoader from \"../../components/CircleLoader\";\r\nimport Select from \"react-select\";\r\nimport { PROVIDER_ROLE_ID } from \"../../constants\";\r\nimport styles from \"./index.module.scss\";\r\nimport { getSelectStyles } from \"../../utilities/react-select-styles\";\r\n\r\nconst SupervisorDashboard = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector((state) => state.app);\r\n\r\n    const [supervisorsList, setSupervisorsList] = useState(null);\r\n    const [selectedSupervisorId, setSelectedSupervisorId] = useState(null);\r\n\r\n    const { supervisees } = useSelector((state) => state.supervisorDashboard);\r\n\r\n    const userIsProvider = user.role.id === PROVIDER_ROLE_ID;\r\n    const selectStyles = getSelectStyles();\r\n\r\n    const getContentForSupervisor = () => {\r\n        if (!supervisees) {\r\n            return <CircleLoader absolute={true} />;\r\n        }\r\n        if (!supervisees.length) {\r\n            return (\r\n                <div\r\n                    className=\"dashboardCard d-flex align-items-center justify-content-center\"\r\n                    style={{ height: \"54px\", fontSize: \"16px\" }}>\r\n                    There are no supervisees yet\r\n                </div>\r\n            );\r\n        }\r\n        return supervisees.filter((supervisee) => !!supervisee.provider).map((supervisee) => (\r\n            <SuperviseeBlock key={supervisee.id} supervisee={supervisee} />\r\n        ));\r\n    };\r\n\r\n    const getSelectedSupervisorValue = () => {\r\n        if (selectedSupervisorId) {\r\n            const supervisor = supervisorsList.find(\r\n                (supervisor) => supervisor.id === selectedSupervisorId,\r\n            );\r\n            return { value: supervisor.id, label: supervisor.provider_name };\r\n        }\r\n        return { value: \"\", label: \"\" };\r\n    };\r\n\r\n    const selectedSupervisorValue = getSelectedSupervisorValue();\r\n\r\n    const getContentForSecretary = () => {\r\n        if (!supervisorsList) {\r\n            return <CircleLoader absolute={true} />;\r\n        }\r\n        if (supervisorsList) {\r\n            return (\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                    <div className={styles.selectSupervisorBlock}>\r\n                        <div className=\"fw-bold ps-1\">Supervisor Name</div>\r\n                        <Select\r\n                            value={selectedSupervisorValue}\r\n                            onChange={(selectedOption) =>\r\n                                setSelectedSupervisorId(selectedOption.value)\r\n                            }\r\n                            options={supervisorsList.map((supervisor) => ({\r\n                                value: supervisor.id,\r\n                                label: supervisor.provider_name,\r\n                            }))}\r\n                            isSearchable={false}\r\n                            styles={selectStyles}\r\n                        />\r\n                    </div>\r\n                    {selectedSupervisorId && getContentForSupervisor()}\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (userIsProvider) {\r\n            return getSupervisees().then((res) =>\r\n                dispatch(setSuperviseesAC({ data: res.data })),\r\n            );\r\n        }\r\n\r\n        getSupervisors().then((res) => setSupervisorsList(res.data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!userIsProvider && selectedSupervisorId) {\r\n            dispatch(setSuperviseesAC({ data: null }));\r\n\r\n            getSupervisees({ supervisor_id: selectedSupervisorId }).then(\r\n                (res) => dispatch(setSuperviseesAC({ data: res.data })),\r\n            );\r\n        }\r\n    }, [selectedSupervisorId]);\r\n\r\n    return (\r\n        <AppMainLayout>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"d-flex flex-column gap-2\">\r\n                    {userIsProvider\r\n                        ? getContentForSupervisor()\r\n                        : getContentForSecretary()}\r\n                </div>\r\n            </div>\r\n        </AppMainLayout>\r\n    );\r\n};\r\n\r\nexport default SupervisorDashboard;\r\n","import React from \"react\";\r\n\r\nconst CrossSvg = ({ handleClick, className }) => {\r\n    return (\r\n        <div className={className} onClick={handleClick}>\r\n            <svg\r\n                height=\"20\"\r\n                width=\"20\"\r\n                viewBox=\"0 0 20 20\"\r\n                aria-hidden=\"true\"\r\n                focusable=\"false\">\r\n                <path d=\"M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z\"></path>\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CrossSvg;\r\n","import axios from \"axios\";\r\n\r\nexport const getPatientStatuses = () => {\r\n    return axios.get(\"/patient/statuses\");\r\n};\r\n\r\nexport const getProvidersList = () => {\r\n    return axios.get(\"/provider/all\");\r\n};\r\n\r\nexport const getDocumentDefaultFaxesList = () => {\r\n    return axios.get(\"/document-default-faxes\");\r\n};\r\n\r\nexport const getDocumentDefaultEmailsList = () => {\r\n    return axios.get(\"/document-default-emails\");\r\n};\r\n\r\nexport const getSubmittedReauthorizationRequestForms = (params) => {\r\n    return axios.get(\r\n        \"/api/reauthorization-request-dashboard/submitted-reauthorization-request-forms\",\r\n        { params },\r\n    );\r\n};\r\n\r\nexport const createReauthorizationRequestForm = (payload) => {\r\n    return axios.post(\r\n        \"/api/reauthorization-request-dashboard/submitted-reauthorization-request-forms\",\r\n        payload,\r\n    );\r\n};\r\n\r\nexport const getReauthorizationRequestFormStages = () => {\r\n    return axios.get(\r\n        \"/api/reauthorization-request-dashboard/submitted-reauthorization-request-forms/stages\",\r\n    );\r\n};\r\n\r\nexport const changeReauthorizationRequestFormStage = (id, payload) => {\r\n    return axios.put(\r\n        `/api/reauthorization-request-dashboard/submitted-reauthorization-request-forms/${id}/change-stage`,\r\n        payload,\r\n    );\r\n};\r\n\r\nexport const sendDocumentFax = (payload) => {\r\n    return axios.post(\"/patient/document-fax-send\", payload);\r\n};\r\n\r\nexport const sendDocumentEmail = (payload) => {\r\n    return axios.post(\"/patient/document-mail-send\", payload);\r\n};\r\n\r\nexport const getUpcomingReauthorizationRequests = (params) => {\r\n    return axios.get(\r\n        \"/api/reauthorization-request-dashboard/upcoming-reauthorization-requests\",\r\n        { params },\r\n    );\r\n};\r\n\r\nexport const getExpirationsList = () => {\r\n    return axios.get(\r\n        \"/api/reauthorization-request-dashboard/upcoming-reauthorization-requests/expirations\",\r\n    );\r\n};\r\n\r\nexport const createLog = (id, payload) => {\r\n    return axios.post(\r\n        `/api/reauthorization-request-dashboard/submitted-reauthorization-request-forms/${id}/create-log`,\r\n        payload,\r\n    );\r\n};\r\n\r\nexport const saveFutureInsuranceReauthorizationData = (id, payload) => {\r\n    return axios.post(\r\n        `/api/reauthorization-request-dashboard/submitted-reauthorization-request-forms/${id}/future-insurance-reauthorization-data`,\r\n        payload,\r\n    );\r\n};\r\n\r\nexport const updateAuthNumber = (payload) => {\r\n    return axios.put(\r\n        \"/api/reauthorization-request-dashboard/submitted-reauthorization-request-forms/auth-number\",\r\n        payload,\r\n    );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n} from \"react-bootstrap\";\r\nimport moment from \"moment-timezone\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport { getSelectStyles } from \"../../../../../../utilities/react-select-styles\";\r\nimport classNames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport NotificationsContext from \"../../../../../../contexts/NotificationsContext\";\r\nimport PhoneInput from \"../../../../../../components/Inputs/PhoneInput\";\r\nimport CircleLoaderWithOverlay from \"../../../../../../components/CircleLoaderWithOverlay\";\r\nimport { sendDocumentFax } from \"../../../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport * as ReauthorizationRequestsDashboardReducer from \"../../../../../../store/reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport { FAX_SEND_METHOD_NAME } from \"../../../../../../constants/reauthorization-request-dashboard\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst SendDocumentByFaxModal = ({ document, show, closeModal }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { documentDefaultFaxesList, submittedReauthorizationRequestForms } =\r\n        useSelector((state) => state.reauthorizationRequestsDashboard);\r\n\r\n    const { tableData, tableParams } = submittedReauthorizationRequestForms;\r\n\r\n    const tableName = \"submittedReauthorizationRequestForms\";\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const selectedFaxInitialValue = { value: \"\", label: \"\" };\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedFax, setSelectedFax] = useState(selectedFaxInitialValue);\r\n    const [customPhone, setCustomPhone] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const selectStyles = getSelectStyles({\r\n        backgroundColor: \"rgb(243, 246, 249)\",\r\n    });\r\n\r\n    const resetModal = () => {\r\n        setSelectedFax(selectedFaxInitialValue);\r\n        setCustomPhone(\"\");\r\n        setErrors({});\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleCustomPhoneInput = (value) => {\r\n        if (value.length === 10) {\r\n            setErrors({});\r\n        }\r\n\r\n        setCustomPhone(value);\r\n    };\r\n\r\n    const getDocumentModel = () => {\r\n        const parts = document.document_type.split(\"\\\\\");\r\n        return parts[parts.length - 1];\r\n    };\r\n\r\n    const getRecipient = () => {\r\n        if (!selectedFax.value) {\r\n            return \"\";\r\n        }\r\n\r\n        if (selectedFax.value === -1) {\r\n            return `+1${customPhone}`;\r\n        }\r\n\r\n        return `+1${selectedFax.value}`;\r\n    };\r\n\r\n    const calculateLastPage = (total) => {\r\n        return Math.max(1, Math.ceil(total / tableParams.per_page));\r\n    };\r\n\r\n    const updateTableData = (newData) => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReducer.setDataInTableAC({\r\n                tableName,\r\n                value: newData,\r\n            }),\r\n        );\r\n\r\n        if (newData.length !== tableParams.total) {\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setTotalInTableAC({\r\n                    tableName,\r\n                    value: newData.length,\r\n                }),\r\n            );\r\n        }\r\n\r\n        const lastPage = calculateLastPage(newData.length);\r\n\r\n        if (lastPage !== tableParams.last_page) {\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setLastPageInTableAC({\r\n                    tableName,\r\n                    value: lastPage,\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n        if (!selectedFax.value) {\r\n            errors.selectedFax = true;\r\n        }\r\n\r\n        if (selectedFax.value === -1) {\r\n            if (customPhone.length !== 10) {\r\n                errors.customPhone = true;\r\n            }\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSendClick = () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        const sendMethod = FAX_SEND_METHOD_NAME;\r\n\r\n        const newData = tableData.map((el) => {\r\n            if (JSON.stringify(el.document) === JSON.stringify(document)) {\r\n                const newDocumentShared = {\r\n                    created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n                };\r\n                const sharedDocuments = _.cloneDeep(document.document_shared);\r\n                sharedDocuments.unshift(newDocumentShared);\r\n\r\n                return {\r\n                    ...el,\r\n                    send_method: sendMethod,\r\n                    sent_at: moment().format(\"MM/DD/YYYY\"),\r\n                    document: {\r\n                        ...el.document,\r\n                        document_shared: sharedDocuments,\r\n                    },\r\n                };\r\n            }\r\n            return el;\r\n        });\r\n\r\n        const payload = {\r\n            document_model: getDocumentModel(),\r\n            method: sendMethod,\r\n            patient_documents_id: document.id,\r\n            recipient: getRecipient(),\r\n        };\r\n        sendDocumentFax(payload)\r\n            .then(() => {\r\n                updateTableData(newData);\r\n                resetModal();\r\n                closeModal();\r\n                enqueueNotification(\"Success\", \"Document sent successfully\");\r\n            })\r\n            .catch(() => enqueueNotification(\"Error\", \"Something went wrong\"))\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n    }, [selectedFax]);\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"sm\"\r\n            onHide={closeModal}\r\n            id={styles.sendByFaxDialog}\r\n            centered\r\n            className={\"custom-modal\"}>\r\n            <ModalHeader className=\"h6\" closeButton>\r\n                Send this document via fax\r\n            </ModalHeader>\r\n            <ModalBody className=\"container p-3\">\r\n                <div className=\"d-flex align-items-center gap-2 w-100\">\r\n                    <div className=\"fw-bold\">To:</div>\r\n                    <div className=\"w-100\">\r\n                        <Select\r\n                            value={selectedFax}\r\n                            onChange={(selectedOption) =>\r\n                                setSelectedFax(selectedOption)\r\n                            }\r\n                            options={[\r\n                                ...documentDefaultFaxesList,\r\n                                { fax: -1, title: \"Enter another fax number\" },\r\n                            ].map((item) => ({\r\n                                value: item.fax,\r\n                                label: item.title,\r\n                            }))}\r\n                            styles={selectStyles}\r\n                            className={classNames(\r\n                                errors.selectedFax && \"is-invalid\",\r\n                            )}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {selectedFax.value && (\r\n                    <div>\r\n                        {selectedFax.value === -1 ? (\r\n                            <div className=\"d-flex flex-column gap-1\">\r\n                                <div className=\"fw-bold\">\r\n                                    Please enter fax number, digits only.\r\n                                </div>\r\n                                <PhoneInput\r\n                                    phone={customPhone}\r\n                                    setPhone={(value) =>\r\n                                        handleCustomPhoneInput(\r\n                                            value.replace(/\\D+/g, \"\"),\r\n                                        )\r\n                                    }\r\n                                    error={!!errors.customPhone}\r\n                                    alwaysShowMask={true}\r\n                                />\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"d-flex gap-2\">\r\n                                <div className=\"fw-bold\">Fax:</div>\r\n                                <div>{selectedFax.value}</div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </ModalBody>\r\n            <ModalFooter className=\"p-2 border-top\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={handleSendClick}>Send</Button>\r\n                </div>\r\n            </ModalFooter>\r\n            {isLoading && <CircleLoaderWithOverlay />}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default SendDocumentByFaxModal;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    Button,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n} from \"react-bootstrap\";\r\nimport moment from \"moment-timezone\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getSelectStyles } from \"../../../../../../utilities/react-select-styles\";\r\nimport Select from \"react-select\";\r\nimport classNames from \"classnames\";\r\nimport _ from \"lodash\";\r\nimport NotificationsContext from \"../../../../../../contexts/NotificationsContext\";\r\nimport { sendDocumentEmail } from \"../../../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport CircleLoaderWithOverlay from \"../../../../../../components/CircleLoaderWithOverlay\";\r\nimport * as ReauthorizationRequestsDashboardReducer from \"../../../../../../store/reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport { EMAIL_SEND_METHOD_NAME } from \"../../../../../../constants/reauthorization-request-dashboard\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst SendDocumentByEmailModal = ({ document, show, closeModal }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { documentDefaultEmailsList, submittedReauthorizationRequestForms } =\r\n        useSelector((state) => state.reauthorizationRequestsDashboard);\r\n\r\n    const { tableData, tableParams } = submittedReauthorizationRequestForms;\r\n\r\n    const tableName = \"submittedReauthorizationRequestForms\";\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const selectedEmailInitialValue = { value: \"\", label: \"\" };\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedEmail, setSelectedEmail] = useState(\r\n        selectedEmailInitialValue,\r\n    );\r\n    const [customEmail, setCustomEmail] = useState(\"\");\r\n    const [customPassword, setCustomPassword] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const selectStyles = getSelectStyles({\r\n        backgroundColor: \"rgb(243, 246, 249)\",\r\n    });\r\n\r\n    const resetModal = () => {\r\n        setSelectedEmail(selectedEmailInitialValue);\r\n        setCustomEmail(\"\");\r\n        setErrors({});\r\n        setIsLoading(false);\r\n    };\r\n\r\n    function isValidEmail(email) {\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n        return emailRegex.test(email);\r\n    }\r\n\r\n    const getDocumentModel = () => {\r\n        const parts = document.document_type.split(\"\\\\\");\r\n        return parts[parts.length - 1];\r\n    };\r\n\r\n    const getRecipient = () => {\r\n        if (!selectedEmail.value) {\r\n            return \"\";\r\n        }\r\n        if (selectedEmail.value === -1) {\r\n            return customEmail;\r\n        }\r\n\r\n        return selectedEmail.value;\r\n    };\r\n\r\n    const getSharedLinkPassword = () => {\r\n        if (!selectedEmail.value) {\r\n            return \"\";\r\n        }\r\n        if (selectedEmail.value === -1) {\r\n            return customPassword;\r\n        }\r\n\r\n        const selectedValue = documentDefaultEmailsList.find(\r\n            (el) => el.email === selectedEmail.value,\r\n        );\r\n\r\n        return selectedValue.password;\r\n    };\r\n\r\n    const calculateLastPage = (total) => {\r\n        return Math.max(1, Math.ceil(total / tableParams.per_page));\r\n    };\r\n\r\n    const updateTableData = (newData) => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReducer.setDataInTableAC({\r\n                tableName,\r\n                value: newData,\r\n            }),\r\n        );\r\n\r\n        if (newData.length !== tableParams.total) {\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setTotalInTableAC({\r\n                    tableName,\r\n                    value: newData.length,\r\n                }),\r\n            );\r\n        }\r\n\r\n        const lastPage = calculateLastPage(newData.length);\r\n\r\n        if (lastPage !== tableParams.last_page) {\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setLastPageInTableAC({\r\n                    tableName,\r\n                    value: lastPage,\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n        if (!selectedEmail.value) {\r\n            errors.selectedEmail = true;\r\n        }\r\n\r\n        if (selectedEmail.value === -1) {\r\n            if (!isValidEmail(customEmail)) {\r\n                errors.customEmail = true;\r\n            }\r\n\r\n            if (!customPassword) {\r\n                errors.customPassword = true;\r\n            }\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleSendClick = () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        const sendMethod = EMAIL_SEND_METHOD_NAME;\r\n\r\n        const newData = tableData.map((el) => {\r\n            if (JSON.stringify(el.document) === JSON.stringify(document)) {\r\n                const newDocumentShared = {\r\n                    created_at: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\r\n                };\r\n                const sharedDocuments = _.cloneDeep(document.document_shared);\r\n                sharedDocuments.unshift(newDocumentShared);\r\n\r\n                return {\r\n                    ...el,\r\n                    send_method: sendMethod,\r\n                    sent_at: moment().format(\"MM/DD/YYYY\"),\r\n                    document: {\r\n                        ...el.document,\r\n                        document_shared: sharedDocuments,\r\n                    },\r\n                };\r\n            }\r\n            return el;\r\n        });\r\n\r\n        const payload = {\r\n            document_model: getDocumentModel(),\r\n            method: sendMethod,\r\n            patient_documents_id: document.id,\r\n            recipient: getRecipient(),\r\n            shared_link_password: getSharedLinkPassword(),\r\n        };\r\n        sendDocumentEmail(payload)\r\n            .then(() => {\r\n                updateTableData(newData);\r\n                resetModal();\r\n                closeModal();\r\n                enqueueNotification(\"Success\", \"Document sent successfully\");\r\n            })\r\n            .catch(() => enqueueNotification(\"Error\", \"Something went wrong\"))\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleCustomEmailInput = (e) => {\r\n        if (isValidEmail(e.target.value)) {\r\n            setErrors({});\r\n        }\r\n\r\n        setCustomEmail(e.target.value);\r\n    };\r\n\r\n    const handleCustomPasswordInput = (e) => {\r\n        if (e.target.value) {\r\n            setErrors({});\r\n        }\r\n\r\n        setCustomPassword(e.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrors({});\r\n    }, [selectedEmail]);\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"sm\"\r\n            onHide={closeModal}\r\n            id={styles.sendByEmailDialog}\r\n            centered\r\n            className={\"custom-modal\"}>\r\n            <ModalHeader className=\"h6\" closeButton>\r\n                Send this document via email\r\n            </ModalHeader>\r\n            <ModalBody className=\"container p-3\">\r\n                <div className=\"d-flex align-items-center gap-2 w-100\">\r\n                    <div className=\"fw-bold\">To:</div>\r\n                    <div className=\"w-100\">\r\n                        <Select\r\n                            value={selectedEmail}\r\n                            onChange={(selectedOption) =>\r\n                                setSelectedEmail(selectedOption)\r\n                            }\r\n                            options={[\r\n                                ...documentDefaultEmailsList,\r\n                                {\r\n                                    email: -1,\r\n                                    title: \"Enter another email address\",\r\n                                },\r\n                            ].map((item) => ({\r\n                                value: item.email,\r\n                                label: item.title,\r\n                            }))}\r\n                            styles={selectStyles}\r\n                            className={classNames(\r\n                                errors.selectedEmail && \"is-invalid\",\r\n                            )}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {selectedEmail.value && (\r\n                    <div className=\"d-flex flex-column gap-2\">\r\n                        <label className=\"d-flex align-items-center gap-2\">\r\n                            <div className={styles.label}>Email:</div>\r\n                            {selectedEmail.value === -1 ? (\r\n                                <input\r\n                                    className={classNames(\r\n                                        \"form-control\",\r\n                                        !!errors.customEmail && \"is-invalid\",\r\n                                    )}\r\n                                    value={customEmail}\r\n                                    onChange={handleCustomEmailInput}\r\n                                />\r\n                            ) : (\r\n                                <div>{selectedEmail.value}</div>\r\n                            )}\r\n                        </label>\r\n                        <label className=\"d-flex align-items-center gap-2\">\r\n                            <div className={styles.label}>Password:</div>\r\n                            {selectedEmail.value === -1 ? (\r\n                                <input\r\n                                    className={classNames(\r\n                                        \"form-control\",\r\n                                        !!errors.customPassword && \"is-invalid\",\r\n                                    )}\r\n                                    value={customPassword}\r\n                                    onChange={handleCustomPasswordInput}\r\n                                />\r\n                            ) : (\r\n                                <div>{getSharedLinkPassword()}</div>\r\n                            )}\r\n                        </label>\r\n                    </div>\r\n                )}\r\n            </ModalBody>\r\n            <ModalFooter className=\"p-2 border-top\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Button onClick={handleSendClick}>Send</Button>\r\n                </div>\r\n            </ModalFooter>\r\n            {isLoading && <CircleLoaderWithOverlay />}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default SendDocumentByEmailModal;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport CircleLoaderWithOverlay from \"../../../../../../components/CircleLoaderWithOverlay\";\r\n\r\nconst SaveLogModal = ({ show, closeModal, handleClick, title }) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const resetModal = () => {\r\n        setComment(\"\");\r\n        setErrors(\"\");\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n        resetModal();\r\n        closeModal();\r\n    };\r\n\r\n    const handleCommentInput = (e) => {\r\n        if (comment.length > 0) {\r\n            setErrors({});\r\n        }\r\n\r\n        setComment(e.target.value);\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (comment.length === 0) {\r\n            errors.comment = true;\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const confirmClick = async () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        await handleClick(comment);\r\n        setIsLoading(false);\r\n        closeModal();\r\n        resetModal();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"sm\"\r\n            onHide={closeModal}\r\n            centered\r\n            className={\"custom-modal\"}>\r\n            <ModalHeader closeButton>\r\n                <div>{title}</div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"custom-form-group\">\r\n                    <label>\r\n                        Comment <span className={\"text-danger\"}>*</span>\r\n                    </label>\r\n                    <input\r\n                        placeholder=\"Add your comment...\"\r\n                        className={classNames(\r\n                            \"form-control\",\r\n                            !!errors.comment && \"is-invalid\",\r\n                        )}\r\n                        style={{ backgroundColor: \"#fcfcfc\" }}\r\n                        autoFocus\r\n                        value={comment}\r\n                        onChange={handleCommentInput}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        Comment field is required.\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-end gap-2\">\r\n                        <button\r\n                            className=\"btn btn-large btn-outline-primary\"\r\n                            onClick={handleModalCancel}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-large btn-primary\"\r\n                            onClick={confirmClick}>\r\n                            Confirm\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            {isLoading && <CircleLoaderWithOverlay />}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default SaveLogModal;\r\n","import {Modal, ModalBody,  ModalHeader} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport Table from \"../../../../../../components/Table\";\r\nimport {sortingDate} from \"../../../../../../mixins/sorting-functions\";\r\nimport styles from \"./index.module.scss\"\r\nimport {dateValueCell} from \"../../../../../../mixins/cells-functions\";\r\n\r\nconst tableColumns = [\r\n    {\r\n        accessor: \"user_name\",\r\n        Header: \"User\",\r\n        disableSortBy: true,\r\n        width: 150,\r\n    },\r\n    {\r\n        accessor: \"old_stage\",\r\n        Header: \"Old Stage\",\r\n        disableSortBy: true,\r\n        width: 130,\r\n    },\r\n    {\r\n        accessor: \"new_stage\",\r\n        Header: \"New Stage\",\r\n        disableSortBy: true,\r\n        width: 130,\r\n    },\r\n    {\r\n        accessor: \"comment\",\r\n        Header: \"Comment\",\r\n        disableSortBy: true,\r\n        width: 200,\r\n    },\r\n    {\r\n        accessor: \"created_at\",\r\n        Header: \"Stage changed on\",\r\n        Cell: dateValueCell,\r\n        sortType: sortingDate,\r\n        width: 120,\r\n    },\r\n];\r\n\r\nconst StageChangeHistoryModal = ({ requestForm, show, closeModal }) => {\r\n    const tableData = requestForm.stage_change_history || [];\r\n\r\n    const tableParams = {\r\n        total: tableData.length,\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            onHide={closeModal}\r\n            centered\r\n            className={\"custom-modal\"}>\r\n            <ModalHeader className=\"h6\" closeButton>\r\n                Stage Change History: {requestForm.patient_name}\r\n            </ModalHeader>\r\n            <ModalBody className=\"container p-3\">\r\n                <div className={styles.tableWrapper}>\r\n                    <div className=\"d-flex align-items-center gap-2 w-100\">\r\n                        <Table\r\n                            pageSize={tableParams.per_page}\r\n                            columns={tableColumns}\r\n                            currentPage={tableParams.current_page}\r\n                            data={tableData}\r\n                            dataIsLoaded={true}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default StageChangeHistoryModal;","import React, { useContext, useRef, useState } from \"react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiDotsVertical } from \"@mdi/js\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport SendDocumentByFaxModal from \"../SendDocumentByFaxModal\";\r\nimport SendDocumentByEmailModal from \"../SendDocumentByEmailModal\";\r\nimport styles from \"./index.module.scss\";\r\nimport {\r\n    EMAIL_LOG_ID,\r\n    FAX_LOG_ID,\r\n    PATIENT_DOCUMENT_MODEL,\r\n    PATIENT_ELECTRONIC_DOCUMENT_MODEL,\r\n    PHONE_LOG_ID,\r\n} from \"../../../../../../constants/reauthorization-request-dashboard\";\r\nimport SaveLogModal from \"../SaveLogModal\";\r\nimport { createLog } from \"../../../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport NotificationsContext from \"../../../../../../contexts/NotificationsContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport { setDataInTableAC } from \"../../../../../../store/reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport moment from \"moment-timezone\";\r\nimport { getSendMethodNameFromId } from \"../../../../../../utilities/reauthorizationRequestsDashboardUtils\";\r\nimport StageChangeHistoryModal from \"../StageChangeHistoryModal\";\r\n\r\nconst ActionsButton = ({ requestForm }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { tableData } = useSelector(\r\n        (state) =>\r\n            state.reauthorizationRequestsDashboard\r\n                .submittedReauthorizationRequestForms,\r\n    );\r\n\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showSendByEmailModal, setShowSendByEmailModal] = useState(false);\r\n    const [showSendByFaxModal, setShowSendByFaxModal] = useState(false);\r\n    const [showEmailLogModal, setShowEmailLogModal] = useState(false);\r\n    const [showFaxLogModal, setShowFaxLogModal] = useState(false);\r\n    const [showLogPhoneCallModal, setShowLogPhoneCallModal] = useState(false);\r\n    const [showStageHistory, setShowStageHistory] = useState(false);\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const dotsRef = useRef(null);\r\n    const menuRef = useRef(null);\r\n\r\n    const document = requestForm.document;\r\n\r\n    useOnClickOutside(menuRef, (e) => {\r\n        if (!dotsRef.current || !dotsRef.current.contains(e.target)) {\r\n            setShowMenu(false);\r\n        }\r\n    });\r\n\r\n    const toggleMenu = (e) => {\r\n        e.stopPropagation();\r\n        setShowMenu(!showMenu);\r\n    };\r\n\r\n    const getDocumentModel = () => {\r\n        const parts = document.document_type.split(\"\\\\\");\r\n        return parts[parts.length - 1];\r\n    };\r\n\r\n    const handleDownloadClick = () => {\r\n        const documentModel = getDocumentModel();\r\n\r\n        if (documentModel === PATIENT_DOCUMENT_MODEL) {\r\n            return window.open(\r\n                `/patient/download-document/${document.aws_document_name}`,\r\n                \"_blank\",\r\n            );\r\n        }\r\n\r\n        if (documentModel === PATIENT_ELECTRONIC_DOCUMENT_MODEL) {\r\n            return window.open(\r\n                `/patient/electronic-document/${document.id}/download`,\r\n                \"_blank\",\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleSendViaEmailClick = () => {\r\n        setShowSendByEmailModal(true);\r\n    };\r\n\r\n    const handleSendViaFaxClick = () => {\r\n        setShowSendByFaxModal(true);\r\n    };\r\n\r\n    const handleEmailLogClick = () => {\r\n        setShowEmailLogModal(true);\r\n    };\r\n\r\n    const handleFaxLogClick = () => {\r\n        setShowFaxLogModal(true);\r\n    };\r\n\r\n    const handleLogPhoneCallClick = () => {\r\n        setShowLogPhoneCallModal(true);\r\n    };\r\n\r\n    const handleStageHistoryClick = () => {\r\n        setShowStageHistory(true);\r\n    };\r\n\r\n    const handleCloseStageHistory = () => {\r\n        setShowStageHistory(false);\r\n    };\r\n\r\n    const handleCloseSendViaEmailModal = () => {\r\n        setShowSendByEmailModal(false);\r\n    };\r\n\r\n    const handleCloseSendViaFaxModal = () => {\r\n        setShowSendByFaxModal(false);\r\n    };\r\n\r\n    const handleCloseEmailLogModal = () => {\r\n        setShowEmailLogModal(false);\r\n    };\r\n\r\n    const handleCloseFaxLogModal = () => {\r\n        setShowFaxLogModal(false);\r\n    };\r\n\r\n    const handleCloseLogPhoneCallModal = () => {\r\n        setShowLogPhoneCallModal(false);\r\n    };\r\n\r\n    const handleCreateLog = async (log_type, comment) => {\r\n        const payload = { log_type, comment };\r\n        const response = await createLog(requestForm.id, payload);\r\n\r\n        const newTableData = tableData.map((row) => {\r\n            if (row.id === requestForm.id) {\r\n                const newLog = response.data;\r\n                const newLogs = _.cloneDeep(row.logs);\r\n                newLogs.unshift(newLog);\r\n                return {\r\n                    ...row,\r\n                    send_method: getSendMethodNameFromId(newLog.log_type),\r\n                    sent_at: moment(newLog.created_at).format(\"MM/DD/YYYY\"),\r\n                    logs: newLogs,\r\n                };\r\n            }\r\n            return row;\r\n        });\r\n\r\n        dispatch(\r\n            setDataInTableAC({\r\n                tableName: \"submittedReauthorizationRequestForms\",\r\n                value: newTableData,\r\n            }),\r\n        );\r\n\r\n        enqueueNotification(\"Success\", \"Log successfully created\");\r\n    };\r\n\r\n    const handleSaveEmailLog = (comment) => {\r\n        handleCreateLog(EMAIL_LOG_ID, comment);\r\n    };\r\n\r\n    const handleSaveFaxLog = (comment) => {\r\n        handleCreateLog(FAX_LOG_ID, comment);\r\n    };\r\n\r\n    const handleSaveLogPhoneCall = (comment) => {\r\n        handleCreateLog(PHONE_LOG_ID, comment);\r\n    };\r\n\r\n    const createLogModals = [\r\n        {\r\n            handleClick: handleSaveEmailLog,\r\n            show: showEmailLogModal,\r\n            closeModal: handleCloseEmailLogModal,\r\n            title: \"Log Sending via Email\",\r\n        },\r\n        {\r\n            handleClick: handleSaveFaxLog,\r\n            show: showFaxLogModal,\r\n            closeModal: handleCloseFaxLogModal,\r\n            title: \"Log Sending via Fax\",\r\n        },\r\n        {\r\n            handleClick: handleSaveLogPhoneCall,\r\n            show: showLogPhoneCallModal,\r\n            closeModal: handleCloseLogPhoneCallModal,\r\n            title: \"Log Phone Call\",\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.actionsButton} onClick={toggleMenu}>\r\n                <div ref={dotsRef}>\r\n                    <Icon path={mdiDotsVertical} size={1} />\r\n                </div>\r\n                {showMenu && (\r\n                    <div ref={menuRef} className={styles.menuDialog}>\r\n                        {document ? (\r\n                            <div>\r\n                                <div\r\n                                    className={styles.menuItem}\r\n                                    onClick={handleDownloadClick}>\r\n                                    Download\r\n                                </div>\r\n                                <div\r\n                                    className={styles.menuItem}\r\n                                    onClick={handleSendViaEmailClick}>\r\n                                    Send via Email\r\n                                </div>\r\n                                <div\r\n                                    className={styles.menuItem}\r\n                                    onClick={handleEmailLogClick}>\r\n                                    Log Sending via Email\r\n                                </div>\r\n                                <div\r\n                                    className={styles.menuItem}\r\n                                    onClick={handleSendViaFaxClick}>\r\n                                    Send via Fax\r\n                                </div>\r\n                                <div\r\n                                    className={styles.menuItem}\r\n                                    onClick={handleFaxLogClick}>\r\n                                    Log Sending via Fax\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            <div\r\n                                className={styles.menuItem}\r\n                                onClick={handleLogPhoneCallClick}>\r\n                                Log Phone Call\r\n                            </div>\r\n                        )}\r\n                        <div\r\n                            className={styles.menuItem}\r\n                            onClick={handleStageHistoryClick}>\r\n                            Show Stage History\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <SendDocumentByEmailModal\r\n                document={document}\r\n                show={showSendByEmailModal}\r\n                closeModal={handleCloseSendViaEmailModal}\r\n            />\r\n            <SendDocumentByFaxModal\r\n                document={document}\r\n                show={showSendByFaxModal}\r\n                closeModal={handleCloseSendViaFaxModal}\r\n            />\r\n            {createLogModals.map((modal, index) => (\r\n                <SaveLogModal\r\n                    key={index}\r\n                    handleClick={modal.handleClick}\r\n                    show={modal.show}\r\n                    closeModal={modal.closeModal}\r\n                    title={modal.title}\r\n                />\r\n            ))}\r\n            <StageChangeHistoryModal\r\n                requestForm={requestForm}\r\n                show={showStageHistory}\r\n                closeModal={handleCloseStageHistory}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActionsButton;\r\n","import React, { useState } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"react-bootstrap\";\r\nimport classNames from \"classnames\";\r\nimport CircleLoaderWithOverlay from \"../../../../../../components/CircleLoaderWithOverlay\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ChangeStageIcon from \"../../../../../../assets/icons/change-stage.svg\";\r\n\r\nconst CommentModal = ({ show, closeModal, handleClick, requestForm, newStageId }) => {\r\n    const { stages } = useSelector(\r\n        (state) => state.reauthorizationRequestsDashboard.submittedReauthorizationRequestForms,\r\n    );\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    if (!requestForm || !newStageId) {\r\n        return <></>;\r\n    }\r\n\r\n    const oldStageName = stages.find((stage) => stage.id === requestForm.stage).name;\r\n    const newStageName = stages.find((stage) => stage.id === newStageId).name;\r\n\r\n    const resetModal = () => {\r\n        setComment(\"\");\r\n        setErrors(\"\");\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n        resetModal();\r\n        closeModal();\r\n    };\r\n\r\n    const handleCommentInput = (e) => {\r\n        if (comment.length > 0) {\r\n            setErrors({});\r\n        }\r\n\r\n        setComment(e.target.value);\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (comment.length === 0) {\r\n            errors.comment = true;\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const confirmClick = async () => {\r\n        if (!validate()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n        await handleClick(comment);\r\n        setIsLoading(false);\r\n        closeModal();\r\n        resetModal();\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"sm\"\r\n            onHide={closeModal}\r\n            centered\r\n            className={\"custom-modal\"}>\r\n            <ModalHeader closeButton>\r\n                <div>Change stage: {requestForm.patient_name}</div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"d-flex align-items-center gap-2 fs-16\">\r\n                    <div>\r\n                        From:{\" \"}\r\n                        <span className=\"stage\">\"{oldStageName}\"</span>\r\n                    </div>\r\n                    <img src={ChangeStageIcon} alt=\"change-stage-icon\"/>\r\n                    <div>\r\n                        To: <span className=\"stage\">\"{newStageName}\"</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"custom-form-group\">\r\n                    <label>\r\n                        Comment <span className={\"text-danger\"}>*</span>\r\n                    </label>\r\n                    <input\r\n                        placeholder=\"Add your comment...\"\r\n                        className={classNames(\r\n                            \"form-control\",\r\n                            !!errors.comment && \"is-invalid\",\r\n                        )}\r\n                        style={{ backgroundColor: \"#fcfcfc\" }}\r\n                        autoFocus\r\n                        value={comment}\r\n                        onChange={handleCommentInput}\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        Comment field is required.\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-end gap-2\">\r\n                        <button\r\n                            className=\"btn btn-large btn-outline-primary\"\r\n                            onClick={handleModalCancel}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-large btn-primary\"\r\n                            onClick={confirmClick}>\r\n                            Confirm\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            {isLoading && <CircleLoaderWithOverlay />}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CommentModal;\r\n","import { createTheme } from \"@mui/material\";\r\n\r\nexport const datepickerTheme = createTheme({\r\n    components: {\r\n        MuiInputBase: {\r\n            styleOverrides: {\r\n                root: {\r\n                    height: \"44px\",\r\n                    backgroundColor: \"#fcfcfc\",\r\n                    fontSize: \"14px\",\r\n                    color: \"inherit\",\r\n                    font: \"inherit\",\r\n                },\r\n            },\r\n        },\r\n        MuiOutlinedInput: {\r\n            styleOverrides: {\r\n                root: ({ ownerState }) => ({\r\n                    ...(ownerState.focused && {\r\n                        boxShadow: \"0 0 0 0.25rem rgba(45, 133, 201, 0.25)\",\r\n                    }),\r\n                }),\r\n                notchedOutline: ({ ownerState }) => ({\r\n                    border: \"1px solid #ced4da !important\",\r\n                }),\r\n            },\r\n        },\r\n    },\r\n});\r\n","import classNames from \"classnames\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"react-bootstrap\";\r\nimport CircleLoaderWithOverlay from \"../../../../../../components/CircleLoaderWithOverlay\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport dayjs from \"dayjs\";\r\nimport { ThemeProvider } from \"@mui/material\";\r\nimport { datepickerTheme } from \"../../date-picker-theme\";\r\nimport NotificationsContext from \"../../../../../../contexts/NotificationsContext\";\r\nimport { saveFutureInsuranceReauthorizationData } from \"../../../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport {APPROVAL_RECEIVED_STAGE_ID} from \"../../../../../../constants/reauthorization-request-dashboard\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ChangeStageIcon from \"../../../../../../assets/icons/change-stage.svg\";\r\n\r\nconst ApprovalReceivedStageModal = ({\r\n    parentCallback,\r\n    show,\r\n    closeModal,\r\n    requestForm,\r\n}) => {\r\n    const { stages } = useSelector(\r\n        (state) => state.reauthorizationRequestsDashboard.submittedReauthorizationRequestForms,\r\n    );\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const initialFormData = {\r\n        auth_number: \"\",\r\n        visits_auth: \"\",\r\n        eff_start_date: \"\",\r\n        eff_stop_date: \"\",\r\n        comment: \"\",\r\n    };\r\n    const [formData, setFormData] = useState(initialFormData);\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    if (!requestForm) {\r\n        return <></>;\r\n    }\r\n\r\n    const inputBackgroundColor = \"#fcfcfc\";\r\n\r\n    const oldStageName = stages.find((stage) => stage.id === requestForm.stage).name;\r\n    const newStageName = stages.find((stage) => stage.id === APPROVAL_RECEIVED_STAGE_ID).name;\r\n\r\n    const resetModal = () => {\r\n        setFormData(initialFormData);\r\n        setErrors({});\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n        resetModal();\r\n        closeModal();\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        if (!formData.comment) {\r\n            errors.comment = true;\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleUpdateClick = async () => {\r\n        try {\r\n            if (!validate()) {\r\n                return;\r\n            }\r\n\r\n            setIsLoading(true);\r\n\r\n            const payload = {\r\n                auth_number: formData.auth_number,\r\n                visits_auth: formData.visits_auth,\r\n                eff_start_date: formData.eff_start_date,\r\n                eff_stop_date: formData.eff_stop_date,\r\n            };\r\n            await saveFutureInsuranceReauthorizationData(requestForm.id, payload);\r\n\r\n            await parentCallback(payload, formData.comment);\r\n\r\n            handleModalCancel();\r\n        } catch (e) {\r\n            enqueueNotification(\"Error\", \"Something went wrong\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setFormData({ ...formData, [key]: value });\r\n        if (errors[key]) {\r\n            setErrors({ ...errors, [key]: \"\" });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"sm\"\r\n            onHide={closeModal}\r\n            centered\r\n            className={\"custom-modal\"}>\r\n            <ModalHeader closeButton>\r\n                <div>Change stage: {requestForm.patient_name}</div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"d-flex align-items-center gap-2 fs-16\">\r\n                    <div>\r\n                        From:{\" \"}\r\n                        <span className=\"stage\">\"{oldStageName}\"</span>\r\n                    </div>\r\n                    <img src={ChangeStageIcon} alt=\"change-stage-icon\" />\r\n                    <div>\r\n                        To: <span className=\"stage\">\"{newStageName}\"</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"custom-form-group\">\r\n                    <label>\r\n                        Comment <span className={\"text-danger\"}>*</span>\r\n                    </label>\r\n                    <input\r\n                        placeholder=\"Add your comment...\"\r\n                        className={classNames(\r\n                            \"form-control\",\r\n                            !!errors.comment && \"is-invalid\",\r\n                        )}\r\n                        style={{ backgroundColor: inputBackgroundColor }}\r\n                        autoFocus\r\n                        value={formData.comment}\r\n                        onChange={(e) =>\r\n                            handleInputChange(\"comment\", e.target.value)\r\n                        }\r\n                    />\r\n                    <div className=\"invalid-feedback\">\r\n                        Comment field is required.\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex gap-2\">\r\n                    <div className=\"custom-form-group flex-grow-1\">\r\n                        <label>Authorization Number</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            style={{ backgroundColor: inputBackgroundColor }}\r\n                            value={formData.auth_number}\r\n                            onChange={(e) =>\r\n                                handleInputChange(\"auth_number\", e.target.value)\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"custom-form-group flex-grow-1\">\r\n                        <label>No. of Visits Authorized</label>\r\n                        <input\r\n                            className=\"form-control\"\r\n                            style={{ backgroundColor: inputBackgroundColor }}\r\n                            value={formData.visits_auth}\r\n                            onChange={(e) =>\r\n                                handleInputChange(\"visits_auth\", e.target.value)\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex gap-2\">\r\n                    <div className=\"custom-form-group w-100\">\r\n                        <label>Eff. Start Date</label>\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            <ThemeProvider theme={datepickerTheme}>\r\n                                <DatePicker\r\n                                    value={\r\n                                        formData.eff_start_date\r\n                                            ? dayjs(formData.eff_start_date)\r\n                                            : null\r\n                                    }\r\n                                    onChange={(value) =>\r\n                                        handleInputChange(\r\n                                            \"eff_start_date\",\r\n                                            dayjs(value).format(\"YYYY-MM-DD\"),\r\n                                        )\r\n                                    }\r\n                                    openTo=\"year\"\r\n                                />\r\n                            </ThemeProvider>\r\n                        </LocalizationProvider>\r\n\r\n                        <input\r\n                            readOnly\r\n                            hidden\r\n                            className=\"form-control\"\r\n                            value={formData.eff_start_date}\r\n                            type=\"date\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"custom-form-group w-100\">\r\n                        <label>Eff. Stop Date</label>\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            <ThemeProvider theme={datepickerTheme}>\r\n                                <DatePicker\r\n                                    value={\r\n                                        formData.eff_stop_date\r\n                                            ? dayjs(formData.eff_stop_date)\r\n                                            : null\r\n                                    }\r\n                                    onChange={(value) =>\r\n                                        handleInputChange(\r\n                                            \"eff_stop_date\",\r\n                                            dayjs(value).format(\"YYYY-MM-DD\"),\r\n                                        )\r\n                                    }\r\n                                    openTo={\"year\"}\r\n                                />\r\n                            </ThemeProvider>\r\n                        </LocalizationProvider>\r\n\r\n                        <input\r\n                            readOnly\r\n                            hidden\r\n                            className=\"form-control\"\r\n                            value={formData.eff_stop_date}\r\n                            type=\"date\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-end gap-2\">\r\n                        <button\r\n                            className=\"btn btn-large btn-outline-primary\"\r\n                            onClick={handleModalCancel}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-large btn-primary\"\r\n                            onClick={handleUpdateClick}>\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            {isLoading && <CircleLoaderWithOverlay />}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ApprovalReceivedStageModal;\r\n","import classNames from \"classnames\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"react-bootstrap\";\r\nimport CircleLoaderWithOverlay from \"../../../../../../components/CircleLoaderWithOverlay\";\r\nimport { updateAuthNumber } from \"../../../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport dayjs from \"dayjs\";\r\nimport { ThemeProvider } from \"@mui/material\";\r\nimport { datepickerTheme } from \"../../date-picker-theme\";\r\nimport NotificationsContext from \"../../../../../../contexts/NotificationsContext\";\r\nimport {\r\n    AUTH_UPDATED_STAGE_ID\r\n} from \"../../../../../../constants/reauthorization-request-dashboard\";\r\nimport {useSelector} from \"react-redux\";\r\nimport ChangeStageIcon from \"../../../../../../assets/icons/change-stage.svg\";\r\n\r\nconst AuthUpdatedStageModal = ({\r\n    parentCallback,\r\n    show,\r\n    closeModal,\r\n    requestForm,\r\n}) => {\r\n    const { stages } = useSelector(\r\n        (state) => state.reauthorizationRequestsDashboard.submittedReauthorizationRequestForms,\r\n    );\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getInitialFormData = () => {\r\n        let initialFormData = {\r\n            patient_id: requestForm.patient_id,\r\n            auth_number: \"\",\r\n            visits_auth: \"\",\r\n            eff_start_date: \"\",\r\n            eff_stop_date: \"\",\r\n        };\r\n\r\n        if (requestForm.future_auth_number_data) {\r\n            initialFormData.auth_number =\r\n                requestForm.future_auth_number_data.auth_number || \"\";\r\n            initialFormData.visits_auth =\r\n                requestForm.future_auth_number_data.visits_auth || \"\";\r\n            initialFormData.visits_auth =\r\n                requestForm.future_auth_number_data.visits_auth || \"\";\r\n            initialFormData.eff_start_date =\r\n                requestForm.future_auth_number_data.eff_start_date || \"\";\r\n            initialFormData.eff_stop_date =\r\n                requestForm.future_auth_number_data.eff_stop_date || \"\";\r\n        }\r\n\r\n        return initialFormData;\r\n    };\r\n    const initialFormData = getInitialFormData();\r\n\r\n    const [formData, setFormData] = useState(initialFormData);\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    useEffect(() => {\r\n        const initialFormData = getInitialFormData();\r\n\r\n        if (formData !== initialFormData) {\r\n            setFormData(initialFormData);\r\n        }\r\n    }, [requestForm]);\r\n\r\n    if (!requestForm) {\r\n        return <></>;\r\n    }\r\n\r\n    const oldStageName = stages.find((stage) => stage.id === requestForm.stage).name;\r\n    const newStageName = stages.find((stage) => stage.id === AUTH_UPDATED_STAGE_ID).name;\r\n\r\n    const resetModal = () => {\r\n        setFormData(initialFormData);\r\n        setErrors({});\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const handleModalCancel = () => {\r\n        resetModal();\r\n        closeModal();\r\n    };\r\n\r\n    const validate = () => {\r\n        let errors = {};\r\n\r\n        for (const key in formData) {\r\n            if (!formData[key]) {\r\n                errors[key] = true;\r\n            }\r\n        }\r\n\r\n        setErrors(errors);\r\n\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const handleUpdateClick = async () => {\r\n        try {\r\n            if (!validate()) {\r\n                return;\r\n            }\r\n\r\n            setIsLoading(true);\r\n\r\n            await updateAuthNumber(formData);\r\n\r\n            enqueueNotification(\r\n                \"Success\",\r\n                \"Authorization number successfully updated\",\r\n            );\r\n\r\n            await parentCallback(formData);\r\n\r\n            handleModalCancel();\r\n        } catch (e) {\r\n            enqueueNotification(\"Error\", \"Something went wrong\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setFormData({ ...formData, [key]: value });\r\n        if (errors[key]) {\r\n            setErrors({ ...errors, [key]: \"\" });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"sm\"\r\n            onHide={closeModal}\r\n            centered\r\n            className={\"custom-modal\"}>\r\n            <ModalHeader closeButton>\r\n                <div>Change stage: {requestForm.patient_name}</div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"d-flex align-items-center gap-2 fs-16\">\r\n                    <div>\r\n                        From:{\" \"}\r\n                        <span className=\"stage\">\"{oldStageName}\"</span>\r\n                    </div>\r\n                    <img src={ChangeStageIcon} alt=\"change-stage-icon\" />\r\n                    <div>\r\n                        To: <span className=\"stage\">\"{newStageName}\"</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex gap-2\">\r\n                    <div className=\"custom-form-group flex-grow-1\">\r\n                        <label>\r\n                            Authorization Number{\" \"}\r\n                            <span className={\"text-danger\"}>*</span>\r\n                        </label>\r\n                        <input\r\n                            className={classNames(\r\n                                \"form-control\",\r\n                                !!errors.auth_number && \"is-invalid\",\r\n                            )}\r\n                            style={{ backgroundColor: \"#fcfcfc\" }}\r\n                            autoFocus\r\n                            value={formData.auth_number}\r\n                            onChange={(e) =>\r\n                                handleInputChange(\"auth_number\", e.target.value)\r\n                            }\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            Auth Number field is required\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"custom-form-group flex-grow-1\">\r\n                        <label>\r\n                            No. of Visits Authorized{\" \"}\r\n                            <span className={\"text-danger\"}>*</span>\r\n                        </label>\r\n                        <input\r\n                            className={classNames(\r\n                                \"form-control\",\r\n                                !!errors.visits_auth && \"is-invalid\",\r\n                            )}\r\n                            style={{ backgroundColor: \"#fcfcfc\" }}\r\n                            value={formData.visits_auth}\r\n                            onChange={(e) =>\r\n                                handleInputChange(\"visits_auth\", e.target.value)\r\n                            }\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            No. of Visits Authorized field is required\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex gap-2\">\r\n                    <div className=\"custom-form-group w-100\">\r\n                        <label>\r\n                            Eff. Start Date{\" \"}\r\n                            <span className=\"text-danger\">*</span>\r\n                        </label>\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            <ThemeProvider theme={datepickerTheme}>\r\n                                <DatePicker\r\n                                    defaultValue={\r\n                                        formData.eff_start_date\r\n                                            ? dayjs(formData.eff_start_date)\r\n                                            : null\r\n                                    }\r\n                                    value={\r\n                                        formData.eff_start_date\r\n                                            ? dayjs(formData.eff_start_date)\r\n                                            : null\r\n                                    }\r\n                                    onChange={(value) =>\r\n                                        handleInputChange(\r\n                                            \"eff_start_date\",\r\n                                            dayjs(value).format(\"YYYY-MM-DD\"),\r\n                                        )\r\n                                    }\r\n                                    openTo=\"year\"\r\n                                />\r\n                            </ThemeProvider>\r\n                        </LocalizationProvider>\r\n\r\n                        <input\r\n                            readOnly\r\n                            hidden\r\n                            className={classNames(\r\n                                \"form-control\",\r\n                                errors.eff_start_date && \"is-invalid\",\r\n                            )}\r\n                            value={formData.eff_start_date}\r\n                            type=\"date\"\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            Eff. Start Date field is required\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"custom-form-group w-100\">\r\n                        <label>\r\n                            Eff. Stop Date{\" \"}\r\n                            <span className=\"text-danger\">*</span>\r\n                        </label>\r\n                        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n                            <ThemeProvider theme={datepickerTheme}>\r\n                                <DatePicker\r\n                                    defaultValue={\r\n                                        formData.eff_stop_date\r\n                                            ? dayjs(formData.eff_stop_date)\r\n                                            : null\r\n                                    }\r\n                                    value={\r\n                                        formData.eff_stop_date\r\n                                            ? dayjs(formData.eff_stop_date)\r\n                                            : null\r\n                                    }\r\n                                    onChange={(value) =>\r\n                                        handleInputChange(\r\n                                            \"eff_stop_date\",\r\n                                            dayjs(value).format(\"YYYY-MM-DD\"),\r\n                                        )\r\n                                    }\r\n                                    openTo={\"year\"}\r\n                                />\r\n                            </ThemeProvider>\r\n                        </LocalizationProvider>\r\n\r\n                        <input\r\n                            readOnly\r\n                            hidden\r\n                            className={classNames(\r\n                                \"form-control\",\r\n                                errors.eff_stop_date && \"is-invalid\",\r\n                            )}\r\n                            value={formData.eff_stop_date}\r\n                            type=\"date\"\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            Eff. Stop Date field is required\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className=\"d-flex justify-content-end gap-2\">\r\n                        <button\r\n                            className=\"btn btn-large btn-outline-primary\"\r\n                            onClick={handleModalCancel}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"btn btn-large btn-primary\"\r\n                            onClick={handleUpdateClick}>\r\n                            Update\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </ModalBody>\r\n            {isLoading && <CircleLoaderWithOverlay />}\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AuthUpdatedStageModal;\r\n","import React, { useContext, useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment-timezone\";\r\nimport classNames from \"classnames\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { getSelectStyles } from \"../../../../../../utilities/react-select-styles\";\r\nimport NotificationsContext from \"../../../../../../contexts/NotificationsContext\";\r\nimport {\r\n    changeReauthorizationRequestFormStage\r\n} from \"../../../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport {\r\n    APPROVAL_RECEIVED_STAGE_ID,\r\n    AUTH_UPDATED_STAGE_ID,\r\n} from \"../../../../../../constants/reauthorization-request-dashboard\";\r\n\r\nimport * as ReauthorizationRequestsDashboardReducer from \"../../../../../../store/reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport CommentModal from \"../CommentModal\";\r\nimport HelpIcon from \"../../../../../../components/HelpIcon\";\r\nimport ApprovalReceivedStageModal from \"../ApprovalReceivedStageModal\";\r\nimport styles from \"./index.module.scss\";\r\nimport AuthUpdatedStageModal from \"../AuthUpdatedStageModal\";\r\nimport {getStageChangeHistory} from \"../../../../../../utilities/reauthorizationRequestsDashboardUtils\";\r\n\r\nconst StageSelect = ({ requestForm }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { tableData, tableParams, stages, selectedStages } = useSelector(\r\n        (state) =>\r\n            state.reauthorizationRequestsDashboard\r\n                .submittedReauthorizationRequestForms,\r\n    );\r\n\r\n    const [showCommentModal, setShowCommentModal] = useState(false);\r\n    const [showApprovalReceivedStageModal, setShowApprovalReceivedStageModal] =\r\n        useState(false);\r\n    const [showAuthUpdatedStageModal, setShowAuthUpdatedStageModal] =\r\n        useState(false);\r\n    const [selectedStageId, setSelectedStageId] = useState(null);\r\n\r\n    const tableName = \"submittedReauthorizationRequestForms\";\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const getCurrentStageValue = () => {\r\n        const currentStage = stages.find(\r\n            (stage) => stage.id === requestForm.stage,\r\n        );\r\n\r\n        return { value: currentStage.id, label: currentStage.name };\r\n    };\r\n\r\n    const calculateLastPage = (total) => {\r\n        return Math.max(1, Math.ceil(total / tableParams.per_page));\r\n    };\r\n\r\n    const updateTableData = (newData) => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReducer.setDataInTableAC({\r\n                tableName,\r\n                value: newData,\r\n            }),\r\n        );\r\n\r\n        if (newData.length !== tableParams.total) {\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setTotalInTableAC({\r\n                    tableName,\r\n                    value: newData.length,\r\n                }),\r\n            );\r\n        }\r\n\r\n        const lastPage = calculateLastPage(newData.length);\r\n\r\n        if (lastPage !== tableParams.last_page) {\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setLastPageInTableAC({\r\n                    tableName,\r\n                    value: lastPage,\r\n                }),\r\n            );\r\n        }\r\n    };\r\n\r\n    const handleSaveCommentClick = async (comment) => {\r\n        return await setStage(selectedStageId, comment);\r\n    };\r\n\r\n    const handleChangeStageToApprovalReceived = async (\r\n        authNumberData,\r\n        comment,\r\n    ) => {\r\n        const newData = tableData\r\n            .filter((el) => {\r\n                if (el.id === requestForm.id && selectedStages.length > 0) {\r\n                    return selectedStages.some(\r\n                        (stage) => stage.value === APPROVAL_RECEIVED_STAGE_ID,\r\n                    );\r\n                }\r\n                return true;\r\n            })\r\n            .map((el) => {\r\n                if (el.id === requestForm.id) {\r\n                    return {\r\n                        ...el,\r\n                        stage: APPROVAL_RECEIVED_STAGE_ID,\r\n                        stage_changed_on: moment().format(\"MM/DD/YYYY\"),\r\n                        future_auth_number_data: authNumberData,\r\n                        stage_comment: comment,\r\n                    };\r\n                }\r\n                return el;\r\n            });\r\n\r\n        await setStage(APPROVAL_RECEIVED_STAGE_ID, comment);\r\n\r\n        updateTableData(newData);\r\n    };\r\n\r\n    const handleChangeStageToAuthUpdated = async (authNumberData) => {\r\n        const newData = tableData\r\n            .filter((el) => {\r\n                if (el.id === requestForm.id && selectedStages.length > 0) {\r\n                    return selectedStages.some(\r\n                        (stage) => stage.value === APPROVAL_RECEIVED_STAGE_ID,\r\n                    );\r\n                }\r\n                return true;\r\n            })\r\n            .map((el) => {\r\n                if (el.id === requestForm.id) {\r\n                    return {\r\n                        ...el,\r\n                        stage: AUTH_UPDATED_STAGE_ID,\r\n                        stage_changed_on: moment().format(\"MM/DD/YYYY\"),\r\n                        auth_number_data: {\r\n                            ...el.auth_number_data,\r\n                            insurance_authorization_number:\r\n                                authNumberData.auth_number,\r\n                            insurance_visits_auth: authNumberData.visits_auth,\r\n                            insurance_visits_auth_left:\r\n                                authNumberData.visits_auth,\r\n                            insurance_eff_start_date:\r\n                                authNumberData.eff_start_date,\r\n                            insurance_eff_stop_date:\r\n                                authNumberData.eff_stop_date,\r\n                        },\r\n                        stage_comment: '',\r\n                    };\r\n                }\r\n                return el;\r\n            });\r\n\r\n        await setStage(AUTH_UPDATED_STAGE_ID);\r\n\r\n        updateTableData(newData);\r\n    };\r\n\r\n    const setStage = async (stageId, comment = null) => {\r\n        const response = await changeReauthorizationRequestFormStage(requestForm.id, {\r\n            stage_id: stageId,\r\n            comment,\r\n        });\r\n\r\n        const newRequestForm = response.data;\r\n\r\n        const newData = tableData\r\n            .filter((el) => {\r\n                if (el.id === requestForm.id && selectedStages.length > 0) {\r\n                    return selectedStages.some(\r\n                        (stage) => stage.value === stageId,\r\n                    );\r\n                }\r\n                return true;\r\n            })\r\n            .map((el) => {\r\n                if (el.id === requestForm.id) {\r\n                    return {\r\n                        ...el,\r\n                        stage: stageId,\r\n                        stage_changed_on: moment().format(\"MM/DD/YYYY\"),\r\n                        stage_comment: comment,\r\n                        stage_change_history: getStageChangeHistory(newRequestForm),\r\n                    };\r\n                }\r\n                return el;\r\n            });\r\n\r\n        setSelectedStageId(null);\r\n\r\n        updateTableData(newData);\r\n        enqueueNotification(\"Success\", \"Stage successfully changed\");\r\n    };\r\n\r\n    const setStageHandle = (stageId) => {\r\n        setSelectedStageId(stageId);\r\n\r\n        if (stageId === APPROVAL_RECEIVED_STAGE_ID) {\r\n            return setShowApprovalReceivedStageModal(true);\r\n        }\r\n\r\n        if (stageId === AUTH_UPDATED_STAGE_ID) {\r\n            return setShowAuthUpdatedStageModal(true);\r\n        }\r\n\r\n        return setShowCommentModal(true);\r\n    };\r\n\r\n    const selectStyles = getSelectStyles({\r\n        backgroundColor: \"rgb(243, 246, 249)\",\r\n        fontSize: \"12px\",\r\n    });\r\n    const customSelectStyles = {\r\n        ...selectStyles,\r\n        container: (baseStyles) => ({\r\n            ...baseStyles,\r\n            position: \"static\",\r\n            height: \"24px\",\r\n        }),\r\n        control: (baseStyles) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.menu,\r\n            height: \"24px\",\r\n            minHeight: \"1px\",\r\n        }),\r\n        menu: (baseStyles) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.menu,\r\n            top: \"\",\r\n            width: \"140px\",\r\n            transform: \"translateY(-4px)\",\r\n        }),\r\n        menuList: (baseStyles) => ({\r\n            ...baseStyles,\r\n            overflow: \"visible\",\r\n            maxHeight: \"fit-content\",\r\n        }),\r\n        indicatorsContainer: (baseStyles) => ({\r\n            ...baseStyles,\r\n            height: \"100%\",\r\n        }),\r\n        indicatorSeparator: (baseStyles) => ({\r\n            ...baseStyles,\r\n            height: \"14px\",\r\n            margin: \"4px 0\",\r\n        }),\r\n    };\r\n\r\n    const getHelpIconWithTooltip = () => {\r\n        if (requestForm.stage === APPROVAL_RECEIVED_STAGE_ID) {\r\n            let authNumber = \"N/A\";\r\n            let visitsAuth = \"N/A\";\r\n            let effStartDate = \"N/A\";\r\n            let effStopDate = \"N/A\";\r\n\r\n            if (requestForm.future_auth_number_data) {\r\n                authNumber =\r\n                    requestForm.future_auth_number_data.auth_number || \"N/A\";\r\n                visitsAuth =\r\n                    requestForm.future_auth_number_data.visits_auth || \"N/A\";\r\n                effStartDate = requestForm.future_auth_number_data\r\n                    .eff_start_date\r\n                    ? moment(\r\n                          requestForm.future_auth_number_data.eff_start_date,\r\n                      ).format(\"MM/DD/YYYY\")\r\n                    : \"N/A\";\r\n                effStopDate = requestForm.future_auth_number_data.eff_stop_date\r\n                    ? moment(\r\n                          requestForm.future_auth_number_data.eff_stop_date,\r\n                      ).format(\"MM/DD/YYYY\")\r\n                    : \"N/A\";\r\n            }\r\n\r\n            return (\r\n                <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={\r\n                        <Tooltip style={{ maxWidth: \"300px\" }}>\r\n                            <div>\r\n                                <div className=\"d-flex gap-1 align-items-center\">\r\n                                    <span className={styles.tooltipFieldName}>\r\n                                        Comment:\r\n                                    </span>\r\n                                    <span>{requestForm.stage_comment}</span>\r\n                                </div>\r\n\r\n                                <hr className=\"m-0 mb-1 mt-1\" />\r\n\r\n                                <div className=\"d-flex gap-1 align-items-center\">\r\n                                    <span className={styles.tooltipFieldName}>\r\n                                        Authorization Number:\r\n                                    </span>\r\n                                    <span>{authNumber}</span>\r\n                                </div>\r\n                                <div className=\"d-flex gap-1 align-items-center\">\r\n                                    <span className={styles.tooltipFieldName}>\r\n                                        Visits Auth:\r\n                                    </span>\r\n                                    <span>{visitsAuth}</span>\r\n                                </div>\r\n                                <div className=\"d-flex gap-1 align-items-center\">\r\n                                    <span className={styles.tooltipFieldName}>\r\n                                        Eff. Start Date:\r\n                                    </span>\r\n                                    <span>{effStartDate}</span>\r\n                                </div>\r\n                                <div className=\"d-flex gap-1 align-items-center\">\r\n                                    <span className={styles.tooltipFieldName}>\r\n                                        Eff. Stop Date:\r\n                                    </span>\r\n                                    <span>{effStopDate}</span>\r\n                                </div>\r\n                            </div>\r\n                        </Tooltip>\r\n                    }>\r\n                    <div>\r\n                        <HelpIcon />\r\n                    </div>\r\n                </OverlayTrigger>\r\n            );\r\n        }\r\n\r\n        if (requestForm.stage_comment) {\r\n            return (\r\n                <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={\r\n                        <Tooltip>\r\n                            <div>{requestForm.stage_comment}</div>\r\n                        </Tooltip>\r\n                    }>\r\n                    <div>\r\n                        <HelpIcon />\r\n                    </div>\r\n                </OverlayTrigger>\r\n            );\r\n        }\r\n\r\n        return <></>;\r\n    };\r\n\r\n    const isAlmostOverdue = () => {\r\n        if (!requestForm.auth_number_data) {\r\n            return false;\r\n        }\r\n\r\n        const {\r\n            insurance_authorization_number,\r\n            insurance_visits_auth_left,\r\n            insurance_eff_stop_date,\r\n            reauthorization_notification_days_count,\r\n            reauthorization_notification_visits_count,\r\n        } = requestForm.auth_number_data;\r\n\r\n        if (\r\n            !insurance_authorization_number ||\r\n            !insurance_visits_auth_left ||\r\n            !insurance_eff_stop_date\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        const daysDiff = moment(insurance_eff_stop_date, \"YYYY-MM-DD\").diff(\r\n            moment(),\r\n            \"days\",\r\n        );\r\n\r\n        if (daysDiff <= 0 || insurance_visits_auth_left <= 0) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            daysDiff <= reauthorization_notification_days_count ||\r\n            insurance_visits_auth_left <=\r\n                reauthorization_notification_visits_count\r\n        );\r\n    };\r\n\r\n    const isOverdue = () => {\r\n        if (!requestForm.auth_number_data) {\r\n            return true;\r\n        }\r\n\r\n        const {\r\n            insurance_authorization_number,\r\n            insurance_visits_auth_left,\r\n            insurance_eff_stop_date,\r\n        } = requestForm.auth_number_data;\r\n        if (\r\n            !insurance_authorization_number ||\r\n            !insurance_visits_auth_left ||\r\n            !insurance_eff_stop_date\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        const daysDiff = moment(insurance_eff_stop_date, \"YYYY-MM-DD\").diff(\r\n            moment(),\r\n            \"days\",\r\n        );\r\n\r\n        return daysDiff <= 0 || insurance_visits_auth_left <= 0;\r\n    };\r\n\r\n    const stageIsDisabled = (stageId) => {\r\n        if (requestForm.stage === stageId) {\r\n            return true;\r\n        }\r\n\r\n        if (stageId === AUTH_UPDATED_STAGE_ID) {\r\n            return !isOverdue() && !isAlmostOverdue();\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const closeCommentModal = () => {\r\n        setShowCommentModal(false);\r\n        setSelectedStageId(null);\r\n    }\r\n\r\n    const stageValue = getCurrentStageValue();\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center gap-1\">\r\n            <Select\r\n                value={stageValue}\r\n                onChange={(selectedOption) =>\r\n                    setStageHandle(selectedOption.value)\r\n                }\r\n                options={stages.map((item) => ({\r\n                    value: item.id,\r\n                    label: item.name,\r\n                    isDisabled: stageIsDisabled(item.id),\r\n                }))}\r\n                isSearchable={false}\r\n                styles={customSelectStyles}\r\n                className={classNames(styles.stageSelect, \"w-100\")}\r\n            />\r\n            <div>{getHelpIconWithTooltip()}</div>\r\n\r\n            <ApprovalReceivedStageModal\r\n                parentCallback={handleChangeStageToApprovalReceived}\r\n                show={showApprovalReceivedStageModal}\r\n                closeModal={() => setShowApprovalReceivedStageModal(false)}\r\n                requestForm={requestForm}\r\n            />\r\n\r\n            <AuthUpdatedStageModal\r\n                parentCallback={handleChangeStageToAuthUpdated}\r\n                show={showAuthUpdatedStageModal}\r\n                closeModal={() => setShowAuthUpdatedStageModal(false)}\r\n                requestForm={requestForm}\r\n            />\r\n\r\n            <CommentModal\r\n                handleClick={handleSaveCommentClick}\r\n                show={showCommentModal}\r\n                closeModal={() => closeCommentModal()}\r\n                requestForm={requestForm}\r\n                newStageId={selectedStageId}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StageSelect;\r\n","import moment from \"moment-timezone\";\r\nimport React from \"react\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport { mdiHelpCircle } from \"@mdi/js\";\r\nimport Icon from \"@mdi/react\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst InsuranceAuthorizationNumber = ({ authNumberData }) => {\r\n    const getAuthNumberValue = () => {\r\n        if (authNumberData && authNumberData.insurance_requires_verification) {\r\n            return authNumberData.insurance_authorization_number || \"N/A\";\r\n        }\r\n        return \"-\";\r\n    };\r\n\r\n    const getAuthorizationNumberTooltipText = () => {\r\n        if (\r\n            !authNumberData ||\r\n            !authNumberData.insurance_requires_verification\r\n        ) {\r\n            return null;\r\n        }\r\n\r\n        if (!authNumberData.insurance_authorization_number) {\r\n            return { __html: \"Authorization number is not set\" };\r\n        }\r\n\r\n        const {\r\n            insurance_visits_auth,\r\n            insurance_visits_auth_left,\r\n            insurance_eff_start_date,\r\n            insurance_eff_stop_date,\r\n        } = authNumberData;\r\n        return {\r\n            __html: `<div>\r\n        No. of Visits Authorized: ${insurance_visits_auth} <br />\r\n        No. of Visits Left: ${insurance_visits_auth_left} <br />\r\n        Eff. Start Date: ${\r\n            insurance_eff_start_date\r\n                ? moment(insurance_eff_start_date, \"YYYY-MM-DD\").format(\r\n                      \"MM/DD/YY\",\r\n                  )\r\n                : \"N/A\"\r\n        } <br />\r\n        Eff. Stop Date: ${\r\n            insurance_eff_stop_date\r\n                ? moment(insurance_eff_stop_date, \"YYYY-MM-DD\").format(\r\n                      \"MM/DD/YY\",\r\n                  )\r\n                : \"N/A\"\r\n        }\r\n        </div>`,\r\n        };\r\n    };\r\n\r\n    const isAlmostOverdue = () => {\r\n        if (!authNumberData) {\r\n            return false;\r\n        }\r\n\r\n        const {\r\n            insurance_requires_verification,\r\n            insurance_visits_auth_left,\r\n            insurance_eff_stop_date,\r\n            reauthorization_notification_visits_count,\r\n            reauthorization_notification_days_count,\r\n        } = authNumberData;\r\n\r\n        if (\r\n            insurance_requires_verification &&\r\n            insurance_visits_auth_left <=\r\n                reauthorization_notification_visits_count &&\r\n            insurance_visits_auth_left > 0\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        const currentDate = moment(moment().format(\"YYYY-MM-DD\"));\r\n        if (\r\n            insurance_requires_verification &&\r\n            insurance_eff_stop_date &&\r\n            moment(insurance_eff_stop_date).diff(currentDate, \"days\") <=\r\n                reauthorization_notification_days_count &&\r\n            moment(insurance_eff_stop_date).diff(currentDate, \"days\") > 0\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const isOverdue = () => {\r\n        if (!authNumberData) {\r\n            return false;\r\n        }\r\n\r\n        const {\r\n            insurance_requires_verification,\r\n            insurance_authorization_number,\r\n            insurance_visits_auth_left,\r\n            insurance_eff_stop_date,\r\n        } = authNumberData;\r\n\r\n        if (\r\n            insurance_requires_verification &&\r\n            !insurance_authorization_number\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        if (\r\n            insurance_requires_verification &&\r\n            insurance_visits_auth_left <= 0\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        const currentDate = moment(moment().format(\"YYYY-MM-DD\"));\r\n        if (\r\n            insurance_requires_verification &&\r\n            insurance_eff_stop_date &&\r\n            moment(insurance_eff_stop_date).diff(currentDate, \"days\") <= 0\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const getClassName = () => {\r\n        if (isOverdue()) {\r\n            return styles.overdue;\r\n        }\r\n        if (isAlmostOverdue()) {\r\n            return styles.almostOverdue;\r\n        }\r\n        return \"\";\r\n    };\r\n\r\n    const authNumber = getAuthNumberValue();\r\n    const tooltipText = getAuthorizationNumberTooltipText();\r\n    const className = getClassName();\r\n\r\n    return (\r\n        <div className=\"d-flex align-items-center gap-1\">\r\n            <div className={className}>{authNumber}</div>\r\n            {authNumberData && tooltipText && (\r\n                <OverlayTrigger\r\n                    placement=\"bottom\"\r\n                    overlay={\r\n                        <Tooltip>\r\n                            <div dangerouslySetInnerHTML={tooltipText}></div>\r\n                        </Tooltip>\r\n                    }>\r\n                    <div className={styles.helpIcon}>\r\n                        <Icon path={mdiHelpCircle} size={0.6} />\r\n                    </div>\r\n                </OverlayTrigger>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InsuranceAuthorizationNumber;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { createReauthorizationRequestForm } from \"../../../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport NotificationsContext from \"../../../../../../contexts/NotificationsContext\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment-timezone\";\r\nimport _ from \"lodash\";\r\nimport {\r\n    setCurrentPageInTableAC,\r\n    setDataInTableAC,\r\n    setLastPageInTableAC,\r\n    setTotalInTableAC,\r\n} from \"../../../../../../store/reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./index.module.scss\";\r\nimport CircleLoader from \"../../../../../../components/CircleLoader\";\r\n\r\nconst CreateRequestButton = ({ patientId }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { app, reauthorizationRequestsDashboard } = useSelector(\r\n        (state) => state,\r\n    );\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const { enqueueNotification } = useContext(NotificationsContext);\r\n\r\n    const getInsuranceAuthorizationNumberData = (patient) => {\r\n        if (!patient.insurance_plan) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            insurance_requires_verification: patient.insurance_plan.is_verification_required,\r\n            insurance_authorization_number: patient.auth_number,\r\n            insurance_visits_auth: patient.visits_auth,\r\n            insurance_visits_auth_left: patient.visits_auth_left,\r\n            insurance_eff_start_date: patient.eff_start_date,\r\n            insurance_eff_stop_date: patient.eff_stop_date,\r\n            reauthorization_notification_visits_count:\r\n                patient.insurance_plan.reauthorization_notification_visits_count,\r\n            reauthorization_notification_days_count:\r\n                patient.insurance_plan.reauthorization_notification_days_count,\r\n        };\r\n    };\r\n\r\n    const calculateLastPage = (total) => {\r\n        return Math.max(\r\n            1,\r\n            Math.ceil(\r\n                total /\r\n                    reauthorizationRequestsDashboard\r\n                        .submittedReauthorizationRequestForms.tableParams\r\n                        .per_page,\r\n            ),\r\n        );\r\n    };\r\n\r\n    const updateUpcomingReauthorizationRequestsTableData = () => {\r\n        const tableName = \"upcomingReauthorizationRequests\";\r\n\r\n        const { tableData } =\r\n            reauthorizationRequestsDashboard.upcomingReauthorizationRequests;\r\n\r\n        const newTableData = tableData.map((row) => {\r\n            if (row.patient_id === patientId) {\r\n                return { ...row, can_create_reauthorization_form: false };\r\n            }\r\n\r\n            return row;\r\n        });\r\n\r\n        dispatch(setDataInTableAC({ tableName, value: newTableData }));\r\n    };\r\n\r\n    const updateSubmittedReauthorizationRequestFormsTableData = (\r\n        newRequest,\r\n    ) => {\r\n        const tableName = \"submittedReauthorizationRequestForms\";\r\n        const user = app.user;\r\n        const patient = newRequest.patient;\r\n        const { tableData, tableParams } = reauthorizationRequestsDashboard.submittedReauthorizationRequestForms;\r\n        const newTableData = _.cloneDeep(tableData);\r\n\r\n        const newReauthorizationRequestForm = {\r\n            id: newRequest.id,\r\n            patient_id: patient.id,\r\n            patient_name: `${patient.first_name} ${patient.last_name}`,\r\n            insurance: patient.primary_insurance || patient.secondary_insurance || \"-\",\r\n            patient_status: patient.status,\r\n            logs:  [],\r\n            document: null,\r\n            auth_number_data: getInsuranceAuthorizationNumberData(patient),\r\n            submitted_by: `${user.firstname} ${user.lastname}`,\r\n            submitted_at: moment(newRequest.created_at).format(\"MM/DD/YYYY\"),\r\n            send_method: \"-\",\r\n            sent_at: \"-\",\r\n            stage: newRequest.stage_id,\r\n            stage_changed_on: newRequest.stage_changed_at\r\n                ? moment(newRequest.stage_changed_at).format(\"MM/DD/YYYY\")\r\n                : \"-\",\r\n            stage_comment: newRequest.comment,\r\n        };\r\n\r\n        newTableData.unshift(newReauthorizationRequestForm);\r\n\r\n        dispatch(setCurrentPageInTableAC({ tableName, value: 1 }));\r\n        dispatch(setDataInTableAC({ tableName, value: newTableData }));\r\n        dispatch(setTotalInTableAC({ tableName, value: newTableData.length }));\r\n\r\n        const lastPage = calculateLastPage(newTableData.length);\r\n\r\n        if (lastPage !== tableParams.last_page) {\r\n            dispatch(setLastPageInTableAC({ tableName, value: lastPage }));\r\n        }\r\n    };\r\n\r\n    const handleClick = () => {\r\n        setIsLoading(true);\r\n\r\n        const payload = {\r\n            patient_id: patientId,\r\n        };\r\n        createReauthorizationRequestForm(payload)\r\n            .then(({ data }) => {\r\n                updateUpcomingReauthorizationRequestsTableData();\r\n                updateSubmittedReauthorizationRequestFormsTableData(data);\r\n\r\n                enqueueNotification(\r\n                    \"Success\",\r\n                    \"Reauthorization request form successfully created\",\r\n                );\r\n            })\r\n            .finally(() => setIsLoading(false));\r\n    };\r\n    return (\r\n        <button\r\n            onClick={handleClick}\r\n            className={classNames(\"btn btn-primary\", styles.tableActionButton)}>\r\n            {isLoading ? (\r\n                <CircleLoader color={\"#fff\"} size={\"sm\"} />\r\n            ) : (\r\n                <span>Create request</span>\r\n            )}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CreateRequestButton;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n    patientNameValueCell,\r\n    patientNameWithScrollLinkValueCell,\r\n    reauthorizationRequestDocumentCell,\r\n    sendMethodValueCell,\r\n} from \"../../mixins/cells-functions\";\r\nimport {\r\n    sortingDate,\r\n    sortingName,\r\n    sortingStatus,\r\n    sortingReauthorizationRequestDocument\r\n} from \"../../mixins/sorting-functions\";\r\nimport CustomBadge from \"../../pages/SecretaryDashboard/components/CustomBadge\";\r\nimport hexToRgba from \"../../utilities/hexToRgba\";\r\nimport { ROW_NUMBER_COLUMN } from \"../../constants\";\r\nimport ActionsButton from \"../../pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/ActionsButton\";\r\nimport StageSelect from \"../../pages/ReauthorizationRequestsDashboard/components/SubmittedReauthorizationRequestForms/components/StageSelect\";\r\nimport InsuranceAuthorizationNumber from \"../../components/InsuranceAuthorizationNumber\";\r\nimport {\r\n    ACTIVE_PATIENT_STATUS_ID,\r\n    ACTIVE_PATIENT_STATUS_TITLE,\r\n    READY_TO_SEND_STAGE_ID,\r\n    READY_TO_SEND_STAGE_TITLE,\r\n} from \"../../constants/reauthorization-request-dashboard\";\r\nimport CreateRequestButton from \"../../pages/ReauthorizationRequestsDashboard/components/UpcomingReauthorizationRequests/components/CreateRequestButton\";\r\n\r\nconst initialState = {\r\n    patientStatuses: [],\r\n    providersList: [],\r\n    documentDefaultFaxesList: [],\r\n    documentDefaultEmailsList: [],\r\n    upcomingReauthorizationRequests: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"insurance\",\r\n                Header: \"Insurance\",\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"provider\",\r\n                Header: \"Therapist Name\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({ value }) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"auth_number\",\r\n                Header: \"Authorization number\",\r\n                width: 110,\r\n            },\r\n            {\r\n                accessor: \"eff_start_date\",\r\n                Header: \"Eff. Start Date\",\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"eff_stop_date\",\r\n                Header: \"Eff. Stop Date\",\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"visits_auth\",\r\n                Header: \"Visits Auth\",\r\n                width: 60,\r\n            },\r\n            {\r\n                accessor: \"visits_auth_left\",\r\n                Header: \"Visits Auth Left\",\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"reauhtorization_request_document\",\r\n                Header: \"Document Status\",\r\n                Cell: reauthorizationRequestDocumentCell,\r\n                sortType: sortingReauthorizationRequestDocument,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"action\",\r\n                Header: \"Action\",\r\n                disableSortBy: true,\r\n                Cell: ({ row }) =>\r\n                    row.original.can_create_reauthorization_form ? (\r\n                        <CreateRequestButton patientId={row.original.id} />\r\n                    ) : (\r\n                        <></>\r\n                    ),\r\n                width: 110,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n            per_page: 15,\r\n            current_page: 1,\r\n            last_page: 1,\r\n        },\r\n        therapistName: { value: 0, label: \"All\" },\r\n        selectedPatientStatuses: [\r\n            {\r\n                value: ACTIVE_PATIENT_STATUS_ID,\r\n                label: ACTIVE_PATIENT_STATUS_TITLE,\r\n            },\r\n        ],\r\n        expirationsList: [],\r\n        selectedExpiration: [],\r\n        searchText: \"\",\r\n    },\r\n    submittedReauthorizationRequestForms: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameWithScrollLinkValueCell,\r\n                sortType: sortingName,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"insurance\",\r\n                Header: \"Insurance\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({ value }) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"auth_number_data\",\r\n                Header: \"Authorization number\",\r\n                Cell: ({ value }) => (\r\n                    <InsuranceAuthorizationNumber authNumberData={value} />\r\n                ),\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"submitted_by\",\r\n                Header: \"Request filed by\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"submitted_at\",\r\n                Header: \"Request filed at\",\r\n                sortType: sortingDate,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"send_method\",\r\n                Header: \"Submitted via\",\r\n                Cell: sendMethodValueCell,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"sent_at\",\r\n                Header: \"Submitted at\",\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"stage\",\r\n                Header: \"Stage\",\r\n                Cell: ({ row }) => <StageSelect requestForm={row.original} />,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"stage_changed_on\",\r\n                Header: \"Stage changed on\",\r\n                sortType: sortingDate,\r\n                width: 110,\r\n            },\r\n            {\r\n                accessor: \"actions\",\r\n                Header: \"Actions\",\r\n                disableSortBy: true,\r\n                Cell: ({ row }) => <ActionsButton requestForm={row.original} />,\r\n                width: 80,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n            per_page: 15,\r\n            current_page: 1,\r\n            last_page: 1,\r\n        },\r\n        stages: [],\r\n        submittedBy: { value: 0, label: \"All\" },\r\n        selectedPatientStatuses: [],\r\n        selectedStages: [\r\n            { value: READY_TO_SEND_STAGE_ID, label: READY_TO_SEND_STAGE_TITLE },\r\n        ],\r\n        searchText: \"\",\r\n    },\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"reauthorizationRequestsDashboard\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setPatientStatusesAC(state, action) {\r\n            state.patientStatuses = action.payload.value;\r\n        },\r\n        setProvidersListAC(state, action) {\r\n            state.providersList = action.payload.value;\r\n        },\r\n        setDocumentDefaultFaxesListAC(state, action) {\r\n            state.documentDefaultFaxesList = action.payload.value;\r\n        },\r\n        setDocumentDefaultEmailsListAC(state, action) {\r\n            state.documentDefaultEmailsList = action.payload.value;\r\n        },\r\n        setDataInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableData = value;\r\n        },\r\n        setDataIsLoadedAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].dataIsLoaded = value;\r\n        },\r\n        setCurrentPageInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.current_page = value;\r\n        },\r\n        setLastPageInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.last_page = value;\r\n        },\r\n        setTotalInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.total = value;\r\n        },\r\n        setUpcomingReauthorizationTherapistNameAC(state, action) {\r\n            state.upcomingReauthorizationRequests.therapistName =\r\n                action.payload.value;\r\n        },\r\n        setUpcomingReauthorizationSelectedPatientStatusesAC(state, action) {\r\n            state.upcomingReauthorizationRequests.selectedPatientStatuses =\r\n                action.payload.value;\r\n        },\r\n        setUpcomingReauthorizationExpirationsListAC(state, action) {\r\n            state.upcomingReauthorizationRequests.expirationsList =\r\n                action.payload.value;\r\n        },\r\n        setUpcomingReauthorizationSelectedExpirationAC(state, action) {\r\n            state.upcomingReauthorizationRequests.selectedExpiration =\r\n                action.payload.value;\r\n        },\r\n        setUpcomingReauthorizationSearchTextAC(state, action) {\r\n            state.upcomingReauthorizationRequests.searchText =\r\n                action.payload.value;\r\n        },\r\n        setRequestFormStagesAC(state, action) {\r\n            state.submittedReauthorizationRequestForms.stages =\r\n                action.payload.value;\r\n        },\r\n        setRequestFormSubmittedByAC(state, action) {\r\n            state.submittedReauthorizationRequestForms.submittedBy =\r\n                action.payload.value;\r\n        },\r\n        setRequestFormSelectedPatientStatusesAC(state, action) {\r\n            state.submittedReauthorizationRequestForms.selectedPatientStatuses =\r\n                action.payload.value;\r\n        },\r\n        setRequestFormSelectedStagesAC(state, action) {\r\n            state.submittedReauthorizationRequestForms.selectedStages =\r\n                action.payload.value;\r\n        },\r\n        setRequestFormSearchTextAC(state, action) {\r\n            state.submittedReauthorizationRequestForms.searchText =\r\n                action.payload.value;\r\n        },\r\n    },\r\n});\r\nexport const reauthorizationRequestsDashboardReducer = slice.reducer;\r\nexport const {\r\n    setPatientStatusesAC,\r\n    setProvidersListAC,\r\n    setDocumentDefaultFaxesListAC,\r\n    setDocumentDefaultEmailsListAC,\r\n    setDataInTableAC,\r\n    setDataIsLoadedAC,\r\n    setCurrentPageInTableAC,\r\n    setLastPageInTableAC,\r\n    setTotalInTableAC,\r\n    setUpcomingReauthorizationTherapistNameAC,\r\n    setUpcomingReauthorizationSelectedPatientStatusesAC,\r\n    setUpcomingReauthorizationExpirationsListAC,\r\n    setUpcomingReauthorizationSelectedExpirationAC,\r\n    setUpcomingReauthorizationSearchTextAC,\r\n    setRequestFormStagesAC,\r\n    setRequestFormSubmittedByAC,\r\n    setRequestFormSelectedPatientStatusesAC,\r\n    setRequestFormSelectedStagesAC,\r\n    setRequestFormSearchTextAC,\r\n} = slice.actions;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport moment from \"moment-timezone\";\r\nimport classNames from \"classnames\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { getSelectStyles } from \"../../../../utilities/react-select-styles\";\r\nimport CrossSvg from \"../../../../components/CrossSvg\";\r\nimport SearchInput from \"../../../../components/SearchInput\";\r\nimport Table from \"../../../../components/Table\";\r\nimport { getUpcomingReauthorizationRequests } from \"../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport * as ReauthorizationRequestsDashboardReducer from \"../../../../store/reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport { READY_TO_SEND_STAGE_ID } from \"../../../../constants/reauthorization-request-dashboard\";\r\nimport styles from \"../../index.module.scss\";\r\n\r\nconst UpcomingReauthorizationRequests = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { patientStatuses, providersList, upcomingReauthorizationRequests } =\r\n        useSelector((state) => state.reauthorizationRequestsDashboard);\r\n\r\n    const {\r\n        tableData,\r\n        tableColumns,\r\n        tableParams,\r\n        dataIsLoaded,\r\n        therapistName,\r\n        selectedPatientStatuses,\r\n        expirationsList,\r\n        selectedExpiration,\r\n        searchText,\r\n    } = upcomingReauthorizationRequests;\r\n\r\n    const tableName = \"upcomingReauthorizationRequests\";\r\n    const tabPortalId = \"upcoming-reauthorization-requests\";\r\n\r\n    const selectStyles = getSelectStyles();\r\n    const submittedBySelectStyles = {\r\n        ...selectStyles,\r\n        valueContainer: (baseStyles) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.valueContainer,\r\n            paddingRight: \"25px\",\r\n        }),\r\n    };\r\n\r\n    const handleClearTherapistNameInput = () => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReducer.setUpcomingReauthorizationTherapistNameAC(\r\n                {\r\n                    value: { value: 0, label: \"All\" },\r\n                },\r\n            ),\r\n        );\r\n    };\r\n\r\n    const handleClearSearchInput = () => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReducer.setUpcomingReauthorizationSearchTextAC(\r\n                { value: \"\" },\r\n            ),\r\n        );\r\n    };\r\n\r\n    const calculateLastPage = (total) => {\r\n        return Math.max(1, Math.ceil(total / tableParams.per_page));\r\n    };\r\n\r\n    const isAlmostOverdue = (patient) => {\r\n        if (\r\n            !patient.auth_number ||\r\n            !patient.visits_auth_left ||\r\n            !patient.eff_stop_date\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        const daysDiff = moment(patient.eff_stop_date, \"YYYY-MM-DD\").diff(\r\n            moment(),\r\n            \"days\",\r\n        );\r\n\r\n        if (daysDiff <= 0 || patient.visits_auth_left <= 0) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            daysDiff <=\r\n                patient.insurance_plan\r\n                    .reauthorization_notification_days_count ||\r\n            patient.visits_auth_left <=\r\n                patient.insurance_plan.reauthorization_notification_visits_count\r\n        );\r\n    };\r\n\r\n    const isOverdue = (patient) => {\r\n        if (\r\n            !patient.auth_number ||\r\n            !patient.visits_auth_left ||\r\n            !patient.eff_stop_date\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        const daysDiff = moment(patient.eff_stop_date, \"YYYY-MM-DD\").diff(\r\n            moment(),\r\n            \"days\",\r\n        );\r\n\r\n        return daysDiff <= 0 || patient.visits_auth_left <= 0;\r\n    };\r\n\r\n    const getRowClassName = (patient) => {\r\n        if (isAlmostOverdue(patient)) {\r\n            return \"almost-overdue\";\r\n        }\r\n\r\n        if (isOverdue(patient)) {\r\n            return \"overdue\";\r\n        }\r\n\r\n        return \"\";\r\n    };\r\n\r\n    const getCanCreateReauthorizationForm = (patient) => {\r\n        const { insurance_plan, insurance_reauthorization_request_forms } = patient;\r\n\r\n        if (\r\n            !insurance_plan ||\r\n            insurance_plan.requires_reauthorization_document\r\n        ) {\r\n            return false;\r\n        }\r\n\r\n        if (\r\n            !insurance_reauthorization_request_forms &&\r\n            insurance_reauthorization_request_forms.length === 0\r\n        ) {\r\n            return true;\r\n        }\r\n\r\n        return !insurance_reauthorization_request_forms.some(\r\n            (form) => form.stage_id === READY_TO_SEND_STAGE_ID,\r\n        );\r\n    };\r\n\r\n    const getTableData = (data) => {\r\n        const tableData = [];\r\n        data.forEach((el) => {\r\n            tableData.push({\r\n                id: el.id,\r\n                patient_id: el.id,\r\n                patient_name: `${el.first_name} ${el.last_name}`,\r\n                insurance:\r\n                    el.primary_insurance || el.secondary_insurance || \"-\",\r\n                insurance_plan: el.insurance_plan,\r\n                provider: el.last_appointment?.provider?.provider_name || \"-\",\r\n                patient_status: el.status,\r\n                auth_number: el.auth_number || \"N/A\",\r\n                eff_start_date: el.eff_start_date\r\n                    ? moment(el.eff_start_date, \"YYYY-MM-DD\").format(\r\n                          \"MM/DD/YYYY\",\r\n                      )\r\n                    : \"-\",\r\n                eff_stop_date: el.eff_stop_date\r\n                    ? moment(el.eff_stop_date, \"YYYY-MM-DD\").format(\r\n                          \"MM/DD/YYYY\",\r\n                      )\r\n                    : \"-\",\r\n                visits_auth: el.visits_auth || \"-\",\r\n                visits_auth_left: el.visits_auth_left || \"-\",\r\n                reauhtorization_request_document: el.reauhtorization_request_document,\r\n                row_class_name: getRowClassName(el),\r\n                can_create_reauthorization_form: getCanCreateReauthorizationForm(el),\r\n            });\r\n        });\r\n\r\n        return tableData;\r\n    };\r\n\r\n    const getParams = () => {\r\n        const params = {};\r\n\r\n        if (therapistName.value) {\r\n            params.provider_id = therapistName.value;\r\n        }\r\n        if (selectedPatientStatuses.length > 0) {\r\n            params.patient_statuses = selectedPatientStatuses.map(\r\n                (status) => status.value,\r\n            );\r\n        }\r\n        if (selectedExpiration.length > 0) {\r\n            params.expiration = selectedExpiration.map((stage) => stage.value);\r\n        }\r\n        if (searchText) {\r\n            params.search_text = searchText;\r\n        }\r\n\r\n        return params;\r\n    };\r\n\r\n    const fetchTableData = () => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReducer.setDataIsLoadedAC({\r\n                tableName,\r\n                value: false,\r\n            }),\r\n        );\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReducer.setCurrentPageInTableAC({\r\n                tableName,\r\n                value: 1,\r\n            }),\r\n        );\r\n\r\n        getUpcomingReauthorizationRequests(getParams()).then(({ data }) => {\r\n            const tableData = getTableData(data.data);\r\n\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setDataInTableAC({\r\n                    tableName,\r\n                    value: tableData,\r\n                }),\r\n            );\r\n\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setTotalInTableAC({\r\n                    tableName,\r\n                    value: data.meta.total,\r\n                }),\r\n            );\r\n\r\n            const lastPage = calculateLastPage(data.meta.total);\r\n\r\n            if (lastPage !== tableParams.last_page) {\r\n                dispatch(\r\n                    ReauthorizationRequestsDashboardReducer.setLastPageInTableAC(\r\n                        { tableName, value: lastPage },\r\n                    ),\r\n                );\r\n            }\r\n\r\n            dispatch(\r\n                ReauthorizationRequestsDashboardReducer.setDataIsLoadedAC({\r\n                    tableName,\r\n                    value: true,\r\n                }),\r\n            );\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchTableData();\r\n    }, [])\r\n\r\n    const portalDOM = document.getElementById(tabPortalId);\r\n\r\n    return (\r\n        <div className=\"dashboard-table-wrapper\">\r\n            {portalDOM &&\r\n                createPortal(\r\n                    <div\r\n                        className=\"d-flex gap-2 mb-2\"\r\n                        style={{ minHeight: \"44px\" }}>\r\n                        <div\r\n                            className=\"flex-shrink-0 d-flex flex-column gap-1\"\r\n                            style={{ width: \"200px\" }}>\r\n                            <div className=\"fw-bold\">Therapist Name</div>\r\n                            <div className=\"position-relative d-flex align-items-center\">\r\n                                <Select\r\n                                    value={therapistName}\r\n                                    onChange={(selectedOption) =>\r\n                                        dispatch(\r\n                                            ReauthorizationRequestsDashboardReducer.setUpcomingReauthorizationTherapistNameAC(\r\n                                                {\r\n                                                    value: selectedOption,\r\n                                                },\r\n                                            ),\r\n                                        )\r\n                                    }\r\n                                    options={[\r\n                                        { id: 0, provider_name: \"All\" },\r\n                                        ...providersList,\r\n                                    ].map((item) => ({\r\n                                        value: item.id,\r\n                                        label: item.provider_name,\r\n                                    }))}\r\n                                    className={styles.submittedBySelect}\r\n                                    styles={submittedBySelectStyles}\r\n                                />\r\n                                {therapistName.value !== 0 && (\r\n                                    <CrossSvg\r\n                                        handleClick={\r\n                                            handleClearTherapistNameInput\r\n                                        }\r\n                                        className={classNames(\r\n                                            styles.cross,\r\n                                            styles.submittedByCross,\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex flex-column gap-1\">\r\n                            <div className=\"fw-bold\">Patient Name</div>\r\n                            <div className=\"position-relative d-flex align-items-center\">\r\n                                <SearchInput\r\n                                    value={searchText}\r\n                                    onChange={(e) =>\r\n                                        dispatch(\r\n                                            ReauthorizationRequestsDashboardReducer.setUpcomingReauthorizationSearchTextAC(\r\n                                                {\r\n                                                    value: e.target.value,\r\n                                                },\r\n                                            ),\r\n                                        )\r\n                                    }\r\n                                    placeholder=\"Search by name\"\r\n                                    style={{\r\n                                        width: \"200px\",\r\n                                        height: \"38px\",\r\n                                        paddingRight: \"30px\",\r\n                                    }}\r\n                                />\r\n                                {searchText && (\r\n                                    <CrossSvg\r\n                                        handleClick={handleClearSearchInput}\r\n                                        className={classNames(\r\n                                            styles.cross,\r\n                                            styles.searchCross,\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className=\"d-flex flex-column gap-1\"\r\n                            style={{ width: \"400px\" }}>\r\n                            <div className=\"fw-bold\">Patient Status</div>\r\n                            <Select\r\n                                value={selectedPatientStatuses}\r\n                                onChange={(selectedOption) =>\r\n                                    dispatch(\r\n                                        ReauthorizationRequestsDashboardReducer.setUpcomingReauthorizationSelectedPatientStatusesAC(\r\n                                            { value: selectedOption },\r\n                                        ),\r\n                                    )\r\n                                }\r\n                                options={patientStatuses.map((item) => ({\r\n                                    value: item.id,\r\n                                    label: item.status,\r\n                                }))}\r\n                                isMulti\r\n                                closeMenuOnSelect={false}\r\n                                placeholder=\"Select statuses...\"\r\n                                styles={selectStyles}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className=\"d-flex flex-column gap-1\"\r\n                            style={{ width: \"400px\" }}>\r\n                            <div className=\"fw-bold\">Expiration</div>\r\n                            <Select\r\n                                value={selectedExpiration}\r\n                                onChange={(selectedOption) =>\r\n                                    dispatch(\r\n                                        ReauthorizationRequestsDashboardReducer.setUpcomingReauthorizationSelectedExpirationAC(\r\n                                            {\r\n                                                value: selectedOption,\r\n                                            },\r\n                                        ),\r\n                                    )\r\n                                }\r\n                                options={expirationsList.map((item) => ({\r\n                                    value: item.id,\r\n                                    label: item.title,\r\n                                }))}\r\n                                isMulti\r\n                                closeMenuOnSelect={false}\r\n                                placeholder=\"Select expiration...\"\r\n                                styles={selectStyles}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            className={classNames(\"btn btn-large btn-primary\", styles.btnFetchTableData)}\r\n                            disabled={!dataIsLoaded}\r\n                            onClick={fetchTableData}\r\n                        >\r\n                            Show\r\n                        </button>\r\n                    </div>,\r\n                    portalDOM,\r\n                )}\r\n            <Table\r\n                pageSize={tableParams.per_page}\r\n                columns={tableColumns}\r\n                currentPage={tableParams.current_page}\r\n                data={tableData}\r\n                dataIsLoaded={dataIsLoaded}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpcomingReauthorizationRequests;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport classNames from \"classnames\";\r\nimport moment from \"moment-timezone\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { getSelectStyles } from \"../../../../utilities/react-select-styles\";\r\nimport SearchInput from \"../../../../components/SearchInput\";\r\nimport CrossSvg from \"../../../../components/CrossSvg\";\r\nimport Table from \"../../../../components/Table/index\";\r\nimport { getSubmittedReauthorizationRequestForms } from \"../../../../api/pages/reauthorization-request-dashboard-page\";\r\nimport * as ReauthorizationRequestsDashboardReduced from \"../../../../store/reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport styles from \"../../index.module.scss\";\r\nimport {\r\n    getFirstElementFromLogsAndSharedDocuments,\r\n    getSendMethodNameFromId,\r\n    getStageChangeHistory,\r\n} from \"../../../../utilities/reauthorizationRequestsDashboardUtils\";\r\n\r\nconst SubmittedReauthorizationRequestForms = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        patientStatuses,\r\n        providersList,\r\n        submittedReauthorizationRequestForms,\r\n    } = useSelector((state) => state.reauthorizationRequestsDashboard);\r\n\r\n    const {\r\n        tableData,\r\n        tableColumns,\r\n        dataIsLoaded,\r\n        tableParams,\r\n        stages,\r\n        submittedBy,\r\n        selectedPatientStatuses,\r\n        selectedStages,\r\n        searchText,\r\n    } = submittedReauthorizationRequestForms;\r\n\r\n    const tableName = \"submittedReauthorizationRequestForms\";\r\n    const tabPortalId = \"submitted-reauthorization-request-forms\";\r\n\r\n    const selectStyles = getSelectStyles();\r\n    const submittedBySelectStyles = {\r\n        ...selectStyles,\r\n        valueContainer: (baseStyles) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.valueContainer,\r\n            paddingRight: \"25px\",\r\n        }),\r\n    };\r\n\r\n    const handleClearSubmittedByInput = () => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReduced.setRequestFormSubmittedByAC(\r\n                { value: { value: 0, label: \"All\" } },\r\n            ),\r\n        );\r\n    };\r\n\r\n    const handleClearSearchInput = () => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReduced.setRequestFormSearchTextAC({\r\n                value: \"\",\r\n            }),\r\n        );\r\n    };\r\n\r\n    const getDocument = (requestForm) => {\r\n        if (requestForm.document) {\r\n            return {\r\n                ...requestForm.document,\r\n                document_type: requestForm.document_type,\r\n            };\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    const getSubmittedByValue = (submitter) => {\r\n        if (!submitter) {\r\n            return \"-\";\r\n        }\r\n        if (submitter.provider_id) {\r\n            return submitter.provider.provider_name;\r\n        }\r\n\r\n        const { firstname, lastname } = submitter.meta;\r\n        return `${firstname} ${lastname}`;\r\n    };\r\n\r\n    const getSubmittedAtValue = (requestForm) => {\r\n        if (requestForm.document) {\r\n            return moment(requestForm.document.created_at).format(\"MM/DD/YYYY\");\r\n        }\r\n\r\n        return moment(requestForm.created_at).format(\"MM/DD/YYYY\");\r\n    };\r\n\r\n    const getSendMethod = (requestForm) => {\r\n        const document = requestForm.document;\r\n        let firstLog = null;\r\n        let firstSharedDocument = null;\r\n\r\n        if (requestForm.logs && requestForm.logs.length > 0) {\r\n            firstLog = requestForm.logs[0];\r\n        }\r\n\r\n        if (document && document.document_shared.length !== 0) {\r\n            firstSharedDocument = document.document_shared[0];\r\n        }\r\n\r\n        if (!firstLog && !firstSharedDocument) {\r\n            return \"-\";\r\n        }\r\n\r\n        const firstElement = getFirstElementFromLogsAndSharedDocuments(\r\n            firstLog,\r\n            firstSharedDocument,\r\n        );\r\n\r\n        if (firstElement.log_type) {\r\n            return getSendMethodNameFromId(firstElement.log_type);\r\n        }\r\n\r\n        return firstElement.shared_method.method;\r\n    };\r\n\r\n    const getSentAt = (requestForm) => {\r\n        const document = requestForm.document;\r\n        let firstLog = null;\r\n        let firstSharedDocument = null;\r\n\r\n        if (requestForm.logs && requestForm.logs.length > 0) {\r\n            firstLog = requestForm.logs[0];\r\n            return moment(requestForm.logs[0].created_at).format(\"MM/DD/YYYY\");\r\n        }\r\n\r\n        if (document && document.document_shared.length !== 0) {\r\n            firstSharedDocument = document.document_shared[0];\r\n            return moment(document.document_shared[0].created_at).format(\r\n                \"MM/DD/YYYY\",\r\n            );\r\n        }\r\n\r\n        if (!firstLog && !firstSharedDocument) {\r\n            return \"-\";\r\n        }\r\n\r\n        const firstElement = getFirstElementFromLogsAndSharedDocuments(\r\n            firstLog,\r\n            firstSharedDocument,\r\n        );\r\n\r\n        return moment(firstElement.created_at).format(\"MM/DD/YYYY\");\r\n    };\r\n\r\n    const getInsuranceAuthorizationNumberData = (patient) => {\r\n        if (!patient.insurance_plan) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            insurance_requires_verification:\r\n                patient.insurance_plan.is_verification_required,\r\n            insurance_authorization_number: patient.auth_number,\r\n            insurance_visits_auth: patient.visits_auth,\r\n            insurance_visits_auth_left: patient.visits_auth_left,\r\n            insurance_eff_start_date: patient.eff_start_date,\r\n            insurance_eff_stop_date: patient.eff_stop_date,\r\n            reauthorization_notification_visits_count:\r\n                patient.insurance_plan\r\n                    .reauthorization_notification_visits_count,\r\n            reauthorization_notification_days_count:\r\n                patient.insurance_plan.reauthorization_notification_days_count,\r\n        };\r\n    };\r\n\r\n    const getTableData = (data) => {\r\n        const tableData = [];\r\n        data.forEach((el) => {\r\n            const patient = el.patient;\r\n\r\n            tableData.push({\r\n                id: el.id,\r\n                patient_id: patient.id,\r\n                patient_name: `${patient.first_name} ${patient.last_name}`,\r\n                insurance:\r\n                    patient.primary_insurance ||\r\n                    patient.secondary_insurance ||\r\n                    \"-\",\r\n                patient_status: patient.status,\r\n                document: getDocument(el),\r\n                auth_number_data: getInsuranceAuthorizationNumberData(patient),\r\n                submitted_by: getSubmittedByValue(el.submitter),\r\n                submitted_at: getSubmittedAtValue(el),\r\n                send_method: getSendMethod(el),\r\n                sent_at: getSentAt(el),\r\n                stage: el.stage_id,\r\n                stage_changed_on: el.stage_changed_at\r\n                    ? moment(el.stage_changed_at).format(\"MM/DD/YYYY\")\r\n                    : \"-\",\r\n                stage_comment: el.comment,\r\n                logs: el.logs || null,\r\n                future_auth_number_data:\r\n                    el.future_insurance_reauthorization_data,\r\n                stage_change_history: getStageChangeHistory(el),\r\n            });\r\n        });\r\n\r\n        return tableData;\r\n    };\r\n\r\n    const calculateLastPage = (total) => {\r\n        return Math.max(1, Math.ceil(total / tableParams.per_page));\r\n    };\r\n\r\n    const getParams = () => {\r\n        const params = {};\r\n\r\n        if (submittedBy.value) {\r\n            params.submitted_by = submittedBy.value;\r\n        }\r\n        if (selectedPatientStatuses.length > 0) {\r\n            params.patient_statuses = selectedPatientStatuses.map(\r\n                (status) => status.value,\r\n            );\r\n        }\r\n        if (selectedStages.length > 0) {\r\n            params.stages = selectedStages.map((stage) => stage.value);\r\n        }\r\n        if (searchText) {\r\n            params.search_text = searchText;\r\n        }\r\n\r\n        return params;\r\n    };\r\n\r\n    const fetchTableData = () => {\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReduced.setDataIsLoadedAC({\r\n                tableName,\r\n                value: false,\r\n            }),\r\n        );\r\n        dispatch(\r\n            ReauthorizationRequestsDashboardReduced.setCurrentPageInTableAC({\r\n                tableName,\r\n                value: 1,\r\n            }),\r\n        );\r\n\r\n        getSubmittedReauthorizationRequestForms(getParams()).then(\r\n            ({ data }) => {\r\n                const tableData = getTableData(data.data);\r\n\r\n                dispatch(\r\n                    ReauthorizationRequestsDashboardReduced.setDataInTableAC({\r\n                        tableName,\r\n                        value: tableData,\r\n                    }),\r\n                );\r\n\r\n                dispatch(\r\n                    ReauthorizationRequestsDashboardReduced.setTotalInTableAC({\r\n                        tableName,\r\n                        value: data.meta.total,\r\n                    }),\r\n                );\r\n\r\n                const lastPage = calculateLastPage(data.meta.total);\r\n\r\n                if (lastPage !== tableParams.last_page) {\r\n                    dispatch(\r\n                        ReauthorizationRequestsDashboardReduced.setLastPageInTableAC(\r\n                            { tableName, value: lastPage },\r\n                        ),\r\n                    );\r\n                }\r\n\r\n                dispatch(\r\n                    ReauthorizationRequestsDashboardReduced.setDataIsLoadedAC({\r\n                        tableName,\r\n                        value: true,\r\n                    }),\r\n                );\r\n            },\r\n        );\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTableData();\r\n    }, []);\r\n\r\n    const portalDOM = document.getElementById(tabPortalId);\r\n\r\n    return (\r\n        <div className=\"dashboard-table-wrapper\" style={{ maxHeight: \"none\" }}>\r\n            {portalDOM &&\r\n                createPortal(\r\n                    <div\r\n                        className=\"d-flex gap-2 mb-2\"\r\n                        style={{ minHeight: \"44px\" }}>\r\n                        <div\r\n                            className=\"flex-shrink-0 d-flex flex-column gap-1\"\r\n                            style={{ width: \"200px\" }}>\r\n                            <div className=\"fw-bold\">Request filed by</div>\r\n                            <div className=\"position-relative d-flex align-items-center\">\r\n                                <Select\r\n                                    value={submittedBy}\r\n                                    onChange={(selectedOption) =>\r\n                                        dispatch(\r\n                                            ReauthorizationRequestsDashboardReduced.setRequestFormSubmittedByAC(\r\n                                                {\r\n                                                    value: selectedOption,\r\n                                                },\r\n                                            ),\r\n                                        )\r\n                                    }\r\n                                    options={[\r\n                                        { id: 0, provider_name: \"All\" },\r\n                                        ...providersList,\r\n                                    ].map((item) => ({\r\n                                        value: item.id,\r\n                                        label: item.provider_name,\r\n                                    }))}\r\n                                    className={styles.submittedBySelect}\r\n                                    styles={submittedBySelectStyles}\r\n                                />\r\n                                {submittedBy.value !== 0 && (\r\n                                    <CrossSvg\r\n                                        handleClick={\r\n                                            handleClearSubmittedByInput\r\n                                        }\r\n                                        className={classNames(\r\n                                            styles.cross,\r\n                                            styles.submittedByCross,\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"d-flex flex-column gap-1\">\r\n                            <div className=\"fw-bold\">Patient Name</div>\r\n                            <div className=\"position-relative d-flex align-items-center\">\r\n                                <SearchInput\r\n                                    value={searchText}\r\n                                    onChange={(e) =>\r\n                                        dispatch(\r\n                                            ReauthorizationRequestsDashboardReduced.setRequestFormSearchTextAC(\r\n                                                {\r\n                                                    value: e.target.value,\r\n                                                },\r\n                                            ),\r\n                                        )\r\n                                    }\r\n                                    placeholder=\"Search by name\"\r\n                                    style={{\r\n                                        width: \"200px\",\r\n                                        height: \"38px\",\r\n                                        paddingRight: \"30px\",\r\n                                    }}\r\n                                />\r\n                                {searchText && (\r\n                                    <CrossSvg\r\n                                        handleClick={handleClearSearchInput}\r\n                                        className={classNames(\r\n                                            styles.cross,\r\n                                            styles.searchCross,\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className=\"d-flex flex-column gap-1\"\r\n                            style={{ width: \"400px\" }}>\r\n                            <div className=\"fw-bold\">Patient Status</div>\r\n                            <Select\r\n                                value={selectedPatientStatuses}\r\n                                onChange={(selectedOption) =>\r\n                                    dispatch(\r\n                                        ReauthorizationRequestsDashboardReduced.setRequestFormSelectedPatientStatusesAC(\r\n                                            { value: selectedOption },\r\n                                        ),\r\n                                    )\r\n                                }\r\n                                options={patientStatuses.map((item) => ({\r\n                                    value: item.id,\r\n                                    label: item.status,\r\n                                }))}\r\n                                isMulti\r\n                                closeMenuOnSelect={false}\r\n                                placeholder=\"Select statuses...\"\r\n                                styles={selectStyles}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className=\"d-flex flex-column gap-1\"\r\n                            style={{ width: \"400px\" }}>\r\n                            <div className=\"fw-bold\">Stage</div>\r\n                            <Select\r\n                                value={selectedStages}\r\n                                onChange={(selectedOption) =>\r\n                                    dispatch(\r\n                                        ReauthorizationRequestsDashboardReduced.setRequestFormSelectedStagesAC(\r\n                                            {\r\n                                                value: selectedOption,\r\n                                            },\r\n                                        ),\r\n                                    )\r\n                                }\r\n                                options={stages.map((item) => ({\r\n                                    value: item.id,\r\n                                    label: item.name,\r\n                                }))}\r\n                                isMulti\r\n                                closeMenuOnSelect={false}\r\n                                placeholder=\"Select stages...\"\r\n                                styles={selectStyles}\r\n                            />\r\n                        </div>\r\n                        <button\r\n                            className={classNames(\"btn btn-large btn-primary\", styles.btnFetchTableData)}\r\n                            disabled={!dataIsLoaded}\r\n                            onClick={fetchTableData}\r\n                        >\r\n                            Show\r\n                        </button>\r\n                    </div>,\r\n                    portalDOM,\r\n                )}\r\n            <Table\r\n                pageSize={tableParams.per_page}\r\n                columns={tableColumns}\r\n                currentPage={tableParams.current_page}\r\n                data={tableData}\r\n                dataIsLoaded={dataIsLoaded}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SubmittedReauthorizationRequestForms;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppMainLayout from \"../../layouts/AppMainLayout\";\r\nimport UpcomingReauthorizationRequests from \"./components/UpcomingReauthorizationRequests\";\r\nimport SubmittedReauthorizationRequestForms from \"./components/SubmittedReauthorizationRequestForms\";\r\nimport TabMate from \"../../components/TabMate\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport CircleLoader from \"../../components/CircleLoader\";\r\nimport * as ReauthorizationRequestsDashboardReducer from \"../../store/reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport * as ReauthorizationRequestsDashboardApi from \"../../api/pages/reauthorization-request-dashboard-page\";\r\n\r\nconst ReauthorizationRequestsDashboard = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { reauthorizationRequestsDashboard } = useSelector((state) => state);\r\n    const {\r\n        upcomingReauthorizationRequests,\r\n        submittedReauthorizationRequestForms,\r\n    } = reauthorizationRequestsDashboard;\r\n\r\n    const [dataIsLoaded, setDataIsLoaded] = useState(false);\r\n\r\n    const tabs = [\r\n        {\r\n            id: \"upcoming-reauthorization-requests\",\r\n            eventKey: \"upcoming_reauthorization_requests\",\r\n            title: \"Upcoming Reauthorization Requests\",\r\n            numberOfRecords: upcomingReauthorizationRequests.tableParams.total,\r\n            disabled: false,\r\n            component: <UpcomingReauthorizationRequests />,\r\n        },\r\n        {\r\n            id: \"submitted-reauthorization-request-forms\",\r\n            eventKey: \"submitted_reauthorization_request_forms\",\r\n            title: \"Submitted Reauthorization Request Forms\",\r\n            numberOfRecords:\r\n                submittedReauthorizationRequestForms.tableParams.total,\r\n            disabled: false,\r\n            component: <SubmittedReauthorizationRequestForms />,\r\n        },\r\n    ];\r\n\r\n    const [activeTab, setActiveTab] = useState(tabs[0].eventKey);\r\n\r\n    const tabStyles = {\r\n        border: \"0.5px solid #D9D9D9\",\r\n        overflow: \"hidden\",\r\n        borderRadius: \"4px\",\r\n    };\r\n\r\n    const getTableNameFromKey = (key) => {\r\n        if (key === \"upcoming_reauthorization_requests\") {\r\n            return \"upcomingReauthorizationRequests\";\r\n        }\r\n        if (key === \"submitted_reauthorization_request_forms\") {\r\n            return \"submittedReauthorizationRequestForms\";\r\n        }\r\n    };\r\n\r\n    const currentTableName = getTableNameFromKey(activeTab);\r\n    const tableParams =\r\n        reauthorizationRequestsDashboard[currentTableName].tableParams;\r\n\r\n    const loadingData = async () => {\r\n        const responses = await Promise.all([\r\n            ReauthorizationRequestsDashboardApi.getReauthorizationRequestFormStages(),\r\n            ReauthorizationRequestsDashboardApi.getPatientStatuses(),\r\n            ReauthorizationRequestsDashboardApi.getProvidersList(),\r\n            ReauthorizationRequestsDashboardApi.getDocumentDefaultFaxesList(),\r\n            ReauthorizationRequestsDashboardApi.getDocumentDefaultEmailsList(),\r\n            ReauthorizationRequestsDashboardApi.getExpirationsList(),\r\n        ]);\r\n\r\n        const actions = [\r\n            ReauthorizationRequestsDashboardReducer.setRequestFormStagesAC,\r\n            ReauthorizationRequestsDashboardReducer.setPatientStatusesAC,\r\n            ReauthorizationRequestsDashboardReducer.setProvidersListAC,\r\n            ReauthorizationRequestsDashboardReducer.setDocumentDefaultFaxesListAC,\r\n            ReauthorizationRequestsDashboardReducer.setDocumentDefaultEmailsListAC,\r\n            ReauthorizationRequestsDashboardReducer.setUpcomingReauthorizationExpirationsListAC,\r\n        ];\r\n\r\n        actions.forEach((action, index) => {\r\n            dispatch(action({ value: responses[index].data }));\r\n        });\r\n\r\n        setDataIsLoaded(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadingData();\r\n    }, []);\r\n\r\n    return (\r\n        <AppMainLayout>\r\n            <div className=\"container-fluid\">\r\n                {!dataIsLoaded ? (\r\n                    <CircleLoader absolute={true} />\r\n                ) : (\r\n                    <div className=\"dashboardCard d-flex flex-column flex-columm gap-2 p-3\">\r\n                        <h4>Reauthorization Requests</h4>\r\n                        <TabMate\r\n                            defaultActiveKey={activeTab}\r\n                            tabs={tabs}\r\n                            className=\"mb-2\"\r\n                            tabStyles={tabStyles}\r\n                            onSelect={(tabKey) => setActiveTab(tabKey)}\r\n                        />\r\n                        <div className=\"w-100 d-flex justify-content-center\">\r\n                            <Pagination\r\n                                params={tableParams}\r\n                                currentPage={tableParams.current_page}\r\n                                setCurrentPage={(value) =>\r\n                                    dispatch(\r\n                                        ReauthorizationRequestsDashboardReducer.setCurrentPageInTableAC(\r\n                                            {\r\n                                                tableName: currentTableName,\r\n                                                value,\r\n                                            },\r\n                                        ),\r\n                                    )\r\n                                }\r\n                                loading={false}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </AppMainLayout>\r\n    );\r\n};\r\n\r\nexport default ReauthorizationRequestsDashboard;\r\n","import { getSelectStyles } from \"../../utilities/react-select-styles\";\r\n\r\nconst defaultSelectStyles = getSelectStyles();\r\n\r\nexport const selectStyles = {\r\n    ...defaultSelectStyles,\r\n    control: (baseStyles, state) => ({\r\n        ...baseStyles,\r\n        ...defaultSelectStyles.control(baseStyles, state),\r\n        minWidth: \"115px\",\r\n        width: \"200px\",\r\n        minHeight: \"38px\",\r\n        height: 'auto',\r\n    }),\r\n};","import React, {useState} from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport {\r\n    acceptPatientNoteUnlockRequest,\r\n} from \"../../../../../../api/pages/doctors-requests-dashboard-page\";\r\nimport {\r\n    removeItemFromTableDataByIdAC,\r\n    setTotalInTableAC\r\n} from \"../../../../../../store/reducers/doctorsRequestsDashboard.reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst ApprovePatientNoteUnlockModal = ({requestId, showModal, closeModal}) => {\r\n    const [isLoadingConfirm, setIsLoadingConfirm] = useState(false);\r\n    const {tableParams} = useSelector(state => state.doctorsRequestsDashboard.patientNoteUnlockRequests)\r\n    const dispatch = useDispatch();\r\n\r\n    const tableName = 'patientNoteUnlockRequests';\r\n    const modalTitle = 'Approve Patient Note Unlock Request';\r\n    const modalBody = 'You are about to unlock progress note editing. Please confirm.';\r\n\r\n    const handleConfirm = () => {\r\n        setIsLoadingConfirm(true);\r\n\r\n        acceptPatientNoteUnlockRequest({id: requestId})\r\n            .then(() => {\r\n                dispatch(removeItemFromTableDataByIdAC({tableName, id: requestId}));\r\n                dispatch(setTotalInTableAC({tableName, value: tableParams.total - 1}));\r\n\r\n                setIsLoadingConfirm(false);\r\n                closeModal();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            onHide={closeModal}\r\n            className={\"custom-modal\"}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <div>{modalTitle}</div>\r\n            </Modal.Header>\r\n            <Modal.Body>{modalBody}</Modal.Body>\r\n            <Modal.Footer>\r\n                <div className={'d-flex gap-2'}>\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={closeModal}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-large btn-primary\"\r\n                        onClick={handleConfirm}\r\n                        disabled={isLoadingConfirm}\r\n                    >\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ApprovePatientNoteUnlockModal","import axios from \"axios\";\r\n\r\nexport const getNewPatientRemovalRequests = () => {\r\n    return axios.get('/api/doctors-requests-dashboard/patient-removal-requests?request_statuses[]=0');\r\n}\r\n\r\nexport const getPatientRemovalRequestsList = (params = {}) => {\r\n    return axios.get('/api/doctors-requests-dashboard/patient-removal-requests', {\r\n        params,\r\n    });\r\n}\r\n\r\nexport const acceptPatientRemovalRequest = ({id}) => {\r\n    return axios.put('/dashboard/patient-removal-requests/accept', {\r\n        request_id: id,\r\n    });\r\n}\r\n\r\nexport const declinePatientRemovalRequest = ({id, reason}) => {\r\n    return axios.put('/dashboard/patient-removal-requests/decline', {\r\n        request_id: id,\r\n        reason,\r\n    });\r\n}\r\nexport const getNewPatientNoteUnlockRequests = () => {\r\n    return axios.get('/api/doctors-requests-dashboard/patient-note-unlock-requests?request_statuses[]=0');\r\n}\r\nexport const getPatientNoteUnlockRequestsList = (params = {}) => {\r\n    return axios.get('/api/doctors-requests-dashboard/patient-note-unlock-requests', {\r\n        params,\r\n    });\r\n}\r\n\r\nexport const acceptPatientNoteUnlockRequest = ({id}) => {\r\n    return axios.put('/dashboard/patient-note-unlock-requests/accept', {\r\n        request_id: id,\r\n    });\r\n}\r\n\r\nexport const declinePatientNoteUnlockRequest = ({id, reason}) => {\r\n    return axios.put('/dashboard/patient-note-unlock-requests/decline', {\r\n        request_id: id,\r\n        reason,\r\n    });\r\n}","import React, {useState} from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport {\r\n    declinePatientNoteUnlockRequest,\r\n} from \"../../../../../../api/pages/doctors-requests-dashboard-page\";\r\nimport {\r\n    removeItemFromTableDataByIdAC,\r\n    setTotalInTableAC\r\n} from \"../../../../../../store/reducers/doctorsRequestsDashboard.reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"../../../../index.module.scss\";\r\n\r\nconst DeclinePatientNoteUnlockModal = ({requestId, showModal, closeModal}) => {\r\n    const [isLoadingConfirm, setIsLoadingConfirm] = useState(false);\r\n    const [reason, setReason] = useState('');\r\n    const [reasonError, setReasonError] = useState('');\r\n    const {tableParams} = useSelector(state => state.doctorsRequestsDashboard.patientNoteUnlockRequests)\r\n    const dispatch = useDispatch();\r\n\r\n    const tableName = 'patientNoteUnlockRequests';\r\n    const modalTitle = 'Decline Patient Note Unlock Request';\r\n    const modalBody = 'You are about to decline unlock progress note editing request. Please confirm.';\r\n\r\n    const handleConfirm = () => {\r\n        if (! reason) {\r\n            setReasonError('The reason is required');\r\n\r\n            return;\r\n        } else {\r\n            setReasonError('');\r\n        }\r\n\r\n        setIsLoadingConfirm(true);\r\n\r\n        declinePatientNoteUnlockRequest({id: requestId, reason})\r\n            .then(() => {\r\n                dispatch(removeItemFromTableDataByIdAC({tableName, id: requestId}));\r\n                dispatch(setTotalInTableAC({tableName, value: tableParams.total - 1}));\r\n\r\n                setIsLoadingConfirm(false);\r\n                closeModal();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            onHide={closeModal}\r\n            className={\"custom-modal\"}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <div>{modalTitle}</div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    {modalBody}\r\n                </div>\r\n                <div\r\n                    className={classNames('form-group', styles.formGroup, reasonError ? styles.formGroupHasError : '')}>\r\n                    <label htmlFor=\"unassignReason\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                        Comment:\r\n                    </label>\r\n                    <input\r\n                        id={'unassignReason'}\r\n                        className={classNames('form-control', styles.formInput)}\r\n                        value={reason}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                    />\r\n                    {reasonError &&\r\n                        <div className={styles.formErrors}>\r\n                            {reasonError}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <div className={'d-flex gap-2'}>\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={closeModal}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-large btn-danger\"\r\n                        onClick={handleConfirm}\r\n                        disabled={isLoadingConfirm}\r\n                    >\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeclinePatientNoteUnlockModal;","import React, { useRef, useState } from \"react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiDotsVertical } from \"@mdi/js\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport styles from \"./../../../../index.module.scss\";\r\nimport ApprovePatientNoteUnlockModal from \"../ApprovePatientNoteUnlockModal\";\r\nimport DeclinePatientNoteUnlockModal from \"../DeclinePatientNoteUnlockModal\";\r\n\r\nconst ActionsButton = ({ requestId }) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showApprovePatientNoteUnlockModal, setShowApprovePatientNoteUnlockModal] = useState(false);\r\n    const [showDeclinePatientNoteUnlockModal, setShowDeclinePatientNoteUnlockModal] = useState(false);\r\n\r\n    const dotsRef = useRef(null);\r\n    const menuRef = useRef(null);\r\n\r\n    useOnClickOutside(menuRef, (e) => {\r\n        if (!dotsRef.current || !dotsRef.current.contains(e.target)) {\r\n            setShowMenu(false);\r\n        }\r\n    });\r\n\r\n    const toggleMenu = (e) => {\r\n        e.stopPropagation();\r\n        setShowMenu(!showMenu);\r\n    };\r\n\r\n    const handleApproveClick = () => {\r\n        setShowApprovePatientNoteUnlockModal(true);\r\n    };\r\n\r\n    const handleDeclineClick = () => {\r\n        setShowDeclinePatientNoteUnlockModal(true);\r\n    };\r\n\r\n    const handleCloseApprovePatientNoteUnlockModal = () => {\r\n        setShowApprovePatientNoteUnlockModal(false);\r\n    };\r\n\r\n    const handleCloseDeclinePatientNoteUnlockModal = () => {\r\n        setShowDeclinePatientNoteUnlockModal(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.actionsButton} onClick={toggleMenu}>\r\n                <div ref={dotsRef}>\r\n                    <Icon path={mdiDotsVertical} size={1} />\r\n                </div>\r\n                {showMenu && (\r\n                    <div ref={menuRef} className={styles.menuDialog}>\r\n                        <div\r\n                            className={styles.menuItem}\r\n                            onClick={handleApproveClick}\r\n                        >\r\n                            Approve\r\n                        </div>\r\n                        <div\r\n                            className={styles.menuItem}\r\n                            onClick={handleDeclineClick}\r\n                        >\r\n                            Decline\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <ApprovePatientNoteUnlockModal\r\n                requestId={requestId}\r\n                showModal={showApprovePatientNoteUnlockModal}\r\n                closeModal={handleCloseApprovePatientNoteUnlockModal}\r\n            />\r\n            <DeclinePatientNoteUnlockModal\r\n                requestId={requestId}\r\n                showModal={showDeclinePatientNoteUnlockModal}\r\n                closeModal={handleCloseDeclinePatientNoteUnlockModal}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActionsButton;\r\n","import React, {useState} from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport {\r\n    acceptPatientRemovalRequest,\r\n} from \"../../../../../../api/pages/doctors-requests-dashboard-page\";\r\nimport {\r\n    removeItemFromTableDataByIdAC,\r\n    setTotalInTableAC\r\n} from \"../../../../../../store/reducers/doctorsRequestsDashboard.reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nconst ApprovePatientRemovalModal = ({requestId, showModal, closeModal}) => {\r\n    const [isLoadingConfirm, setIsLoadingConfirm] = useState(false);\r\n    const {tableParams} = useSelector(state => state.doctorsRequestsDashboard.patientNoteUnlockRequests)\r\n    const dispatch = useDispatch();\r\n\r\n    const tableName = 'patientRemovalRequests';\r\n    const modalTitle = 'Approve Patient Removal Request';\r\n    const modalBody = 'You are about to remove therapist from the patient. Please confirm.';\r\n\r\n    const handleConfirm = () => {\r\n        setIsLoadingConfirm(true);\r\n\r\n        acceptPatientRemovalRequest({id: requestId})\r\n            .then(() => {\r\n                dispatch(removeItemFromTableDataByIdAC({tableName, id: requestId}));\r\n                dispatch(setTotalInTableAC({tableName, value: tableParams.total - 1}));\r\n\r\n                setIsLoadingConfirm(false);\r\n                closeModal();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            onHide={closeModal}\r\n            className={\"custom-modal\"}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <div>{modalTitle}</div>\r\n            </Modal.Header>\r\n            <Modal.Body>{modalBody}</Modal.Body>\r\n            <Modal.Footer>\r\n                <div className={'d-flex gap-2'}>\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={closeModal}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-large btn-primary\"\r\n                        onClick={handleConfirm}\r\n                        disabled={isLoadingConfirm}\r\n                    >\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default ApprovePatientRemovalModal","import React, {useState} from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport {\r\n    declinePatientRemovalRequest,\r\n} from \"../../../../../../api/pages/doctors-requests-dashboard-page\";\r\nimport {\r\n    removeItemFromTableDataByIdAC,\r\n    setTotalInTableAC\r\n} from \"../../../../../../store/reducers/doctorsRequestsDashboard.reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"../../../../index.module.scss\";\r\n\r\nconst DeclinePatientRemovalModal = ({requestId, showModal, closeModal}) => {\r\n    const [isLoadingConfirm, setIsLoadingConfirm] = useState(false);\r\n    const [reason, setReason] = useState('');\r\n    const [reasonError, setReasonError] = useState('');\r\n    const {tableParams} = useSelector(state => state.doctorsRequestsDashboard.patientNoteUnlockRequests)\r\n    const dispatch = useDispatch();\r\n\r\n    const tableName = 'patientRemovalRequests';\r\n    const modalTitle = 'Decline Patient Removal Request';\r\n    const modalBody = 'You are about to decline patient removal request. Please confirm.';\r\n\r\n    const handleConfirm = () => {\r\n        if (! reason) {\r\n            setReasonError('The reason is required');\r\n\r\n            return;\r\n        } else {\r\n            setReasonError('');\r\n        }\r\n\r\n        setIsLoadingConfirm(true);\r\n\r\n        declinePatientRemovalRequest({id: requestId, reason})\r\n            .then(() => {\r\n                dispatch(removeItemFromTableDataByIdAC({tableName, id: requestId}));\r\n                dispatch(setTotalInTableAC({tableName, value: tableParams.total - 1}));\r\n\r\n                setIsLoadingConfirm(false);\r\n                closeModal();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            onHide={closeModal}\r\n            className={\"custom-modal\"}\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <div>{modalTitle}</div>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div>\r\n                    {modalBody}\r\n                </div>\r\n                <div\r\n                    className={classNames('form-group', styles.formGroup, reasonError ? styles.formGroupHasError : '')}>\r\n                    <label htmlFor=\"unassignReason\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                        Comment:\r\n                    </label>\r\n                    <input\r\n                        id={'unassignReason'}\r\n                        className={classNames('form-control', styles.formInput)}\r\n                        value={reason}\r\n                        onChange={(e) => setReason(e.target.value)}\r\n                    />\r\n                    {reasonError &&\r\n                        <div className={styles.formErrors}>\r\n                            {reasonError}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <div className={'d-flex gap-2'}>\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={closeModal}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"btn btn-large btn-danger\"\r\n                        onClick={handleConfirm}\r\n                        disabled={isLoadingConfirm}\r\n                    >\r\n                        Confirm\r\n                    </button>\r\n                </div>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default DeclinePatientRemovalModal;","import React, { useRef, useState } from \"react\";\r\nimport Icon from \"@mdi/react\";\r\nimport { mdiDotsVertical } from \"@mdi/js\";\r\nimport { useOnClickOutside } from \"usehooks-ts\";\r\nimport styles from \"./../../../../index.module.scss\";\r\nimport ApprovePatientRemovalModal from \"../ApprovePatientRemovalModal\";\r\nimport DeclinePatientRemovalModal from \"../DeclinePatientRemovalModal\";\r\n\r\nconst ActionsButton = ({ requestId }) => {\r\n    const [showMenu, setShowMenu] = useState(false);\r\n    const [showApprovePatientRemovalModal, setShowApprovePatientRemovalModal] = useState(false);\r\n    const [showDeclinePatientRemovalModal, setShowDeclinePatientRemovalModal] = useState(false);\r\n\r\n    const dotsRef = useRef(null);\r\n    const menuRef = useRef(null);\r\n\r\n    useOnClickOutside(menuRef, (e) => {\r\n        if (!dotsRef.current || !dotsRef.current.contains(e.target)) {\r\n            setShowMenu(false);\r\n        }\r\n    });\r\n\r\n    const toggleMenu = (e) => {\r\n        e.stopPropagation();\r\n        setShowMenu(!showMenu);\r\n    };\r\n\r\n    const handleApproveClick = () => {\r\n        setShowApprovePatientRemovalModal(true);\r\n    };\r\n\r\n    const handleDeclineClick = () => {\r\n        setShowDeclinePatientRemovalModal(true);\r\n    };\r\n\r\n    const handleCloseApprovePatientRemovalModal = () => {\r\n        setShowApprovePatientRemovalModal(false);\r\n    };\r\n\r\n    const handleCloseDeclinePatientRemovalModal = () => {\r\n        setShowDeclinePatientRemovalModal(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.actionsButton} onClick={toggleMenu}>\r\n                <div ref={dotsRef}>\r\n                    <Icon path={mdiDotsVertical} size={1} />\r\n                </div>\r\n                {showMenu && (\r\n                    <div ref={menuRef} className={styles.menuDialog}>\r\n                        <div\r\n                            className={styles.menuItem}\r\n                            onClick={handleApproveClick}\r\n                        >\r\n                            Approve\r\n                        </div>\r\n                        <div\r\n                            className={styles.menuItem}\r\n                            onClick={handleDeclineClick}\r\n                        >\r\n                            Decline\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <ApprovePatientRemovalModal\r\n                requestId={requestId}\r\n                showModal={showApprovePatientRemovalModal}\r\n                closeModal={handleCloseApprovePatientRemovalModal}\r\n            />\r\n            <DeclinePatientRemovalModal\r\n                requestId={requestId}\r\n                showModal={showDeclinePatientRemovalModal}\r\n                closeModal={handleCloseDeclinePatientRemovalModal}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActionsButton;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n    patientValueCell,\r\n    progressNoteLinkCell\r\n} from \"../../mixins/cells-functions\";\r\nimport { ROW_NUMBER_COLUMN } from \"../../constants\";\r\nimport {sortingDate} from \"../../mixins/sorting-functions\";\r\nimport PatientNoteUnlockRequestsActionsButton from \"../../pages/DoctorsRequestsDashboard/components/PatientNoteUnlockRequests/components/ActionsButton\";\r\nimport PatientRemovalRequestsActionsButton from \"../../pages/DoctorsRequestsDashboard/components/PatientRemovalRequests/components/ActionsButton\"\r\n\r\nconst initialState = {\r\n    filtersData: {\r\n        requestStatusesData: {\r\n            requestStatuses: [\r\n                {\r\n                    id: 0,\r\n                    label: 'New',\r\n                },\r\n                {\r\n                    id: 1,\r\n                    label: 'Accepted',\r\n                },\r\n                {\r\n                    id: 2,\r\n                    label: 'Declined',\r\n                },\r\n                {\r\n                    id: 3,\r\n                    label: 'Canceled By Therapist',\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    patientRemovalRequests: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"#\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                disableSortBy: true,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                disableSortBy: true,\r\n                Cell: patientValueCell,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"reason\",\r\n                Header: \"Reason\",\r\n                disableSortBy: true,\r\n                width: 200,\r\n            },\r\n            {\r\n                accessor: \"requested_at\",\r\n                Header: \"Requested at\",\r\n                sortType: sortingDate,\r\n                width: 130,\r\n            },\r\n            {\r\n                accessor: \"request_status\",\r\n                Header: \"Request status\",\r\n                width: 100,\r\n                Cell: ({value}) => (\r\n                    <div>{value.label}</div>\r\n                ),\r\n            },\r\n            {\r\n                accessor: \"approver\",\r\n                Header: \"Approver\",\r\n                width: 150,\r\n                Cell: ({value}) => (\r\n                    <div>{value.name || '-'}</div>\r\n                ),\r\n            },\r\n            {\r\n                accessor: \"approved_at\",\r\n                Header: \"Closed at\",\r\n                width: 130,\r\n                Cell: ({value}) => (\r\n                    <div>{value || '-'}</div>\r\n                ),\r\n                sortType: sortingDate,\r\n            },\r\n            {\r\n                accessor: \"approver_comment\",\r\n                Header: \"Approver Comment\",\r\n                width: 200,\r\n                Cell: ({value}) => (\r\n                    <div>{value || '-'}</div>\r\n                ),\r\n            },\r\n            {\r\n                accessor: \"id\",\r\n                Header: \"Actions\",\r\n                disableSortBy: true,\r\n                Cell: ({row}) => <>\r\n                    {row.original.request_status.id === 0 ?\r\n                        <PatientRemovalRequestsActionsButton requestId={row.original.id}/> :\r\n                        '-'\r\n                    }\r\n                </>,\r\n                width: 60,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n            per_page: 15,\r\n            current_page: 1,\r\n            last_page: 1,\r\n        },\r\n        filters: {\r\n            requestStatuses: [\r\n                {\r\n                    id: 0,\r\n                    label: 'New',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n    patientNoteUnlockRequests: {\r\n        tableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"#\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: false,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"therapist_name\",\r\n                Header: \"Therapist's Name\",\r\n                disableSortBy: false,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"progress_note\",\r\n                Header: \"Progress Note\",\r\n                disableSortBy: true,\r\n                Cell: progressNoteLinkCell,\r\n                width: 70,\r\n            },\r\n            {\r\n                accessor: \"reason\",\r\n                Header: \"Reason\",\r\n                disableSortBy: true,\r\n                width: 200,\r\n            },\r\n            {\r\n                accessor: \"requested_at\",\r\n                Header: \"Requested at\",\r\n                sortType: sortingDate,\r\n                width: 130,\r\n            },\r\n            {\r\n                accessor: \"request_status\",\r\n                Header: \"Request status\",\r\n                width: 100,\r\n                Cell: ({value}) => (\r\n                    <div>{value.label}</div>\r\n                ),\r\n            },\r\n            {\r\n                accessor: \"approver\",\r\n                Header: \"Approver\",\r\n                width: 150,\r\n                Cell: ({value}) => (\r\n                    <div>{value.name || '-'}</div>\r\n                ),\r\n            },\r\n            {\r\n                accessor: \"approved_at\",\r\n                Header: \"Closed at\",\r\n                width: 130,\r\n                Cell: ({value}) => (\r\n                    <div>{value || '-'}</div>\r\n                ),\r\n                sortType: sortingDate,\r\n            },\r\n            {\r\n                accessor: \"approver_comment\",\r\n                Header: \"Approver Comment\",\r\n                width: 200,\r\n                Cell: ({value}) => (\r\n                    <div>{value || '-'}</div>\r\n                ),\r\n            },\r\n            {\r\n                accessor: \"id\",\r\n                Header: \"Actions\",\r\n                disableSortBy: true,\r\n                Cell: ({row}) => <>\r\n                    {row.original.request_status.id === 0 ?\r\n                        <PatientNoteUnlockRequestsActionsButton requestId={row.original.id}/> :\r\n                        '-'\r\n                    }\r\n                </>,\r\n                width: 60,\r\n            },\r\n        ],\r\n        loading: true,\r\n        dataIsLoaded: false,\r\n        tableParams: {\r\n            total: 0,\r\n            per_page: 15,\r\n            current_page: 1,\r\n            last_page: 1,\r\n        },\r\n        filters: {\r\n            requestStatuses: [\r\n                {\r\n                    id: 0,\r\n                    label: 'New',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"doctorsRequestsDashboard\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setDataInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableData = value;\r\n        },\r\n        setDataIsLoadedAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].dataIsLoaded = value;\r\n        },\r\n        setCurrentPageInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.current_page = value;\r\n        },\r\n        setLastPageInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.last_page = value;\r\n        },\r\n        setTotalInTableAC(state, action) {\r\n            const { tableName, value } = action.payload;\r\n            state[tableName].tableParams.total = value;\r\n        },\r\n        setRequestStatusesFilterInTable(state, action) {\r\n            const { tableName, options } = action.payload;\r\n            state[tableName].filters.requestStatuses = options.map(option => ({\r\n                id: option.value,\r\n                label: option.label,\r\n            }));\r\n        },\r\n        removeItemFromTableDataByIdAC(state, action) {\r\n            const { tableName, id } = action.payload;\r\n\r\n            const index = state[tableName].tableData.findIndex(item => item.id === id);\r\n            if (index !== -1) {\r\n                state[tableName].tableData.splice(index, 1);\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const doctorsRequestsDashboard = slice.reducer;\r\n\r\nexport const {\r\n    setDataInTableAC,\r\n    setDataIsLoadedAC,\r\n    setCurrentPageInTableAC,\r\n    setLastPageInTableAC,\r\n    setTotalInTableAC,\r\n    setRequestStatusesFilterInTable,\r\n    removeItemFromTableDataByIdAC,\r\n} = slice.actions;\r\n","import React, {useEffect} from 'react'\r\nimport styles from '../../index.module.scss'\r\nimport Table from '../../../../components/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Select from \"react-select\";\r\nimport { selectStyles } from \"../../selectStyles\";\r\nimport {\r\n    setCurrentPageInTableAC,\r\n    setDataInTableAC, setDataIsLoadedAC, setLastPageInTableAC,\r\n    setRequestStatusesFilterInTable, setTotalInTableAC\r\n} from \"../../../../store/reducers/doctorsRequestsDashboard.reducer\";\r\nimport moment from \"../../../../utilities/moment-config\";\r\nimport {\r\n    getPatientRemovalRequestsList\r\n} from \"../../../../api/pages/doctors-requests-dashboard-page\";\r\nimport Pagination from \"../../../../components/Pagination\";\r\n\r\nconst PatientRemovalRequests = () => {\r\n    const dispatch = useDispatch();\r\n    const { patientRemovalRequests, filtersData } = useSelector(state => state.doctorsRequestsDashboard);\r\n\r\n    const {\r\n        filters,\r\n        tableParams,\r\n    } = patientRemovalRequests;\r\n\r\n    const {\r\n        requestStatusesData\r\n    } = filtersData;\r\n\r\n    const tableName = 'patientRemovalRequests';\r\n\r\n    const getTableData = (tableName, data) => {\r\n        const tableData = [];\r\n\r\n        data.forEach(el => {\r\n            tableData.push({\r\n                id: el.id,\r\n                therapist_name: el.provider?.provider_name,\r\n                patient_id: el.patient_id,\r\n                patient_name: el.patient?.full_name,\r\n                reason: el.reason,\r\n                requested_at: moment(el.created_at).format('MM/DD/YYYY hh:mm:ss'),\r\n                request_status: {\r\n                    id: el.status,\r\n                    label: filtersData.requestStatusesData.requestStatuses.find(item => item.id === el.status)?.label,\r\n                },\r\n                approver: {\r\n                    id: el.approver?.id,\r\n                    name: el.approver?.meta?.full_name\r\n                },\r\n                approver_comment: el.approver_comment,\r\n                approved_at: el.approved_at\r\n                    ? moment(el.approved_at).format('MM/DD/YYYY hh:mm:ss')\r\n                    : null,\r\n            })\r\n        })\r\n\r\n        return tableData;\r\n    }\r\n\r\n    const getParams = () => {\r\n        const params = {};\r\n\r\n        if (filters.requestStatuses.length) {\r\n            params.request_statuses = filters.requestStatuses.map(item => item.id);\r\n        }\r\n\r\n        return params;\r\n    };\r\n\r\n    const calculateLastPage = (total) => {\r\n        return Math.max(1, Math.ceil(total / tableParams.per_page));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setDataIsLoadedAC({ tableName, value: false }))\r\n\r\n        getPatientRemovalRequestsList(getParams())\r\n            .then(response => {\r\n                const tableData = getTableData(tableName, response.data.data);\r\n\r\n                dispatch(setDataInTableAC({ tableName, value: tableData }))\r\n\r\n                dispatch(setTotalInTableAC({ tableName, value: response.data.meta.total }));\r\n\r\n                dispatch(setDataIsLoadedAC({ tableName, value: true }))\r\n\r\n                const lastPage = calculateLastPage(response.data.meta.total);\r\n\r\n                if (lastPage !== tableParams.last_page) {\r\n                    dispatch(setLastPageInTableAC({ tableName, value: lastPage }));\r\n                }\r\n            });\r\n    }, [filters.requestStatuses]);\r\n\r\n    const multiSelectStyles = {\r\n        ...selectStyles,\r\n        control: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.control(baseStyles, state),\r\n            width: '340px',\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column gap-2\">\r\n            <div className=\"d-flex flex-wrap align-items-stretch gap-2 px-1\">\r\n                <div className={styles.selectBlock}>\r\n                    <div className={'fw-bold'}>Request Status</div>\r\n                    <Select\r\n                        value={filters.requestStatuses.length && filters.requestStatuses.map(status => ({\r\n                            value: status.id,\r\n                            label: status.label,\r\n                        }))}\r\n                        options={requestStatusesData.requestStatuses.map((status) => ({\r\n                            value: status.id,\r\n                            label: status.label,\r\n                        }))}\r\n                        onChange={(options) => dispatch(setRequestStatusesFilterInTable({tableName, options}))}\r\n                        isMulti={true}\r\n                        isSearchable={false}\r\n                        closeMenuOnSelect={false}\r\n                        styles={multiSelectStyles}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.dashboardTableWrapper}>\r\n                <Table\r\n                    columns={patientRemovalRequests.tableColumns}\r\n                    data={patientRemovalRequests.tableData}\r\n                    pageSize={tableParams.per_page}\r\n                    currentPage={tableParams.current_page}\r\n                    dataIsLoaded={patientRemovalRequests.dataIsLoaded}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"w-100 d-flex justify-content-center\">\r\n                <Pagination\r\n                    params={tableParams}\r\n                    currentPage={tableParams.current_page}\r\n                    setCurrentPage={(value) => dispatch(setCurrentPageInTableAC({tableName, value}))}\r\n                    loading={false}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientRemovalRequests;","import React, {useEffect} from 'react'\r\nimport styles from '../../index.module.scss'\r\nimport Table from '../../../../components/Table'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport moment from \"../../../../utilities/moment-config\";\r\nimport {\r\n    setCurrentPageInTableAC,\r\n    setDataInTableAC,\r\n    setDataIsLoadedAC,\r\n    setLastPageInTableAC,\r\n    setRequestStatusesFilterInTable,\r\n    setTotalInTableAC,\r\n} from \"../../../../store/reducers/doctorsRequestsDashboard.reducer\";\r\nimport {\r\n    getPatientNoteUnlockRequestsList,\r\n} from \"../../../../api/pages/doctors-requests-dashboard-page\";\r\nimport {selectStyles} from \"../../selectStyles\";\r\nimport Select from \"react-select\";\r\nimport Pagination from \"../../../../components/Pagination\";\r\n\r\nconst PatientNoteUnlockRequests = () => {\r\n    const dispatch = useDispatch();\r\n    const { patientNoteUnlockRequests, filtersData } = useSelector(state => state.doctorsRequestsDashboard);\r\n\r\n    const {\r\n        filters,\r\n        tableParams,\r\n    } = patientNoteUnlockRequests;\r\n\r\n    const {\r\n        requestStatusesData,\r\n    } = filtersData;\r\n\r\n    const tableName = 'patientNoteUnlockRequests';\r\n\r\n    const getTableData = (data) => {\r\n        const tableData = [];\r\n\r\n        data.forEach(el => {\r\n            tableData.push({\r\n                id: el.id,\r\n                therapist_name: el.provider?.provider_name,\r\n                progress_note: el.patient_note,\r\n                reason: el.reason,\r\n                requested_at: moment(el.created_at).format('MM/DD/YYYY hh:mm:ss'),\r\n                request_status: {\r\n                    id: el.status,\r\n                    label: filtersData.requestStatusesData.requestStatuses.find(item => item.id === el.status)?.label,\r\n                },\r\n                approver: {\r\n                    id: el.approver?.id,\r\n                    name: el.approver?.meta?.full_name\r\n                },\r\n                approver_comment: el.approver_comment,\r\n                approved_at: el.approved_at\r\n                    ? moment(el.approved_at).format('MM/DD/YYYY hh:mm:ss')\r\n                    : null,\r\n            })\r\n        })\r\n\r\n        return tableData;\r\n    }\r\n\r\n    const getParams = () => {\r\n        const params = {};\r\n\r\n        if (filters.requestStatuses.length) {\r\n            params.request_statuses = filters.requestStatuses.map(item => item.id);\r\n        }\r\n\r\n        return params;\r\n    };\r\n\r\n    const calculateLastPage = (total) => {\r\n        return Math.max(1, Math.ceil(total / tableParams.per_page));\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setDataIsLoadedAC({ tableName, value: false }));\r\n        dispatch(setCurrentPageInTableAC({tableName, value: 1}));\r\n\r\n        getPatientNoteUnlockRequestsList(getParams())\r\n            .then(response => {\r\n                const tableData = getTableData(response.data.data);\r\n\r\n                dispatch(setDataInTableAC({ tableName, value: tableData }));\r\n\r\n                dispatch(setTotalInTableAC({ tableName, value: response.data.meta.total }));\r\n\r\n                dispatch(setDataIsLoadedAC({ tableName, value: true }));\r\n\r\n                const lastPage = calculateLastPage(response.data.meta.total);\r\n\r\n                if (lastPage !== tableParams.last_page) {\r\n                    dispatch(setLastPageInTableAC({ tableName, value: lastPage }));\r\n                }\r\n            });\r\n    }, [filters.requestStatuses]);\r\n\r\n    const multiSelectStyles = {\r\n        ...selectStyles,\r\n        control: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.control(baseStyles, state),\r\n            width: '340px',\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column gap-2\">\r\n            <div className=\"d-flex flex-wrap align-items-stretch gap-2 px-1\">\r\n                <div className={styles.selectBlock}>\r\n                    <div className={'fw-bold'}>Request Status</div>\r\n                    <Select\r\n                        value={filters.requestStatuses.length && filters.requestStatuses.map(status => ({\r\n                            value: status.id,\r\n                            label: status.label,\r\n                        }))}\r\n                        options={requestStatusesData.requestStatuses.map((status) => ({\r\n                            value: status.id,\r\n                            label: status.label,\r\n                        }))}\r\n                        onChange={(options) => dispatch(setRequestStatusesFilterInTable({tableName, options}))}\r\n                        isMulti={true}\r\n                        isSearchable={false}\r\n                        closeMenuOnSelect={false}\r\n                        styles={multiSelectStyles}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.dashboardTableWrapper}>\r\n                <Table\r\n                    columns={patientNoteUnlockRequests.tableColumns}\r\n                    data={patientNoteUnlockRequests.tableData}\r\n                    pageSize={tableParams.per_page}\r\n                    currentPage={tableParams.current_page}\r\n                    dataIsLoaded={patientNoteUnlockRequests.dataIsLoaded}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"w-100 d-flex justify-content-center\">\r\n                <Pagination\r\n                    params={tableParams}\r\n                    currentPage={tableParams.current_page}\r\n                    setCurrentPage={(value) => dispatch(setCurrentPageInTableAC({tableName, value}))}\r\n                    loading={false}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientNoteUnlockRequests;","import React from \"react\";\r\nimport TabMate from '../../components/TabMate';\r\nimport PatientRemovalRequests from './components/PatientRemovalRequests';\r\nimport { useSelector } from 'react-redux';\r\nimport PatientNoteUnlockRequests from './components/PatientNoteUnlockRequests';\r\nimport AppMainLayout from \"../../layouts/AppMainLayout\";\r\nimport CircleLoader from \"../../components/CircleLoader\";\r\n\r\nconst DoctorsRequestsDashboard = () => {\r\n    const { patientRemovalRequests, patientNoteUnlockRequests } = useSelector(state => state.doctorsRequestsDashboard);\r\n\r\n    const tabs = [\r\n        {\r\n            eventKey: 'patient_removal_requests',\r\n            title: 'Removal Requests',\r\n            numberOfRecords: patientRemovalRequests.tableParams.total,\r\n            disabled: false,\r\n            component: <PatientRemovalRequests />\r\n        },\r\n        {\r\n            eventKey: 'patient_note_unlock_requests',\r\n            title: 'Patient Note Unlock Requests',\r\n            numberOfRecords: patientNoteUnlockRequests.tableParams.total,\r\n            disabled: false,\r\n            component: <PatientNoteUnlockRequests />\r\n        },\r\n    ];\r\n\r\n    const isLoading = false;\r\n\r\n    return (\r\n        <AppMainLayout>\r\n            <div className=\"container-fluid\">\r\n                {isLoading ? (\r\n                    <CircleLoader absolute={true} />\r\n                ) : (\r\n                    <div className=\"dashboardCard d-flex flex-column flex-columm gap-2 p-3\">\r\n                        <h4>Doctors Requests</h4>\r\n                        <TabMate\r\n                            defaultActiveKey={tabs[0].eventKey}\r\n                            tabs={tabs}\r\n                            className=\"mb-2\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </AppMainLayout>\r\n    );\r\n}\r\n\r\nexport default DoctorsRequestsDashboard","import CircleLoader from \"../../../../../../components/CircleLoader\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport styles from '../../../../index.module.scss'\r\nimport {setUnassignedPatientsAssignDataPatientId} from \"../../../../../../store/reducers/patientTransfersDashboard.reducer\";\r\n\r\nconst AssignPatientButton = ({patientId}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { assignData, archiveData } = useSelector(state => state.patientTransfersDashboard.unassignedPatients);\r\n\r\n    const handleButtonClick = () => {\r\n        dispatch(setUnassignedPatientsAssignDataPatientId({patientId}));\r\n    };\r\n\r\n    const isLoadingAssign = assignData.loadingPatients.includes(patientId);\r\n    const isLoadingArchive = archiveData.loadingPatients.includes(patientId);\r\n\r\n    return (\r\n        <button\r\n            onClick={handleButtonClick}\r\n            disabled={isLoadingAssign || isLoadingArchive}\r\n            className={classNames('btn btn-sm btn-primary d-flex justify-content-center align-items-center',\r\n                styles.tableActionButton\r\n            )}\r\n            style={{width: '60px'}}\r\n        >\r\n            {isLoadingAssign ? (\r\n                <CircleLoader\r\n                    color={\"#fff\"}\r\n                    size={\"sm\"}\r\n                />\r\n            ) : (\r\n                \"Assign\"\r\n            )}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AssignPatientButton;","import CircleLoader from \"../../../../../../components/CircleLoader\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport styles from '../../../../index.module.scss'\r\nimport {setUnassignedPatientsArchiveDataPatientId} from \"../../../../../../store/reducers/patientTransfersDashboard.reducer\";\r\n\r\nconst ArchivePatientButton = ({patientId}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { assignData, archiveData } = useSelector(state => state.patientTransfersDashboard.unassignedPatients);\r\n\r\n    const handleButtonClick = () => {\r\n        dispatch(setUnassignedPatientsArchiveDataPatientId({patientId}));\r\n    };\r\n\r\n    const isLoadingAssign = assignData.loadingPatients.includes(patientId);\r\n    const isLoadingArchive = archiveData.loadingPatients.includes(patientId);\r\n\r\n    return (\r\n        <button\r\n            onClick={handleButtonClick}\r\n            disabled={isLoadingAssign || isLoadingArchive}\r\n            className={classNames('btn btn-sm btn-danger d-flex justify-content-center align-items-center',\r\n                styles.tableActionButton\r\n            )}\r\n            style={{width: '60px'}}\r\n        >\r\n            {isLoadingArchive ? (\r\n                <CircleLoader\r\n                    color={\"#fff\"}\r\n                    size={\"sm\"}\r\n                />\r\n            ) : (\r\n                \"Archive\"\r\n            )}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ArchivePatientButton;","import CircleLoader from \"../../../../../../components/CircleLoader\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport styles from '../../../../index.module.scss'\r\nimport {setAssignedPatientsUnassignDataPatientIdAC} from \"../../../../../../store/reducers/patientTransfersDashboard.reducer\";\r\n\r\nconst UnassignPatientButton = ({patientId}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { transferData, unassignData } = useSelector(state => state.patientTransfersDashboard.assignedPatients);\r\n\r\n    const handleButtonClick = () => {\r\n        dispatch(setAssignedPatientsUnassignDataPatientIdAC({patientId}));\r\n    };\r\n\r\n    const isLoadingUnassign = unassignData.loadingPatients.includes(patientId);\r\n    const isLoadingTransfer = transferData.loadingPatients.includes(patientId);\r\n\r\n    return (\r\n        <button\r\n            onClick={handleButtonClick}\r\n            disabled={isLoadingUnassign || isLoadingTransfer}\r\n            className={classNames('btn btn-sm btn-primary d-flex justify-content-center align-items-center',\r\n                styles.tableActionButton\r\n            )}\r\n            style={{width: '75px'}}\r\n        >\r\n            {isLoadingUnassign ? (\r\n                <CircleLoader\r\n                    color={\"#fff\"}\r\n                    size={\"sm\"}\r\n                />\r\n            ) : (\r\n                \"Unassign\"\r\n            )}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default UnassignPatientButton;","import CircleLoader from \"../../../../../../components/CircleLoader\";\r\nimport React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport classNames from \"classnames\";\r\nimport styles from '../../../../index.module.scss'\r\nimport {setAssignedPatientsTransferDataPatientIdAC} from \"../../../../../../store/reducers/patientTransfersDashboard.reducer\";\r\n\r\nconst TransferPatientButton = ({patientId}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { transferData, unassignData } = useSelector(state => state.patientTransfersDashboard.assignedPatients);\r\n\r\n    const handleButtonClick = () => {\r\n        dispatch(setAssignedPatientsTransferDataPatientIdAC({patientId}));\r\n    };\r\n\r\n    const isLoadingTransfer = transferData.loadingPatients.includes(patientId);\r\n    const isLoadingUnassign = unassignData.loadingPatients.includes(patientId);\r\n\r\n    return (\r\n        <button\r\n            onClick={handleButtonClick}\r\n            disabled={isLoadingTransfer || isLoadingUnassign}\r\n            className={classNames('btn btn-sm btn-primary d-flex justify-content-center align-items-center',\r\n                styles.tableActionButton\r\n            )}\r\n            style={{width: '75px'}}\r\n        >\r\n            {isLoadingTransfer ? (\r\n                <CircleLoader\r\n                    color={\"#fff\"}\r\n                    size={\"sm\"}\r\n                />\r\n            ) : (\r\n                \"Transfer\"\r\n            )}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default TransferPatientButton;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport {\r\n    dateValueCell,\r\n    patientNameValueCell,\r\n} from \"../../mixins/cells-functions\";\r\nimport CustomBadge from \"../../pages/SecretaryDashboard/components/CustomBadge\";\r\nimport hexToRgba from \"../../utilities/hexToRgba\";\r\nimport { ROW_NUMBER_COLUMN } from \"../../constants\";\r\nimport {sortingDate, sortingStatus} from \"../../mixins/sorting-functions\";\r\nimport moment from \"../../utilities/moment-config\";\r\nimport React from \"react\";\r\nimport AssignPatientButton from \"../../pages/PatientTransfersDashboard/components/UnassignedPatients/сomponents/AssignPatientButton\";\r\nimport ArchivePatientButton from \"../../pages/PatientTransfersDashboard/components/UnassignedPatients/сomponents/ArchivePatientButton\";\r\nimport UnassignPatientButton from \"../../pages/PatientTransfersDashboard/components/AssignedPatients/components/UnassignPatientButton\";\r\nimport TransferPatientButton\r\n    from \"../../pages/PatientTransfersDashboard/components/AssignedPatients/components/TransferPatientButton\";\r\n\r\nconst initialState = {\r\n    userData: {\r\n        isOnlyAdmin: false,\r\n        isLoadedIsOnlyAdmin: false,\r\n    },\r\n    filtersData: {\r\n        statusesData: {\r\n            statuses: [],\r\n            isLoading: false,\r\n        },\r\n        providersData: {\r\n            providers: [],\r\n            isLoading: false,\r\n        },\r\n        insurancesData: {\r\n            insurances: [],\r\n            isLoading: false,\r\n        },\r\n        dateOfUnassignmentData: {\r\n            intervals: [\r\n                {\r\n                    value: 7,\r\n                    label: '1 week',\r\n                },\r\n                {\r\n                    value: 14,\r\n                    label: '2 weeks',\r\n                },\r\n                {\r\n                    value: 21,\r\n                    label: '3 weeks',\r\n                },\r\n                {\r\n                    value: 30,\r\n                    label: '1 month',\r\n                },\r\n                {\r\n                    value: 60,\r\n                    label: '2 months',\r\n                },\r\n                {\r\n                    value: 90,\r\n                    label: '3 months',\r\n                },\r\n                {\r\n                    value: -1,\r\n                    label: 'All',\r\n                },\r\n                {\r\n                    value: null,\r\n                    label: 'Never',\r\n                },\r\n            ],\r\n        },\r\n        dateOfPatientCreationData: {\r\n            intervals: [\r\n                {\r\n                    value: 7,\r\n                    label: '1 week',\r\n                },\r\n                {\r\n                    value: 14,\r\n                    label: '2 weeks',\r\n                },\r\n                {\r\n                    value: 21,\r\n                    label: '3 weeks',\r\n                },\r\n                {\r\n                    value: 30,\r\n                    label: '1 month',\r\n                },\r\n                {\r\n                    value: 60,\r\n                    label: '2 months',\r\n                },\r\n                {\r\n                    value: 90,\r\n                    label: '3 months',\r\n                },\r\n                {\r\n                    value: -1,\r\n                    label: 'All',\r\n                },\r\n            ],\r\n        },\r\n    },\r\n    assignedPatients: {\r\n        tableData: [],\r\n        filteredTableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"#\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({ value }) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"patient_insurance\",\r\n                Header: \"Patient's Insurance\",\r\n                Cell: ({value}) => (\r\n                    <div>\r\n                        {value || '-'}\r\n                    </div>\r\n                ),\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"missing_notes_count\",\r\n                Header: \"Missing Notes Count\",\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"drafts_count\",\r\n                Header: \"Drafts Count\",\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"visits_count\",\r\n                Header: \"Visits count\",\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"last_visit_date\",\r\n                Header: \"Last Visit Date\",\r\n                Cell: dateValueCell,\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"date_of_assignment\",\r\n                Header: \"Date of Assignment\",\r\n                Cell: dateValueCell,\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                Header: \"Actions\",\r\n                Cell: ({row}) => (\r\n                    <div className=\"d-flex gap-2\">\r\n                        <UnassignPatientButton patientId={row.original.patient_id} />\r\n                        <TransferPatientButton patientId={row.original.patient_id} />\r\n                    </div>\r\n                ),\r\n                disableSortBy: true,\r\n                width: 160,\r\n            },\r\n        ],\r\n        currentPage: 1,\r\n        isLoaded: false,\r\n        isLoading: false,\r\n        filters: {\r\n            provider: {\r\n                id: null,\r\n                provider_name: '',\r\n            },\r\n            search: '',\r\n            statuses: [],\r\n            insurance: {\r\n                id: null,\r\n                insurance: '',\r\n            },\r\n        },\r\n\r\n        unassignData: {\r\n            patientId: null,\r\n            loadingPatients: [],\r\n        },\r\n        transferData: {\r\n            patientId: null,\r\n            loadingPatients: [],\r\n        },\r\n    },\r\n    unassignedPatients: {\r\n        tableData: [],\r\n        filteredTableData: [],\r\n        tableColumns: [\r\n            {\r\n                Header: \"#\",\r\n                accessor: ROW_NUMBER_COLUMN,\r\n                disableSortBy: true,\r\n                width: 50,\r\n            },\r\n            {\r\n                accessor: \"patient_name\",\r\n                Header: \"Patient's Name\",\r\n                Cell: patientNameValueCell,\r\n                width: 150,\r\n            },\r\n            {\r\n                accessor: \"patient_status\",\r\n                Header: \"Patient's Status\",\r\n                Cell: ({ value }) => (\r\n                    <CustomBadge\r\n                        title={value.status}\r\n                        background={hexToRgba(\"#\" + value.hex_color, 0.2)}\r\n                        textColor={\"#\" + value.hex_color}\r\n                    />\r\n                ),\r\n                sortType: sortingStatus,\r\n                width: 80,\r\n            },\r\n            {\r\n                accessor: \"patient_insurance\",\r\n                Header: \"Patient's Insurance\",\r\n                Cell: ({value}) => (\r\n                    <div>\r\n                        {value || '-'}\r\n                    </div>\r\n                ),\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"old_provider\",\r\n                Cell: ({value}) => (\r\n                    <div>\r\n                        {value.provider_name || '-'}\r\n                    </div>\r\n                ),\r\n                Header: \"Old Therapist\",\r\n                width: 120,\r\n            },\r\n            {\r\n                accessor: \"date_of_unassignment\",\r\n                Header: \"Date of Unassignment\",\r\n                Cell: dateValueCell,\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                accessor: \"date_of_patient_creation\",\r\n                Header: \"Date of Pt. Creation\",\r\n                Cell: dateValueCell,\r\n                sortType: sortingDate,\r\n                width: 100,\r\n            },\r\n            {\r\n                Header: \"Actions\",\r\n                Cell: ({row}) => (\r\n                    <div className=\"d-flex gap-2\">\r\n                        <AssignPatientButton patientId={row.original.patient_id} />\r\n                        {row.original.patient_status.status !== 'Archived'\r\n                            ? <ArchivePatientButton patientId={row.original.patient_id} />\r\n                            : null\r\n                        }\r\n                    </div>\r\n                ),\r\n                disableSortBy: true,\r\n                width: 130,\r\n            },\r\n        ],\r\n        currentPage: 1,\r\n        isLoading: true,\r\n        filters: {\r\n            old_provider: {\r\n                id: null,\r\n                provider_name: '',\r\n            },\r\n            search: '',\r\n            statuses: [],\r\n            insurance: {\r\n                id: null,\r\n                insurance: '',\r\n            },\r\n            date_of_unassignment: {\r\n                value: -1,\r\n                label: 'All',\r\n            },\r\n            date_of_patient_creation: {\r\n                value: -1,\r\n                label: 'All',\r\n            },\r\n            show_archived_patients: false,\r\n        },\r\n\r\n        archiveData: {\r\n            patientId: null,\r\n            loadingPatients: [],\r\n        },\r\n        assignData: {\r\n            patientId: null,\r\n            loadingPatients: [],\r\n        }\r\n    },\r\n};\r\n\r\nconst slice = createSlice({\r\n    name: \"patientTransfersDashboardReducer\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        setUserDataIsOnlyAdmin(state, action) {\r\n            state.userData.isOnlyAdmin = action.payload.value;\r\n        },\r\n        setUserDataIsLoadedIsOnlyAdmin(state, action) {\r\n            state.userData.isLoadedIsOnlyAdmin = action.payload.value;\r\n        },\r\n        setFiltersDataProvidersDataProvidersAC(state, action) {\r\n            state.filtersData.providersData.providers = action.payload.data;\r\n        },\r\n        setFiltersDataProvidersDataIsLoadingAC(state, action) {\r\n            state.filtersData.providersData.isLoading = action.payload.value;\r\n        },\r\n        setFiltersDataStatusesDataStatusesAC(state, action) {\r\n            state.filtersData.statusesData.statuses = action.payload.data;\r\n        },\r\n        setFiltersDataStatusesDataIsLoadingAC(state, action) {\r\n            state.filtersData.statusesData.isLoading = action.payload.value;\r\n        },\r\n        setFiltersDataInsurancesDataInsurancesAC(state, action) {\r\n            state.filtersData.insurancesData.insurances = action.payload.data;\r\n        },\r\n        setFiltersDataInsurancesDataIsLoadingAC(state, action) {\r\n            state.filtersData.insurancesData.isLoading = action.payload.value;\r\n        },\r\n\r\n        setAssignedPatientsTableDataAC(state, action) {\r\n\r\n            state.assignedPatients.tableData = action.payload.data.map(item => {\r\n                const date_of_assignment =\r\n                    item.patient_has_providers.filter(item => item.providers_id === state.assignedPatients.filters.provider.id)[0]?.created_at;\r\n\r\n                return {\r\n                    id: item.id,\r\n                    patient_id: item.id,\r\n                    patient_name: item.full_name,\r\n                    patient_status: item.status,\r\n                    patient_insurance_id: item.insurance?.id,\r\n                    patient_insurance: item.insurance?.insurance,\r\n                    patient_sex: item.sex,\r\n                    patient_age: item.date_of_birth\r\n                        ? moment().diff(item.date_of_birth, 'years')\r\n                        : null,\r\n                    missing_notes_count: item.missing_notes_count,\r\n                    drafts_count: item.drafts_count,\r\n                    visits_count: item.visits_count,\r\n                    upcoming_appointments_count: item.upcoming_appointments_count,\r\n                    last_visit_date: item.last_visit_date\r\n                        ? moment(item.last_visit_date).format('MM/DD/YYYY')\r\n                        : null,\r\n                    date_of_assignment: date_of_assignment\r\n                        ? moment(date_of_assignment).format('MM/DD/YYYY')\r\n                        : null,\r\n                    next_appointment_date: item.next_appointment_date\r\n                        ? moment(item.next_appointment_date).format('MM/DD/YYYY')\r\n                        : null,\r\n                    patient_has_providers: item.patient_has_providers,\r\n                };\r\n            });\r\n        },\r\n        setAssignedPatientsFilteredTableDataAC(state, action) {\r\n            state.assignedPatients.filteredTableData = action.payload.data;\r\n        },\r\n        updateAssignedPatientsFilteredTableDataAC(state) {\r\n            const { filters } = state.assignedPatients;\r\n\r\n            const searchInputLowerCase = filters.search.toLowerCase();\r\n            const filterStatusesLabels = filters.statuses.map(item => item.status);\r\n\r\n            state.assignedPatients.filteredTableData = state.assignedPatients.tableData.filter(item => {\r\n                if (filters.search && item.patient_name.toLowerCase().indexOf(searchInputLowerCase) === -1) {\r\n                    return false;\r\n                }\r\n                if (filters.statuses.length && ! filterStatusesLabels.includes(item.patient_status.status)) {\r\n                    return false;\r\n                }\r\n                if (filters.insurance.id && item.patient_insurance_id !== filters.insurance.id) {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            })\r\n        },\r\n\r\n        setAssignedPatientsCurrentPageAC(state, action) {\r\n            state.assignedPatients.currentPage = action.payload.value;\r\n        },\r\n        setAssignedPatientsIsLoadingAC(state, action) {\r\n            state.assignedPatients.isLoading = action.payload.value;\r\n        },\r\n        setAssignedPatientsIsLoadedAC(state, action) {\r\n            state.assignedPatients.isLoaded = action.payload.value;\r\n        },\r\n\r\n        setAssignedPatientsFiltersProviderAC(state, action) {\r\n            const {id, provider_name} = action.payload;\r\n\r\n            state.assignedPatients.filters.provider.id = id;\r\n            state.assignedPatients.filters.provider.provider_name = provider_name;\r\n        },\r\n        setAssignedPatientsFiltersSearchAC(state, action) {\r\n            state.assignedPatients.currentPage = 1;\r\n            state.assignedPatients.filters.search = action.payload.value;\r\n        },\r\n        setAssignedPatientsFiltersStatusesAC(state, action) {\r\n            state.assignedPatients.currentPage = 1;\r\n            state.assignedPatients.filters.statuses = action.payload.options.map(option => ({\r\n                id: option.value,\r\n                status: option.label,\r\n            }));\r\n        },\r\n        setAssignedPatientsFiltersInsuranceAC(state, action) {\r\n            const {id, insurance} = action.payload;\r\n\r\n            state.assignedPatients.filters.insurance.id = id;\r\n            state.assignedPatients.filters.insurance.insurance = insurance;\r\n        },\r\n\r\n        setAssignedPatientsUnassignDataPatientIdAC(state, action) {\r\n            state.assignedPatients.unassignData.patientId = action.payload.patientId;\r\n        },\r\n        addAssignedPatientsUnassignDataLoadingPatientsAC(state, action) {\r\n            if (! state.assignedPatients.unassignData.loadingPatients.includes(action.payload.patientId)) {\r\n                state.assignedPatients.unassignData.loadingPatients.push(action.payload.patientId);\r\n            }\r\n        },\r\n        removePatientIdFromAssignedPatientsUnassignDataLoadingPatientsAC(state, action) {\r\n            const index = state.assignedPatients.unassignData.loadingPatients\r\n                .findIndex(item => item === action.payload.patientId);\r\n            if (index !== -1) {\r\n                state.assignedPatients.unassignData.loadingPatients.splice(index, 1);\r\n            }\r\n        },\r\n        setAssignedPatientsTransferDataPatientIdAC(state, action) {\r\n            state.assignedPatients.transferData.patientId = action.payload.patientId;\r\n        },\r\n        addAssignedPatientsTransferDataLoadingPatientsAC(state, action) {\r\n            if (! state.assignedPatients.transferData.loadingPatients.includes(action.payload.patientId)) {\r\n                state.assignedPatients.transferData.loadingPatients.push(action.payload.patientId);\r\n            }\r\n        },\r\n        removePatientIdFromAssignedPatientsTransferDataLoadingPatientsAC(state, action) {\r\n            const index = state.assignedPatients.transferData.loadingPatients\r\n                .findIndex(item => item === action.payload.patientId);\r\n            if (index !== -1) {\r\n                state.assignedPatients.transferData.loadingPatients.splice(index, 1);\r\n            }\r\n        },\r\n        deletePatientFromAssignedPatientsTableDataAC(state, action) {\r\n            const index = state.assignedPatients.tableData.findIndex(item => item.patient_id === action.payload.patientId)\r\n            if (index !== -1) {\r\n                state.assignedPatients.tableData.splice(index, 1);\r\n            }\r\n        },\r\n\r\n        setUnassignedPatientsTableDataAC(state, action) {\r\n            state.unassignedPatients.tableData = action.payload.data.map(item => ({\r\n                id: item.id,\r\n                patient_id: item.patient.id,\r\n                patient_name: `${item.patient.first_name} ${item.patient.last_name} ${item.patient.middle_name || ''}`,\r\n                patient_status: item.patient.status,\r\n                patient_insurance_id: item.patient.insurance?.id,\r\n                patient_insurance: item.patient.insurance?.insurance,\r\n                old_provider: {\r\n                    id: item.old_provider?.id,\r\n                    provider_name: item.old_provider?.provider_name,\r\n                },\r\n                date_of_unassignment: item.unassigned_at\r\n                    ? moment(item.unassigned_at).format('MM/DD/YYYY')\r\n                    : null,\r\n                date_of_patient_creation: item.patient.created_at\r\n                    ? moment(item.patient.created_at).format('MM/DD/YYYY')\r\n                    : null,\r\n            }));\r\n        },\r\n        setUnassignedPatientsFilteredTableDataAC(state, action) {\r\n            state.unassignedPatients.filteredTableData = action.payload.data;\r\n        },\r\n        setUnassignedPatientsCurrentPageAC(state, action) {\r\n            state.unassignedPatients.currentPage = action.payload.value;\r\n        },\r\n        setUnassignedPatientsIsLoadingAC(state, action) {\r\n            state.unassignedPatients.isLoading = action.payload.value;\r\n        },\r\n\r\n        setUnassignedPatientsFiltersOldProviderAC(state, action) {\r\n            const {id, provider_name} = action.payload;\r\n\r\n            state.unassignedPatients.filters.old_provider.id = id;\r\n            state.unassignedPatients.filters.old_provider.provider_name = provider_name;\r\n        },\r\n        setUnassignedPatientsFiltersSearchAC(state, action) {\r\n            state.unassignedPatients.currentPage = 1;\r\n            state.unassignedPatients.filters.search = action.payload.value;\r\n        },\r\n        setUnassignedPatientsFiltersStatusesAC(state, action) {\r\n            state.unassignedPatients.currentPage = 1;\r\n            state.unassignedPatients.filters.statuses = action.payload.options.map(option => ({\r\n                id: option.value,\r\n                status: option.label,\r\n            }));\r\n        },\r\n        setUnassignedPatientsFiltersInsuranceAC(state, action) {\r\n            const {id, insurance} = action.payload;\r\n\r\n            state.unassignedPatients.filters.insurance.id = id;\r\n            state.unassignedPatients.filters.insurance.insurance = insurance;\r\n        },\r\n        setUnassignedPatientsFiltersDateOfUnassignAC(state, action) {\r\n            const {value, label} = action.payload;\r\n\r\n            state.unassignedPatients.currentPage = 1;\r\n            state.unassignedPatients.filters.date_of_unassignment.value = value;\r\n            state.unassignedPatients.filters.date_of_unassignment.label = label;\r\n        },\r\n        setUnassignedPatientsFiltersDateOfPatientCreationAC(state, action) {\r\n            const {value, label} = action.payload;\r\n\r\n            state.unassignedPatients.currentPage = 1;\r\n            state.unassignedPatients.filters.date_of_patient_creation.value = value;\r\n            state.unassignedPatients.filters.date_of_patient_creation.label = label;\r\n        },\r\n        setUnassignedPatientsFiltersShowArchivedPatientsAC(state, action) {\r\n            state.unassignedPatients.filters.show_archived_patients = action.payload.value;\r\n        },\r\n        updateUnassignedPatientsFilteredTableDataAC(state) {\r\n            const { filters } = state.unassignedPatients;\r\n\r\n            const searchInputLowerCase = filters.search.toLowerCase();\r\n            const filterStatusesLabels = filters.statuses.map(item => item.status);\r\n            const minDateOfPatientUnassignment = filters.date_of_unassignment.value && filters.date_of_unassignment.value > 0\r\n                ? moment().subtract(filters.date_of_unassignment.value, \"days\")\r\n                : null;\r\n            const minDateOfPatientCreation = filters.date_of_patient_creation.value && filters.date_of_patient_creation.value > 0\r\n                ? moment().subtract(filters.date_of_patient_creation.value, \"days\")\r\n                : null;\r\n\r\n            state.unassignedPatients.filteredTableData = state.unassignedPatients.tableData.filter(item => {\r\n                if (filters.old_provider.id && item.old_provider.id !== filters.old_provider.id) {\r\n                    return false;\r\n                }\r\n                if (filters.search && item.patient_name.toLowerCase().indexOf(searchInputLowerCase) === -1) {\r\n                    return false;\r\n                }\r\n                if (filters.statuses.length && ! filterStatusesLabels.includes(item.patient_status.status)) {\r\n                    return false;\r\n                }\r\n                if (filters.insurance.id && item.patient_insurance_id !== filters.insurance.id) {\r\n                    return false;\r\n                }\r\n                if (filters.date_of_unassignment.value !== -1) {\r\n                    if (filters.date_of_unassignment.value === null && item.date_of_unassignment !== null) {\r\n                        return false;\r\n                    }\r\n                    if ((filters.date_of_unassignment.value !== null && item.date_of_unassignment === null)\r\n                        || moment(item.date_of_unassignment).isBefore(minDateOfPatientUnassignment)\r\n                    ) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (filters.date_of_patient_creation.value !== -1) {\r\n                    if (moment(item.date_of_patient_creation).isBefore(minDateOfPatientCreation)) {\r\n                        return false;\r\n                    }\r\n                }\r\n                if (! filters.show_archived_patients && item.patient_status.status === 'Archived') {\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n            })\r\n        },\r\n\r\n\r\n        setUnassignedPatientsArchiveDataPatientId(state, action) {\r\n            state.unassignedPatients.archiveData.patientId = action.payload.patientId;\r\n        },\r\n        addPatientIdToUnassignedPatientsArchiveDataLoadingPatients(state, action) {\r\n            if (! state.unassignedPatients.archiveData.loadingPatients.includes(action.payload.patientId)) {\r\n                state.unassignedPatients.archiveData.loadingPatients.push(action.payload.patientId);\r\n            }\r\n        },\r\n        removePatientIdFromUnassignedPatientsArchiveDataLoadingPatients(state, action) {\r\n            const index = state.unassignedPatients.archiveData.loadingPatients\r\n                .findIndex(item => item === action.payload.patientId);\r\n            if (index !== -1) {\r\n                state.unassignedPatients.archiveData.loadingPatients.splice(index, 1);\r\n            }\r\n        },\r\n        setUnassignedPatientsAssignDataPatientId(state, action) {\r\n            state.unassignedPatients.assignData.patientId = action.payload.patientId;\r\n        },\r\n        addPatientIdToUnassignedPatientsAssignDataLoadingPatients(state, action) {\r\n            if (! state.unassignedPatients.assignData.loadingPatients.includes(action.payload.patientId)) {\r\n                state.unassignedPatients.assignData.loadingPatients.push(action.payload.patientId);\r\n            }\r\n        },\r\n        removePatientIdFromUnassignedPatientsAssignDataLoadingPatients(state, action) {\r\n            const index = state.unassignedPatients.assignData.loadingPatients\r\n                .findIndex(item => item === action.payload.patientId);\r\n            if (index !== -1) {\r\n                state.unassignedPatients.assignData.loadingPatients.splice(index, 1);\r\n            }\r\n        },\r\n        deletePatientFromUnassignedPatientTableData(state, action) {\r\n            const index = state.unassignedPatients.tableData.findIndex(item => item.patient_id === action.payload.patientId);\r\n\r\n            if (index !== -1) {\r\n                state.unassignedPatients.tableData.splice(index, 1);\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport const patientTransfersDashboardReducerReducer = slice.reducer;\r\n\r\nexport const {\r\n    setUserDataIsOnlyAdmin,\r\n    setUserDataIsLoadedIsOnlyAdmin,\r\n\r\n    setFiltersDataProvidersDataProvidersAC,\r\n    setFiltersDataProvidersDataIsLoadingAC,\r\n    setFiltersDataStatusesDataStatusesAC,\r\n    setFiltersDataStatusesDataIsLoadingAC,\r\n    setFiltersDataInsurancesDataInsurancesAC,\r\n    setFiltersDataInsurancesDataIsLoadingAC,\r\n\r\n    setAssignedPatientsTableDataAC,\r\n    setAssignedPatientsFiltersStatusesAC,\r\n    setAssignedPatientsCurrentPageAC,\r\n    setAssignedPatientsIsLoadingAC,\r\n    setAssignedPatientsIsLoadedAC,\r\n\r\n    setAssignedPatientsFiltersProviderAC,\r\n    setAssignedPatientsFiltersSearchAC,\r\n    setAssignedPatientsFiltersInsuranceAC,\r\n    setAssignedPatientsFilteredTableDataAC,\r\n    updateAssignedPatientsFilteredTableDataAC,\r\n\r\n    setAssignedPatientsUnassignDataPatientIdAC,\r\n    addAssignedPatientsUnassignDataLoadingPatientsAC,\r\n    removePatientIdFromAssignedPatientsUnassignDataLoadingPatientsAC,\r\n    setAssignedPatientsTransferDataPatientIdAC,\r\n    addAssignedPatientsTransferDataLoadingPatientsAC,\r\n    removePatientIdFromAssignedPatientsTransferDataLoadingPatientsAC,\r\n    deletePatientFromAssignedPatientsTableDataAC,\r\n\r\n    setUnassignedPatientsTableDataAC,\r\n    setUnassignedPatientsFilteredTableDataAC,\r\n    setUnassignedPatientsCurrentPageAC,\r\n    setUnassignedPatientsIsLoadingAC,\r\n\r\n    setUnassignedPatientsFiltersOldProviderAC,\r\n    setUnassignedPatientsFiltersSearchAC,\r\n    setUnassignedPatientsFiltersStatusesAC,\r\n    setUnassignedPatientsFiltersInsuranceAC,\r\n    setUnassignedPatientsFiltersDateOfUnassignAC,\r\n    setUnassignedPatientsFiltersDateOfPatientCreationAC,\r\n    setUnassignedPatientsFiltersShowArchivedPatientsAC,\r\n    updateUnassignedPatientsFilteredTableDataAC,\r\n\r\n    setUnassignedPatientsArchiveDataPatientId,\r\n    addPatientIdToUnassignedPatientsArchiveDataLoadingPatients,\r\n    removePatientIdFromUnassignedPatientsArchiveDataLoadingPatients,\r\n    setUnassignedPatientsAssignDataPatientId,\r\n    addPatientIdToUnassignedPatientsAssignDataLoadingPatients,\r\n    removePatientIdFromUnassignedPatientsAssignDataLoadingPatients,\r\n    deletePatientFromUnassignedPatientTableData,\r\n} = slice.actions;\r\n","import axios from \"axios\";\r\n\r\nexport const getAllProviders = () => {\r\n    return axios.get(`/provider/all`, {\r\n        params: {\r\n            with_trashed: 1,\r\n        }\r\n    });\r\n};\r\n\r\nexport const getPatientStatuses = () => {\r\n    return axios.get(`/patient/statuses/`);\r\n};\r\n\r\nexport const getAllInsurances = () => {\r\n    return axios.get(`/api/insurances/all`);\r\n};\r\n\r\nexport const getPatientsByProviderId = (providerId) => {\r\n    return axios.get(`/api/providers/${providerId}/patients`);\r\n}\r\n\r\nexport const getPatientTransfers = () => {\r\n    return axios.get(`/api/transfers`);\r\n}\r\n\r\nexport const unassignProviderFromPatient = ({patientId, providerId, reason, unassignAllProviders}) => {\r\n    return axios.post('/dashboard/delete-patient-provider', {\r\n        patientId,\r\n        providerId,\r\n        reason,\r\n        unassignAllProviders,\r\n    });\r\n}\r\nexport const transferPatient = ({patientId, oldProviderId, newProviderId, reason}) => {\r\n    return axios.post('/api/transfers/transfer-patient', {\r\n        patient_id: patientId,\r\n        old_provider_id: oldProviderId,\r\n        new_provider_id: newProviderId,\r\n        reason,\r\n    });\r\n}\r\nexport const assignProviderToPatient = ({patientId, providerId}) => {\r\n    return axios.post('/dashboard/add-patient-provider', {\r\n        patientId,\r\n        providerId,\r\n    });\r\n}\r\n\r\nexport const archivePatientById = ({patientId, comment}) => {\r\n    return axios.put(`/dashboard/patients/${patientId}`, {\r\n        status_id: 7,\r\n        comment,\r\n    })\r\n}\r\n","import React from \"react\";\r\nimport CustomBadge from \"../../../../../SecretaryDashboard/components/CustomBadge\";\r\nimport hexToRgba from \"../../../../../../utilities/hexToRgba\";\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport styles from \"../../../../../../components/InsuranceAuthorizationNumber/index.module.scss\";\r\nimport Icon from \"@mdi/react\";\r\nimport {mdiHelpCircle} from \"@mdi/js\";\r\n\r\nconst UnassignPatientInfo = ({patientData, provider, supervisor, otherProviders}) => {\r\n    return (\r\n        <div>\r\n            <div className={'d-flex align-items-center'}>\r\n                <span>Patient:</span>\r\n                <b className={'ms-1'}>{patientData.patient_name}</b>,\r\n                <span className={'ms-1'}>{patientData.patient_age} years old,</span>\r\n                <span className={'mx-1'}>{patientData.patient_sex},</span>\r\n                <div className={'d-inline-flex'}>\r\n                    <CustomBadge\r\n                        title={patientData.patient_status.status}\r\n                        background={hexToRgba(\"#\" + patientData.patient_status.hex_color, 0.2)}\r\n                        textColor={\"#\" + patientData.patient_status.hex_color}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={'d-flex align-items-center gap-1'}>\r\n                <span>Provider: <b>{provider.provider_name}</b></span>\r\n\r\n                {otherProviders.length !== 0 &&\r\n                    <OverlayTrigger\r\n                        placement=\"bottom\"\r\n                        overlay={\r\n                            <Tooltip>\r\n                                <div>\r\n                                    {otherProviders.map(item => <div key={item.id}>{item.provider.provider_name}</div>)}\r\n                                </div>\r\n                            </Tooltip>\r\n                        }>\r\n                        <div className={styles.helpIcon}>\r\n                            <Icon path={mdiHelpCircle} size={0.6} />\r\n                        </div>\r\n                    </OverlayTrigger>\r\n                }\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div>\r\n                <div>Missing progress notes count: {patientData.missing_notes_count}</div>\r\n                <div>Drafts count: {patientData.drafts_count}</div>\r\n                <div>Upcoming appointments count: {patientData.upcoming_appointments_count}</div>\r\n                <div>Next appointment: {patientData.next_appointment_date || '-'}</div>\r\n                <div>Supervisor: {supervisor ? <b>{supervisor.provider?.provider_name}</b> : '-'}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UnassignPatientInfo","import React from \"react\";\r\n\r\nconst UnassignPatientHelpText = ({patientData, supervisor}) => {\r\n    const warnings = [];\r\n\r\n    if (patientData.patient_status.status === 'Lost' && patientData.visits_count) {\r\n        warnings.push(`The patient’s status is “Lost“ and the therapist has a completed appointment with the patient.`);\r\n    }\r\n    if (patientData.missing_notes_count) {\r\n        warnings.push(`The therapist has ${patientData.missing_notes_count} missing progress note${patientData.missing_notes_count > 1 ? 's' : ''}.`);\r\n    }\r\n    if (patientData.upcoming_appointments_count) {\r\n        warnings.push(`Upcoming appointments with selected provider will be deleted`);\r\n    }\r\n    if (supervisor) {\r\n        warnings.push(`Supervisor ${supervisor.provider?.provider_name} will be unassigned`);\r\n    }\r\n\r\n    if (warnings.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={'text-danger'}>\r\n            Warnings:\r\n            <ul className={'ps-4'}>\r\n                {warnings.map((item, index) => <li key={index}>{item}</li>)}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UnassignPatientHelpText;","import React from \"react\";\r\n\r\nconst UnassignPatientAlert = ({patientData}) => {\r\n    return (\r\n        <div className=\"alert alert-danger mb-0\" role=\"alert\">\r\n            The therapist has {patientData.drafts_count} draft progress note{patientData.drafts_count > 1 ? 's' : ''} and {patientData.missing_notes_count} missing progress note{patientData.missing_notes_count > 1 ? 's' : ''}. Make sure that all progress notes have been finalized before you proceed\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UnassignPatientAlert;","import React, {useEffect, useState} from \"react\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CircleLoader from \"../../../../../../components/CircleLoader\";\r\nimport {\r\n    addAssignedPatientsUnassignDataLoadingPatientsAC,\r\n    removePatientIdFromAssignedPatientsUnassignDataLoadingPatientsAC,\r\n    deletePatientFromAssignedPatientsTableDataAC,\r\n    setAssignedPatientsUnassignDataPatientIdAC,\r\n    setUnassignedPatientsIsLoadingAC,\r\n    setUnassignedPatientsTableDataAC,\r\n} from \"../../../../../../store/reducers/patientTransfersDashboard.reducer\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./../../../../index.module.scss\";\r\nimport {\r\n    getPatientTransfers,\r\n    unassignProviderFromPatient\r\n} from \"../../../../../../api/pages/patient-transfer-dashboard-page\";\r\nimport UnassignPatientInfo from \"../UnassignPatientInfo\";\r\nimport UnassignPatientHelpText from \"../UnassignPatientHelpText\";\r\nimport UnassignPatientAlert from \"../UnassignPatientAlert\";\r\n\r\nconst UnassignPatientModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isLoadingUnassign, setIsLoadingUnassign] = useState(false);\r\n    const [reason, setReason] = useState('');\r\n    const [unassignAllProviders, setUnassignAllProviders] = useState(false);\r\n    const [reasonError, setReasonError] = useState('');\r\n\r\n    const {\r\n        userData,\r\n        assignedPatients,\r\n    } = useSelector(state => state.patientTransfersDashboard);\r\n\r\n    const {\r\n        unassignData,\r\n        tableData,\r\n        filters,\r\n    } = assignedPatients;\r\n\r\n    useEffect(() => {\r\n        if (unassignData.patientId) {\r\n            localStorage.setItem(\r\n                'currentUnassignPatientId',\r\n                unassignData.patientId,\r\n            );\r\n            setReason('');\r\n            setUnassignAllProviders(false);\r\n            setReasonError('');\r\n            setIsLoadingUnassign(false);\r\n        }\r\n    }, [unassignData.patientId]);\r\n\r\n    const patientData = tableData[tableData.findIndex(item => item.patient_id === unassignData.patientId)];\r\n\r\n    if (! patientData) {\r\n        return null;\r\n    }\r\n\r\n    const provider = filters.provider;\r\n    const supervisor = patientData.patient_has_providers.filter(item => item.supervisee_id === provider.id)[0];\r\n    const otherProviders = patientData.patient_has_providers\r\n        .filter(item => item.providers_id !== provider.id && ! item.chart_read_only);\r\n    const hasDraftsAndProgressNotes = patientData.drafts_count && patientData.missing_notes_count;\r\n    const canUnassignProvider = userData.isOnlyAdmin || ! hasDraftsAndProgressNotes;\r\n\r\n    const fetchPatientTransfers = () => {\r\n        dispatch(setUnassignedPatientsIsLoadingAC({value: true}));\r\n\r\n        getPatientTransfers()\r\n            .then((response) => {\r\n                dispatch(setUnassignedPatientsTableDataAC({\r\n                    data: response.data.data,\r\n                }));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setUnassignedPatientsIsLoadingAC({value: false}));\r\n            });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        dispatch(setAssignedPatientsUnassignDataPatientIdAC({patientId: null}));\r\n    };\r\n\r\n    const handleUnassign = () => {\r\n        if (! canUnassignProvider) {\r\n            return;\r\n        }\r\n\r\n        if (! reason) {\r\n            setReasonError('Reason of unassignment is required');\r\n\r\n            return;\r\n        } else {\r\n            setReasonError('');\r\n        }\r\n\r\n        setIsLoadingUnassign(true);\r\n        dispatch(addAssignedPatientsUnassignDataLoadingPatientsAC({patientId: patientData.patient_id}));\r\n\r\n        unassignProviderFromPatient({\r\n            patientId: patientData.patient_id,\r\n            providerId: provider.id,\r\n            reason,\r\n            unassignAllProviders\r\n        })\r\n            .then(() => {\r\n                dispatch(deletePatientFromAssignedPatientsTableDataAC({patientId: patientData.patient_id}));\r\n                fetchPatientTransfers();\r\n                if (localStorage.getItem('currentUnassignPatientId') === patientData.patient_id.toString()) {\r\n                    handleClose();\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setIsLoadingUnassign(false);\r\n                dispatch(removePatientIdFromAssignedPatientsUnassignDataLoadingPatientsAC({patientId: patientData.patient_id}));\r\n            });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={provider.id}\r\n            onHide={handleClose}\r\n            className={'custom-modal'}\r\n            centered\r\n        >\r\n            <ModalHeader closeButton>\r\n                <div>Unassign patient</div>\r\n            </ModalHeader>\r\n            <ModalBody style={{gap: '24px', paddingBottom: '20px'}}>\r\n                {hasDraftsAndProgressNotes\r\n                    ? <UnassignPatientAlert patientData={patientData}/>\r\n                    : null\r\n                }\r\n\r\n                <UnassignPatientInfo\r\n                    patientData={patientData}\r\n                    provider={provider}\r\n                    supervisor={supervisor}\r\n                    otherProviders={otherProviders}\r\n                />\r\n\r\n                <div>\r\n                    <div\r\n                        className={classNames('form-group', styles.formGroup, reasonError ? styles.formGroupHasError : '')}>\r\n                        <label htmlFor=\"unassignReason\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                            Reason <span className={\"text-danger\"}>*</span>\r\n                        </label>\r\n                        <input\r\n                            id={'unassignReason'}\r\n                            className={classNames('form-control', styles.formInput)}\r\n                            value={reason}\r\n                            onChange={(e) => setReason(e.target.value)}\r\n                        />\r\n                        {reasonError &&\r\n                            <div className={styles.formErrors}>\r\n                                {reasonError}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    {otherProviders.length !== 0 &&\r\n                        <div className={classNames('form-check mt-3', styles.formCheck)}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"unassign-all-providers\"\r\n                                className={classNames('form-check-input', styles.formCheckInput)}\r\n                                checked={unassignAllProviders}\r\n                                onChange={(event) => setUnassignAllProviders(event.target.checked)}\r\n                            />\r\n                            <label\r\n                                htmlFor=\"unassign-all-providers\"\r\n                                className={styles.formCheckLabel}\r\n                            >\r\n                                Unassign all providers from this patient\r\n                            </label>\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                <UnassignPatientHelpText patientData={patientData} supervisor={supervisor}/>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <div className=\"d-flex gap-3 justify-content-end\">\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleUnassign}\r\n                        className=\"btn btn-large btn-primary d-flex align-items-center justify-content-center gap-1\"\r\n                        style={{width: '125px'}}\r\n                        disabled={isLoadingUnassign || ! canUnassignProvider}\r\n                    >\r\n                        {isLoadingUnassign ?\r\n                            <CircleLoader\r\n                                color={\"#fff\"}\r\n                                size={\"small\"}\r\n                            /> :\r\n                            \"Unassign\"\r\n                        }\r\n                    </button>\r\n                </div>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default UnassignPatientModal;\r\n","import { getSelectStyles } from \"../../utilities/react-select-styles\";\r\n\r\nconst defaultSelectStyles = getSelectStyles();\r\n\r\nconst getBorderStyle = (state) => {\r\n    let color;\r\n\r\n    if (state.selectProps.className === \"has-error\") {\r\n        color = \"#dc3545\";\r\n    } else if (state.isFocused) {\r\n        color = \"#A4C9E5\";\r\n    } else if (state.isDisabled) {\r\n        color = \"#e6e6e6\";\r\n    } else {\r\n        color = '#ccc';\r\n    }\r\n\r\n    return `1px solid ${color}`;\r\n}\r\n\r\nexport const selectStyles = {\r\n    ...defaultSelectStyles,\r\n    control: (baseStyles, state) => ({\r\n        ...baseStyles,\r\n        ...defaultSelectStyles.control(baseStyles, state),\r\n        minWidth: \"115px\",\r\n        width: \"200px\",\r\n        minHeight: \"38px\",\r\n        height: \"auto\",\r\n        border: getBorderStyle(state),\r\n        \"&:hover\": {\r\n            border: \"1px solid \" + (state.selectProps.className === \"has-error\" ? \"#dc3545\" : \"#b3b3b3\"),\r\n        }\r\n    }),\r\n};","import React, {useEffect, useState} from \"react\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CircleLoader from \"../../../../../../components/CircleLoader\";\r\nimport {\r\n    addAssignedPatientsTransferDataLoadingPatientsAC,\r\n    removePatientIdFromAssignedPatientsTransferDataLoadingPatientsAC,\r\n    deletePatientFromAssignedPatientsTableDataAC,\r\n    setAssignedPatientsTransferDataPatientIdAC,\r\n} from \"../../../../../../store/reducers/patientTransfersDashboard.reducer\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./../../../../index.module.scss\";\r\nimport {\r\n    transferPatient,\r\n} from \"../../../../../../api/pages/patient-transfer-dashboard-page\";\r\nimport Select from \"react-select\";\r\nimport {selectStyles} from \"../../../../selectStyles\";\r\nimport UnassignPatientInfo from \"../UnassignPatientInfo\";\r\nimport UnassignPatientHelpText from \"../UnassignPatientHelpText\";\r\nimport UnassignPatientAlert from \"../UnassignPatientAlert\";\r\n\r\nconst TransferPatientModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isLoadingUnassign, setIsLoadingUnassign] = useState(false);\r\n    const [reason, setReason] = useState('');\r\n    const [newProviderId, setNewProviderId] = useState('');\r\n    const [errors, setErrors] = useState({\r\n        reason: '',\r\n        newProviderId: '',\r\n    });\r\n\r\n    const {\r\n        userData,\r\n        assignedPatients,\r\n        filtersData,\r\n    } = useSelector(state => state.patientTransfersDashboard);\r\n\r\n    const {\r\n        transferData,\r\n        tableData,\r\n        filters,\r\n    } = assignedPatients;\r\n\r\n    const { providers } = filtersData.providersData;\r\n\r\n    useEffect(() => {\r\n        if (transferData.patientId) {\r\n            localStorage.setItem(\r\n                'currentTransferPatientId',\r\n                transferData.patientId,\r\n            );\r\n            setReason('');\r\n            setNewProviderId(null);\r\n            setErrors({\r\n                reason: '',\r\n                newProviderId: '',\r\n            });\r\n            setIsLoadingUnassign(false);\r\n        }\r\n    }, [transferData.patientId]);\r\n\r\n    const patientData = tableData[tableData.findIndex(item => item.patient_id === transferData.patientId)];\r\n\r\n    if (! patientData) {\r\n        return null;\r\n    }\r\n\r\n    const newProviderName = newProviderId\r\n        ? providers.filter(item => item.id === newProviderId)[0]?.provider_name\r\n        : '';\r\n\r\n    const oldProvider = filters.provider;\r\n    const supervisor = patientData.patient_has_providers.filter(item => item.supervisee_id === oldProvider.id)[0];\r\n    const otherProviders = patientData.patient_has_providers\r\n        .filter(item => item.providers_id !== oldProvider.id && ! item.chart_read_only);\r\n    const hasDraftsAndProgressNotes = patientData.drafts_count && patientData.missing_notes_count;\r\n    const canUnassignProvider = userData.isOnlyAdmin || ! hasDraftsAndProgressNotes;\r\n    const validate = () => {\r\n        let hasError = false;\r\n\r\n        const newErrors = {...errors};\r\n\r\n        if (! reason) {\r\n            newErrors.reason = 'Reason of unassignment is required';\r\n            hasError = true;\r\n        }\r\n        if (! newProviderId) {\r\n            newErrors.newProviderId = 'New provider is required';\r\n            hasError = true;\r\n        }\r\n\r\n        setErrors(newErrors);\r\n\r\n        return ! hasError;\r\n    }\r\n\r\n    const handleClose = () => {\r\n        dispatch(setAssignedPatientsTransferDataPatientIdAC({patientId: null}));\r\n    };\r\n\r\n    const handleUnassign = () => {\r\n        if (! canUnassignProvider || ! validate()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoadingUnassign(true);\r\n        dispatch(addAssignedPatientsTransferDataLoadingPatientsAC({patientId: patientData.patient_id}));\r\n\r\n        transferPatient({\r\n            patientId: patientData.patient_id,\r\n            oldProviderId: oldProvider.id,\r\n            newProviderId,\r\n            reason,\r\n        })\r\n            .then(() => {\r\n                dispatch(deletePatientFromAssignedPatientsTableDataAC({patientId: patientData.patient_id}));\r\n                if (localStorage.getItem('currentTransferPatientId') === patientData.patient_id.toString()) {\r\n                    handleClose();\r\n                }\r\n            })\r\n            .finally(() => {\r\n                setIsLoadingUnassign(false);\r\n                dispatch(removePatientIdFromAssignedPatientsTransferDataLoadingPatientsAC({patientId: patientData.patient_id}));\r\n            });\r\n    };\r\n\r\n    const newProviderIdSelectStyles = {\r\n        ...selectStyles,\r\n        control: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.control(baseStyles, state),\r\n            width: \"100%\",\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={oldProvider.id}\r\n            onHide={handleClose}\r\n            className={'custom-modal'}\r\n            centered\r\n        >\r\n            <ModalHeader closeButton>\r\n                <div>Transfer patient</div>\r\n            </ModalHeader>\r\n            <ModalBody style={{gap: '24px', paddingBottom: '20px'}}>\r\n                {hasDraftsAndProgressNotes\r\n                    ? <UnassignPatientAlert patientData={patientData}/>\r\n                    : null\r\n                }\r\n\r\n                <UnassignPatientInfo\r\n                    patientData={patientData}\r\n                    provider={oldProvider}\r\n                    supervisor={supervisor}\r\n                    otherProviders={otherProviders}\r\n                />\r\n\r\n                <div>\r\n                    <div\r\n                        className={classNames('form-group', styles.formGroup, errors.newProviderId ? styles.formGroupHasError : '')}\r\n                    >\r\n                        <label htmlFor=\"assignProviderId\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                            Provider <span className={\"text-danger\"}>*</span>\r\n                        </label>\r\n                        <Select\r\n                            value={newProviderId && {value: newProviderId, label:newProviderName}}\r\n                            onChange={(selectedOption) => {setNewProviderId(selectedOption.value)}}\r\n                            options={providers.map((provider) => ({\r\n                                value: provider.id,\r\n                                label: provider.provider_name,\r\n                            }))}\r\n                            className={errors.newProviderId && \"has-error\"}\r\n                            isSearchable={true}\r\n                            styles={newProviderIdSelectStyles}\r\n                            id={'assignProviderId'}\r\n                        />\r\n                        {errors.newProviderId &&\r\n                            <div className={styles.formErrors}>\r\n                                {errors.newProviderId}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n\r\n                    <div\r\n                        className={classNames('form-group mt-2', styles.formGroup, errors.reason ? styles.formGroupHasError : '')}\r\n                    >\r\n                        <label htmlFor=\"unassignReason\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                            Reason <span className={\"text-danger\"}>*</span>\r\n                        </label>\r\n                        <input\r\n                            id={'unassignReason'}\r\n                            className={classNames('form-control', styles.formInput)}\r\n                            value={reason}\r\n                            onChange={(e) => setReason(e.target.value)}\r\n                        />\r\n                        {errors.reason &&\r\n                            <div className={styles.formErrors}>\r\n                                {errors.reason}\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <UnassignPatientHelpText patientData={patientData} supervisor={supervisor}/>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <div className=\"d-flex gap-3 justify-content-end\">\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleUnassign}\r\n                        className=\"btn btn-large btn-primary d-flex align-items-center justify-content-center gap-1\"\r\n                        style={{width: '125px'}}\r\n                        disabled={isLoadingUnassign || ! canUnassignProvider}\r\n                    >\r\n                        {isLoadingUnassign ?\r\n                            <CircleLoader\r\n                                color={\"#fff\"}\r\n                                size={\"small\"}\r\n                            /> :\r\n                            \"Transfer\"\r\n                        }\r\n                    </button>\r\n                </div>\r\n            </ModalFooter>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default TransferPatientModal;\r\n","import React, {useEffect, useState} from 'react'\r\nimport Table from '../../../../components/Table';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styles from '../../index.module.scss'\r\nimport Select from \"react-select\";\r\nimport {\r\n    setAssignedPatientsIsLoadedAC,\r\n    setAssignedPatientsIsLoadingAC,\r\n    setAssignedPatientsTableDataAC,\r\n    setAssignedPatientsCurrentPageAC,\r\n    setAssignedPatientsFiltersSearchAC,\r\n    setAssignedPatientsFiltersStatusesAC,\r\n    setAssignedPatientsFiltersProviderAC,\r\n    setAssignedPatientsFilteredTableDataAC,\r\n    setAssignedPatientsFiltersInsuranceAC, updateAssignedPatientsFilteredTableDataAC,\r\n} from \"../../../../store/reducers/patientTransfersDashboard.reducer\";\r\nimport {getPatientsByProviderId} from \"../../../../api/pages/patient-transfer-dashboard-page\";\r\nimport UnassignPatientModal from \"./components/UnassignPatientModal\";\r\nimport classNames from \"classnames\";\r\nimport Pagination from \"../../../../components/Pagination\";\r\nimport {selectStyles} from \"../../selectStyles\";\r\nimport TransferPatientModal from \"./components/TransferPatientModal\";\r\nimport CrossSvg from \"../../../../components/CrossSvg\";\r\n\r\nconst PAGE_SIZE = 25;\r\n\r\nconst AssignedPatients = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const {\r\n        filters,\r\n        tableColumns,\r\n        tableData,\r\n        filteredTableData,\r\n        currentPage,\r\n        isLoaded,\r\n        isLoading,\r\n    } = useSelector(state => state.patientTransfersDashboard.assignedPatients);\r\n\r\n    const {\r\n        statusesData,\r\n        providersData,\r\n        insurancesData,\r\n    } = useSelector(state => state.patientTransfersDashboard.filtersData);\r\n\r\n    const resetData = () => {\r\n        dispatch(setAssignedPatientsCurrentPageAC({value: 1}));\r\n        dispatch(setAssignedPatientsFiltersSearchAC({value: ''}))\r\n        dispatch(setAssignedPatientsFiltersStatusesAC({options: []}))\r\n        dispatch(setAssignedPatientsFiltersInsuranceAC({id: null, insurance: ''}))\r\n        dispatch(setAssignedPatientsTableDataAC({data: []}));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (filters.provider.id) {\r\n            resetData();\r\n\r\n            dispatch(setAssignedPatientsIsLoadingAC({value: true}));\r\n\r\n            getPatientsByProviderId(filters.provider.id)\r\n                .then((response) => {\r\n                    dispatch(setAssignedPatientsTableDataAC({\r\n                        data: response.data.data,\r\n                        meta: response.data.meta,\r\n                    }));\r\n                })\r\n                .finally(() => {\r\n                    dispatch(setAssignedPatientsIsLoadingAC({value: false}));\r\n\r\n                    if (!isLoaded) {\r\n                        dispatch(setAssignedPatientsIsLoadedAC({value: true}));\r\n                    }\r\n                });\r\n        }\r\n    }, [filters.provider.id])\r\n\r\n    useEffect(() => {\r\n        dispatch(updateAssignedPatientsFilteredTableDataAC());\r\n    }, [tableData, filters.search, filters.statuses, filters.insurance.id])\r\n\r\n    const paginationParams = {\r\n        last_page: Math.ceil(filteredTableData.length / PAGE_SIZE) || 1,\r\n    };\r\n\r\n    const statusesSelectStyles = {\r\n        ...selectStyles,\r\n        control: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.control(baseStyles, state),\r\n            width: '300px',\r\n        }),\r\n    };\r\n\r\n    const insuranceSelectStyles = {\r\n        ...selectStyles,\r\n        valueContainer: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.valueContainer(baseStyles, state),\r\n            paddingRight: '25px',\r\n        }),\r\n    };\r\n\r\n    const handleClearInsuranceInput = () => {\r\n        dispatch(setAssignedPatientsFiltersInsuranceAC({id: null, insurance: ''}));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex flex-column gap-2\">\r\n                <div className={'d-flex flex-wrap gap-2 px-1'}>\r\n                    <div className={styles.selectBlock}>\r\n                        <div className=\"fw-bold\">Therapist Name</div>\r\n                        <Select\r\n                            value={filters.provider.id && {value: filters.provider.id, label: filters.provider.provider_name}}\r\n                            onChange={(selectedOption) => {dispatch(setAssignedPatientsFiltersProviderAC({id: selectedOption.value, provider_name: selectedOption.label}))}                    }\r\n                            options={providersData.providers.map((provider) => ({\r\n                                value: provider.id,\r\n                                label: provider.provider_name,\r\n                            }))}\r\n                            isLoading={providersData.isLoading}\r\n                            isSearchable={true}\r\n                            styles={selectStyles}\r\n                        />\r\n                    </div>\r\n                    <div className={classNames(styles.selectBlock, !filters.provider.id && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', !filters.provider.id && 'text-muted')}>Patient Name</div>\r\n                        <input\r\n                            value={filters.search}\r\n                            disabled={! filters.provider.id}\r\n                            onChange={(e) => dispatch(setAssignedPatientsFiltersSearchAC({value: e.target.value}))}\r\n                            className={classNames('form-control', styles.searchInput)}\r\n                            placeholder=\"Search...\"\r\n                        />\r\n                    </div>\r\n                    <div className={classNames(styles.selectBlock, !filters.provider.id && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', !filters.provider.id && 'text-muted')}>Patient Status</div>\r\n                        <Select\r\n                            value={filters.statuses.length && filters.statuses.map(status => ({\r\n                                value: status.id,\r\n                                label: status.status,\r\n                            }))}\r\n                            options={statusesData.statuses.map((status) => ({\r\n                                value: status.id,\r\n                                label: status.status,\r\n                            }))}\r\n                            onChange={(options) => dispatch(setAssignedPatientsFiltersStatusesAC({options}))}\r\n                            isLoading={statusesData.isLoading}\r\n                            isDisabled={! filters.provider.id}\r\n                            isMulti={true}\r\n                            isSearchable={false}\r\n                            closeMenuOnSelect={false}\r\n                            styles={statusesSelectStyles}\r\n                        />\r\n                    </div>\r\n                    <div className={classNames(styles.selectBlock, !filters.provider.id && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', !filters.provider.id && 'text-muted')}>Patient Insurance</div>\r\n                        <div className={'position-relative'}>\r\n                            <Select\r\n                                value={filters.insurance?.id && {value: filters.insurance.id, label: filters.insurance.insurance}}\r\n                                options={insurancesData.insurances.map((insurance) => ({\r\n                                    value: insurance.id,\r\n                                    label: insurance.insurance,\r\n                                }))}\r\n                                onChange={(selectedOption) => {dispatch(setAssignedPatientsFiltersInsuranceAC({id: selectedOption.value, insurance: selectedOption.label}))}                    }\r\n                                isLoading={insurancesData.isLoading}\r\n                                isDisabled={!filters.provider.id}\r\n                                isSearchable={true}\r\n                                styles={insuranceSelectStyles}\r\n                            />\r\n                            {filters.insurance.id !== null && (\r\n                                <CrossSvg\r\n                                    handleClick={\r\n                                        handleClearInsuranceInput\r\n                                    }\r\n                                    className={classNames(\r\n                                        styles.cross,\r\n                                        styles.selectCross,\r\n                                    )}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.dashboardTableWrapper}>\r\n                    <Table\r\n                        columns={tableColumns}\r\n                        data={filteredTableData}\r\n                        currentPage={currentPage}\r\n                        pageSize={PAGE_SIZE}\r\n                        dataIsLoaded={isLoaded && !isLoading}\r\n                        showLabelNotLoaded={!filters.provider.id}\r\n                        labelNotLoaded={'Choose provider...'}\r\n                    />\r\n                </div>\r\n\r\n                <div className={'d-flex justify-content-center mb-2'}>\r\n                    <Pagination\r\n                        params={paginationParams}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={(value) => dispatch(setAssignedPatientsCurrentPageAC({value}))}\r\n                        loading={!isLoaded || isLoading}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <UnassignPatientModal />\r\n            <TransferPatientModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssignedPatients;","import React, {useEffect, useState} from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CircleLoader from \"../../../../../../components/CircleLoader\";\r\nimport {archivePatientById} from \"../../../../../../api/pages/patient-transfer-dashboard-page\";\r\nimport {\r\n    addPatientIdToUnassignedPatientsArchiveDataLoadingPatients,\r\n    removePatientIdFromUnassignedPatientsArchiveDataLoadingPatients,\r\n    setUnassignedPatientsArchiveDataPatientId,\r\n    deletePatientFromUnassignedPatientTableData,\r\n} from \"../../../../../../store/reducers/patientTransfersDashboard.reducer\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"../../../../index.module.scss\";\r\n\r\nconst ArchivePatientModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isLoadingArchive, setIsLoadingArchive] = useState(false);\r\n    const [comment, setComment] = useState('');\r\n    const [commentError, setCommentError] = useState('');\r\n\r\n    const { archiveData, tableData } = useSelector(\r\n        state => state.patientTransfersDashboard.unassignedPatients,\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (archiveData.patientId) {\r\n            localStorage.setItem(\r\n                'currentArchivePatientId',\r\n                archiveData.patientId,\r\n            );\r\n            setComment('');\r\n            setCommentError('');\r\n            setIsLoadingArchive(false);\r\n        }\r\n    }, [archiveData.patientId]);\r\n\r\n    const patientData = tableData[tableData.findIndex(item => item.patient_id === archiveData.patientId)];\r\n\r\n    if (! patientData) {\r\n        return null;\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setIsLoadingArchive(false);\r\n        dispatch(setUnassignedPatientsArchiveDataPatientId({patientId: null}));\r\n    };\r\n\r\n    const handleArchive = () => {\r\n        if (! comment) {\r\n            setCommentError('The comment is required');\r\n\r\n            return;\r\n        } else {\r\n            setCommentError('');\r\n        }\r\n\r\n        setIsLoadingArchive(true);\r\n        dispatch(addPatientIdToUnassignedPatientsArchiveDataLoadingPatients({patientId: archiveData.patientId}));\r\n\r\n        archivePatientById({\r\n            patientId: archiveData.patientId,\r\n            comment: comment,\r\n        })\r\n            .then(() => {\r\n                dispatch(deletePatientFromUnassignedPatientTableData({\r\n                    patientId: patientData.patient_id,\r\n                }));\r\n                setComment('');\r\n                if (localStorage.getItem('currentArchivePatientId') === patientData.patient_id) {\r\n                    handleClose();\r\n                }\r\n            },\r\n        ).finally(() => {\r\n            setIsLoadingArchive(false);\r\n            dispatch(removePatientIdFromUnassignedPatientsArchiveDataLoadingPatients({patientId: archiveData.patientId}));\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={archiveData.patientId}\r\n            onHide={handleClose}\r\n            className=\"custom-modal\"\r\n            centered>\r\n            <ModalHeader closeButton>\r\n                <div className=\"text-danger\">Archive patient: {patientData.patient_name}</div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"fs-16\">\r\n                    Are you sure you want to archive this patient?\r\n                </div>\r\n\r\n                <div\r\n                    className={classNames('form-group', styles.formGroup, commentError ? styles.formGroupHasError : '')}>\r\n                    <label htmlFor=\"unassignReason\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                        Comment <span className={\"text-danger\"}>*</span>\r\n                    </label>\r\n                    <input\r\n                        id={'unassignReason'}\r\n                        className={classNames('form-control', styles.formInput)}\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n                    {commentError &&\r\n                        <div className={styles.formErrors}>\r\n                            {commentError}\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"d-flex gap-3 justify-content-end\">\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleArchive}\r\n                        className=\"btn btn-large btn-danger d-flex align-items-center justify-content-center gap-1\"\r\n                        style={{width: '125px'}}\r\n                        disabled={isLoadingArchive}\r\n                    >\r\n                        {isLoadingArchive ?\r\n                            <CircleLoader\r\n                                color={\"#fff\"}\r\n                                size={\"small\"}\r\n                            /> :\r\n                            \"Archive\"\r\n                        }\r\n                    </button>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default ArchivePatientModal;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { Modal, ModalBody, ModalHeader } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CircleLoader from \"../../../../../../components/CircleLoader\";\r\nimport {\r\n    assignProviderToPatient,\r\n} from \"../../../../../../api/pages/patient-transfer-dashboard-page\";\r\nimport {\r\n    addPatientIdToUnassignedPatientsAssignDataLoadingPatients,\r\n    removePatientIdFromUnassignedPatientsAssignDataLoadingPatients,\r\n    setUnassignedPatientsAssignDataPatientId,\r\n    deletePatientFromUnassignedPatientTableData,\r\n} from \"../../../../../../store/reducers/patientTransfersDashboard.reducer\";\r\nimport Select from \"react-select\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./../../../../index.module.scss\";\r\nimport {selectStyles} from \"../../../../selectStyles\";\r\n\r\nconst AssignPatientModal = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [isLoadingAssign, setIsLoadingAssign] = useState(false);\r\n    const [providerId, setProviderId] = useState(null)\r\n    const [providerIdError, setProviderIdError] = useState('');\r\n\r\n    const { unassignedPatients, filtersData } = useSelector(\r\n        state => state.patientTransfersDashboard,\r\n    );\r\n\r\n    const { assignData, tableData } = unassignedPatients;\r\n\r\n    const { providers } = filtersData.providersData;\r\n\r\n    useEffect(() => {\r\n        if (assignData.patientId) {\r\n            localStorage.setItem(\r\n                'currentAssignPatientId',\r\n                assignData.patientId,\r\n            );\r\n            setProviderId(null);\r\n            setProviderIdError('');\r\n            setIsLoadingAssign(false);\r\n        }\r\n    }, [assignData.patientId]);\r\n\r\n    const patientData = tableData[tableData.findIndex(item => item.patient_id === assignData.patientId)];\r\n\r\n    if (! patientData) {\r\n        return null;\r\n    }\r\n\r\n    const providerName = providerId\r\n        ? providers.filter(item => item.id === providerId)[0]?.provider_name\r\n        : '';\r\n\r\n    const validate = () => {\r\n        if (! providerId) {\r\n            setProviderIdError('The provider is required');\r\n\r\n            return false;\r\n\r\n        } else {\r\n            setProviderIdError('');\r\n\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        dispatch(setUnassignedPatientsAssignDataPatientId({patientId: null}));\r\n    };\r\n\r\n    const handleAssign = () => {\r\n        if (! validate()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoadingAssign(true);\r\n        dispatch(addPatientIdToUnassignedPatientsAssignDataLoadingPatients({patientId: assignData.patientId}));\r\n\r\n        assignProviderToPatient({patientId: assignData.patientId, providerId})\r\n            .then(() => {\r\n                dispatch(deletePatientFromUnassignedPatientTableData({\r\n                    patientId: assignData.patientId,\r\n                }))\r\n\r\n                if (localStorage.getItem('currentAssignPatientId') === patientData.patient_id) {\r\n                    handleClose();\r\n                }\r\n            },\r\n        ).finally(() => {\r\n            setIsLoadingAssign(false);\r\n            dispatch(removePatientIdFromUnassignedPatientsAssignDataLoadingPatients({patientId: assignData.patientId}));\r\n        });\r\n    };\r\n\r\n    const providerIdSelectStyles = {\r\n        ...selectStyles,\r\n        control: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.control(baseStyles, state),\r\n            width: \"100%\",\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            show={assignData.patientId}\r\n            onHide={handleClose}\r\n            className=\"custom-modal\"\r\n            centered>\r\n            <ModalHeader closeButton>\r\n                <div>Assign patient: {patientData.patient_name}</div>\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div className=\"fs-16\">\r\n                    Patient: <b>{patientData.patient_name}</b>\r\n                </div>\r\n\r\n                <div\r\n                    className={classNames('form-group', styles.formGroup, providerIdError ? styles.formGroupHasError : '')}>\r\n                    <label htmlFor=\"assignProviderId\" className={classNames('control-label mb-1', styles.formLabel)}>\r\n                        Provider <span className={\"text-danger\"}>*</span>\r\n                    </label>\r\n                    <Select\r\n                        value={providerId && {value: providerId, label:providerName}}\r\n                        onChange={(selectedOption) => {setProviderId(selectedOption.value)}}\r\n                        options={providers.map((provider) => ({\r\n                            value: provider.id,\r\n                            label: provider.provider_name,\r\n                        }))}\r\n                        className={providerIdError && \"has-error\"}\r\n                        isSearchable={true}\r\n                        styles={providerIdSelectStyles}\r\n                        id={'assignProviderId'}\r\n                    />\r\n                    {providerIdError &&\r\n                        <div className={styles.formErrors}>\r\n                            {providerIdError}\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"d-flex gap-3 justify-content-end\">\r\n                    <button\r\n                        className=\"btn btn-large btn-outline-primary\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleAssign}\r\n                        className=\"btn btn-large btn-primary d-flex align-items-center justify-content-center gap-1\"\r\n                        style={{width: '125px'}}\r\n                        disabled={isLoadingAssign}\r\n                    >\r\n                        {isLoadingAssign ?\r\n                            <CircleLoader\r\n                                color={\"#fff\"}\r\n                                size={\"small\"}\r\n                            /> :\r\n                            \"Assign\"\r\n                        }\r\n                    </button>\r\n                </div>\r\n            </ModalBody>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default AssignPatientModal;\r\n","import React, {useEffect} from 'react'\r\nimport Table from '../../../../components/Table';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport styles from '../../index.module.scss'\r\nimport ArchivePatientModal from \"./сomponents/ArchivePatientModal\";\r\nimport Select from \"react-select\";\r\nimport {\r\n    setUnassignedPatientsCurrentPageAC,\r\n    setUnassignedPatientsFilteredTableDataAC,\r\n    setUnassignedPatientsFiltersDateOfPatientCreationAC,\r\n    setUnassignedPatientsFiltersDateOfUnassignAC,\r\n    setUnassignedPatientsFiltersOldProviderAC,\r\n    setUnassignedPatientsFiltersSearchAC,\r\n    setUnassignedPatientsFiltersStatusesAC,\r\n    setUnassignedPatientsFiltersInsuranceAC,\r\n    setUnassignedPatientsIsLoadingAC,\r\n    setUnassignedPatientsTableDataAC,\r\n    setUnassignedPatientsFiltersShowArchivedPatientsAC,\r\n    updateUnassignedPatientsFilteredTableDataAC,\r\n} from \"../../../../store/reducers/patientTransfersDashboard.reducer\";\r\nimport { selectStyles } from \"../../selectStyles\";\r\nimport classNames from \"classnames\";\r\nimport Pagination from \"../../../../components/Pagination\";\r\nimport AssignPatientModal from \"./сomponents/AssignPatientModal\";\r\nimport CrossSvg from \"../../../../components/CrossSvg\";\r\nimport {getPatientTransfers} from \"../../../../api/pages/patient-transfer-dashboard-page\";\r\nimport moment from \"../../../../utilities/moment-config\";\r\n\r\nconst PAGE_SIZE = 25;\r\n\r\nconst UnassignedPatients = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { filtersData, unassignedPatients } = useSelector(state => state.patientTransfersDashboard);\r\n\r\n    const {\r\n        isLoading,\r\n        tableData,\r\n        filteredTableData,\r\n        tableColumns,\r\n        currentPage,\r\n        filters,\r\n    } = unassignedPatients;\r\n\r\n    const {\r\n        providersData,\r\n        statusesData,\r\n        insurancesData,\r\n        dateOfUnassignmentData,\r\n        dateOfPatientCreationData,\r\n    } = filtersData;\r\n\r\n    const paginationParams = {\r\n        last_page: Math.ceil(filteredTableData.length / PAGE_SIZE) || 1,\r\n    };\r\n\r\n    const handleClearOldProviderInput = () => {\r\n        dispatch(setUnassignedPatientsFiltersOldProviderAC({id: null, provider_name: ''}));\r\n    };\r\n\r\n    const handleClearInsuranceInput = () => {\r\n        dispatch(setUnassignedPatientsFiltersInsuranceAC({id: null, insurance: ''}));\r\n    };\r\n\r\n    const defaultSelectStyles = {\r\n        ...selectStyles,\r\n        valueContainer: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.valueContainer(baseStyles, state),\r\n            paddingRight: '25px',\r\n        }),\r\n    };\r\n    const multiSelectStyles = {\r\n        ...selectStyles,\r\n        control: (baseStyles, state) => ({\r\n            ...baseStyles,\r\n            ...selectStyles.control(baseStyles, state),\r\n            width: '300px',\r\n        }),\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(setUnassignedPatientsIsLoadingAC({value: true}));\r\n\r\n        getPatientTransfers()\r\n            .then((response) => {\r\n                dispatch(setUnassignedPatientsTableDataAC({\r\n                    data: response.data.data,\r\n                }));\r\n            })\r\n            .finally(() => {\r\n                dispatch(setUnassignedPatientsIsLoadingAC({value: false}));\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(updateUnassignedPatientsFilteredTableDataAC());\r\n    }, [tableData, filters.old_provider.id, filters.search, filters.statuses, filters.insurance.id, filters.date_of_unassignment.value, filters.date_of_patient_creation, filters.show_archived_patients])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-flex flex-column gap-2\">\r\n                <div className={'d-flex flex-wrap align-items-stretch gap-2 px-1'}>\r\n                    <div className={classNames(styles.selectBlock, isLoading && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', isLoading && 'text-muted')}>Old Therapist Name</div>\r\n                        <div className={'position-relative'}>\r\n                            <Select\r\n                                value={filters.old_provider?.id && {value: filters.old_provider.id, label: filters.old_provider.provider_name}}\r\n                                onChange={(selectedOption) => {dispatch(setUnassignedPatientsFiltersOldProviderAC({id: selectedOption.value, provider_name: selectedOption.label}))}                    }\r\n                                options={providersData.providers.map((provider) => ({\r\n                                    value: provider.id,\r\n                                    label: provider.provider_name,\r\n                                }))}\r\n                                isLoading={providersData.isLoading}\r\n                                isDisabled={isLoading}\r\n                                isSearchable={true}\r\n                                styles={defaultSelectStyles}\r\n                            />\r\n                            {filters.old_provider?.id !== null && (\r\n                                <CrossSvg\r\n                                    handleClick={\r\n                                        handleClearOldProviderInput\r\n                                    }\r\n                                    className={classNames(\r\n                                        styles.cross,\r\n                                        styles.selectCross,\r\n                                    )}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classNames(styles.selectBlock, isLoading && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', isLoading && 'text-muted')}>Patient Name</div>\r\n                        <input\r\n                            value={filters.search}\r\n                            disabled={isLoading}\r\n                            onChange={(e) => dispatch(setUnassignedPatientsFiltersSearchAC({value: e.target.value}))}\r\n                            className={classNames('form-control', styles.searchInput)}\r\n                            placeholder=\"Search...\"\r\n                        />\r\n                    </div>\r\n                    <div className={classNames(styles.selectBlock, isLoading && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', isLoading && 'text-muted')}>Patient Status</div>\r\n                        <Select\r\n                            value={filters.statuses.length && filters.statuses.map(status => ({\r\n                                value: status.id,\r\n                                label: status.status,\r\n                            }))}\r\n                            options={statusesData.statuses.map((status) => ({\r\n                                value: status.id,\r\n                                label: status.status,\r\n                            }))}\r\n                            onChange={(options) => dispatch(setUnassignedPatientsFiltersStatusesAC({options}))}\r\n                            isLoading={statusesData.isLoading}\r\n                            isDisabled={isLoading}\r\n                            isMulti={true}\r\n                            isSearchable={false}\r\n                            closeMenuOnSelect={false}\r\n                            styles={multiSelectStyles}\r\n                        />\r\n                    </div>\r\n                    <div className={classNames(styles.selectBlock, isLoading && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', isLoading)}>Patient Insurance</div>\r\n                        <div className={'position-relative'}>\r\n                            <Select\r\n                                value={filters.insurance?.id && {value: filters.insurance.id, label: filters.insurance.insurance}}\r\n                                options={insurancesData.insurances.map((insurance) => ({\r\n                                    value: insurance.id,\r\n                                    label: insurance.insurance,\r\n                                }))}\r\n                                onChange={(selectedOption) => {dispatch(setUnassignedPatientsFiltersInsuranceAC({id: selectedOption.value, insurance: selectedOption.label}))}                    }\r\n                                isLoading={insurancesData.isLoading}\r\n                                isDisabled={isLoading}\r\n                                isSearchable={true}\r\n                                styles={defaultSelectStyles}\r\n                            />\r\n                            {filters.insurance.id !== null && (\r\n                                <CrossSvg\r\n                                    handleClick={\r\n                                        handleClearInsuranceInput\r\n                                    }\r\n                                    className={classNames(\r\n                                        styles.cross,\r\n                                        styles.selectCross,\r\n                                    )}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <div className={classNames(styles.selectBlock, isLoading && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', isLoading && 'text-muted')}>Date of Unassignment</div>\r\n                        <Select\r\n                            value={filters.date_of_unassignment}\r\n                            options={dateOfUnassignmentData.intervals}\r\n                            onChange={(selectedOption) => dispatch(setUnassignedPatientsFiltersDateOfUnassignAC(selectedOption))}\r\n                            isDisabled={isLoading}\r\n                            isSearchable={false}\r\n                            styles={selectStyles}\r\n                        />\r\n                    </div>\r\n                    <div className={classNames(styles.selectBlock, isLoading && styles.disabled)}>\r\n                        <div className={classNames('fw-bold', isLoading && 'text-muted')}>Date of Pt. Creation</div>\r\n                        <Select\r\n                            value={filters.date_of_patient_creation}\r\n                            options={dateOfPatientCreationData.intervals}\r\n                            onChange={(selectedOption) => dispatch(setUnassignedPatientsFiltersDateOfPatientCreationAC(selectedOption))}\r\n                            isDisabled={isLoading}\r\n                            isSearchable={false}\r\n                            styles={selectStyles}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={'d-flex flex-wrap align-items-stretch gap-2 px-1'}>\r\n                    <div className={'d-flex align-items-center'} style={{minHeight: '38px', marginTop: 'auto'}}>\r\n                        <div className={classNames('form-check', styles.formCheck, isLoading && styles.disabled)}>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"show-archived-patients\"\r\n                                className={classNames('form-check-input', styles.formCheckInput)}\r\n                                disabled={isLoading}\r\n                                checked={filters.show_archived_patients}\r\n                                onChange={(event) => dispatch(setUnassignedPatientsFiltersShowArchivedPatientsAC({value: event.target.checked}))}\r\n                            />\r\n                            <label\r\n                                htmlFor=\"show-archived-patients\"\r\n                                className={classNames(styles.formCheckLabel, 'fw-bold', isLoading && 'text-muted')}\r\n                            >\r\n                                Show archived patients\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={styles.dashboardTableWrapper}>\r\n                    <Table\r\n                        columns={tableColumns}\r\n                        data={filteredTableData}\r\n                        currentPage={currentPage}\r\n                        pageSize={PAGE_SIZE}\r\n                        dataIsLoaded={! isLoading}\r\n                    />\r\n                </div>\r\n\r\n                <div className={'d-flex justify-content-center mb-2'}>\r\n                    <Pagination\r\n                        params={paginationParams}\r\n                        currentPage={currentPage}\r\n                        setCurrentPage={(value) => dispatch(setUnassignedPatientsCurrentPageAC({value}))}\r\n                        loading={isLoading}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <AssignPatientModal />\r\n            <ArchivePatientModal />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UnassignedPatients","import React, {useEffect} from \"react\";\r\nimport AppMainLayout from \"../../layouts/AppMainLayout\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport AssignedPatients from \"./components/AssignedPatients\";\r\nimport UnassignedPatients from \"./components/UnassignedPatients\";\r\nimport styles from \"./index.module.scss\";\r\nimport TabMate from \"../../components/TabMate\";\r\nimport {\r\n    getPatientStatuses,\r\n    getAllProviders,\r\n    getAllInsurances,\r\n} from \"../../api/pages/patient-transfer-dashboard-page\";\r\nimport {\r\n    setFiltersDataStatusesDataIsLoadingAC,\r\n    setFiltersDataStatusesDataStatusesAC,\r\n    setFiltersDataProvidersDataIsLoadingAC,\r\n    setFiltersDataProvidersDataProvidersAC,\r\n    setFiltersDataInsurancesDataInsurancesAC,\r\n    setFiltersDataInsurancesDataIsLoadingAC,\r\n} from \"../../store/reducers/patientTransfersDashboard.reducer\";\r\nimport CircleLoader from \"../../components/CircleLoader\";\r\n\r\nconst PatientTransfersDashboard = () => {\r\n    const dispatch = useDispatch();\r\n    const { userData } = useSelector(state => state.app);\r\n    const { assignedPatients, unassignedPatients, filtersData } = useSelector(state => state.patientTransfersDashboard);\r\n\r\n    const tabs = [\r\n        {\r\n            eventKey: 'assigned_patients',\r\n            title: 'Assigned Patients',\r\n            numberOfRecords: assignedPatients.filteredTableData.length,\r\n            disabled: false,\r\n            component: <AssignedPatients />\r\n        },\r\n        {\r\n            eventKey: 'unassigned_patients',\r\n            title: 'Unassigned Patients',\r\n            numberOfRecords: unassignedPatients.filteredTableData.length,\r\n            disabled: false,\r\n            component: <UnassignedPatients />\r\n        },\r\n    ];\r\n\r\n    const tabStyles = {\r\n        minHeight: '518px',\r\n        overflow: 'hidden',\r\n        borderRadius: '4px',\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (! filtersData.providersData.providers.length && ! filtersData.providersData.isLoading) {\r\n            dispatch(setFiltersDataProvidersDataIsLoadingAC({value: true}));\r\n\r\n            getAllProviders()\r\n                .then((response) => {\r\n                    dispatch(setFiltersDataProvidersDataProvidersAC({\r\n                        data: response.data,\r\n                    }));\r\n                })\r\n                .finally(() => {\r\n                    dispatch(setFiltersDataProvidersDataIsLoadingAC({value: false}));\r\n                });\r\n        }\r\n\r\n        if (! filtersData.insurancesData.insurances.length && ! filtersData.insurancesData.isLoading) {\r\n            dispatch(setFiltersDataInsurancesDataIsLoadingAC({value: true}));\r\n\r\n            getAllInsurances()\r\n                .then((response) => {\r\n                    dispatch(setFiltersDataInsurancesDataInsurancesAC({\r\n                        data: response.data,\r\n                    }));\r\n                })\r\n                .finally(() => {\r\n                    dispatch(setFiltersDataInsurancesDataIsLoadingAC({value: false}));\r\n                });\r\n        }\r\n\r\n        if (! filtersData.statusesData.statuses.length && ! filtersData.statusesData.isLoading) {\r\n            dispatch(setFiltersDataStatusesDataIsLoadingAC({value: true}));\r\n\r\n            getPatientStatuses()\r\n                .then((response) => {\r\n                    dispatch(setFiltersDataStatusesDataStatusesAC({\r\n                        data: response.data,\r\n                    }));\r\n                })\r\n                .finally(() => {\r\n                    dispatch(setFiltersDataStatusesDataIsLoadingAC({value: false}));\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AppMainLayout>\r\n            <div className={`container-fluid ${styles.secretaryDashboard}`}>\r\n                {! userData.isLoadedIsOnlyAdmin ? (\r\n                    <CircleLoader absolute={true} />\r\n                ) : (\r\n                    <div className={'dashboardCard d-flex flex-column flex-columm gap-2 p-3'}>\r\n                        <h4>Patients Management</h4>\r\n\r\n                        <TabMate\r\n                            tabs={tabs}\r\n                            defaultActiveKey={tabs[0].eventKey}\r\n                            tabStyles={tabStyles}\r\n                            className=\"mb-2\"\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </AppMainLayout>\r\n    )\r\n};\r\n\r\nexport default PatientTransfersDashboard;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Routes, useLocation } from \"react-router-dom\";\r\nimport Faxes from \"./pages/Faxes\";\r\nimport SecretaryDashboard from \"./pages/SecretaryDashboard\";\r\nimport NewPatientsDashboard from \"./pages/NewPatientsDashboard\";\r\nimport AreYouStillHereModal from \"./components/Modals/AreYouStillHereModal\";\r\nimport { setQueryParamsAC, setUserAC, setUserDataIsOnlyAdminAC, setUserDataIsLoadedIsOnlyAdminAC } from \"./store/reducers/app.reducer\";\r\nimport SupervisorDashboard from \"./pages/SupervisorDashboard\";\r\nimport ReauthorizationRequestsDashboard from \"./pages/ReauthorizationRequestsDashboard\";\r\nimport { getUserInfo, getUserOnlyAdmin } from \"./api/common/user\";\r\nimport DoctorsRequestsDashboard from \"./pages/DoctorsRequestsDashboard\";\r\nimport PatientTransfersDashboard from \"./pages/PatientTransfersDashboard\";\r\n\r\nconst App = () => {\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, userData } = useSelector((state) => state.app);\r\n\r\n    const updateQueryParams = () => {\r\n        const searchParams = new URLSearchParams(location.search);\r\n\r\n        const queryParams = {};\r\n        searchParams.forEach((value, key) => {\r\n            queryParams[key] = value;\r\n        });\r\n        dispatch(setQueryParamsAC({ data: queryParams }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        getUserInfo().then((res) => dispatch(setUserAC({ user: res.data })));\r\n\r\n        if (!userData.isLoadedIsOnlyAdmin) {\r\n            getUserOnlyAdmin()\r\n                .then((response) => {\r\n                    dispatch(setUserDataIsOnlyAdminAC({value: !!response.data}));\r\n                })\r\n                .finally(() => {\r\n                    dispatch(setUserDataIsLoadedIsOnlyAdminAC({ value: true }));\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        updateQueryParams();\r\n    }, [location.search]);\r\n\r\n    if (!user) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Routes>\r\n                <Route path=\"/faxes\" element={<Faxes />} />\r\n                <Route\r\n                    path=\"/secretary-dashboard\"\r\n                    element={<SecretaryDashboard />}\r\n                />\r\n                <Route\r\n                    path=\"/new-patients-dashboard\"\r\n                    element={<NewPatientsDashboard />}\r\n                />\r\n                <Route\r\n                    path=\"/supervisor-dashboard\"\r\n                    element={<SupervisorDashboard />}\r\n                />\r\n                <Route\r\n                    path=\"/dashboard/reauthorization-request\"\r\n                    element={<ReauthorizationRequestsDashboard />}\r\n                />\r\n                <Route\r\n                    path=\"/dashboard/doctors-requests\"\r\n                    element={<DoctorsRequestsDashboard />}\r\n                />\r\n                <Route\r\n                    path=\"/dashboard/patients-management\"\r\n                    element={<PatientTransfersDashboard />}\r\n                 />\r\n            </Routes>\r\n            <AreYouStillHereModal />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import axios from 'axios';\r\n\r\nexport const getUserInfo = () => {\r\n    return axios.get(`/user/meta`);\r\n};\r\n\r\nexport const getUserOnlyAdmin = () => {\r\n    return axios.get(`/user/is-only-admin`);\r\n}\r\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgError(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"16px\",\n    height: \"16px\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10zm-1.5-5.009c0-.867.659-1.491 1.491-1.491.85 0 1.509.624 1.509 1.491 0 .867-.659 1.509-1.509 1.509-.832 0-1.491-.642-1.491-1.509zM11.172 6a.5.5 0 0 0-.499.522l.306 7a.5.5 0 0 0 .5.478h1.043a.5.5 0 0 0 .5-.478l.305-7a.5.5 0 0 0-.5-.522h-1.655z\",\n    fill: \"#FB0007\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgError);\nexport default __webpack_public_path__ + \"static/media/error.4e941c25.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useContext, useEffect, useState} from 'react'\r\nimport {Toast, ToastContainer} from \"react-bootstrap\"\r\n\r\nimport NotificationsContext from '../../contexts/NotificationsContext'\r\n\r\nimport {ReactComponent as Success} from \"../../assets/icons/success.svg\";\r\nimport {ReactComponent as Error} from \"../../assets/icons/error.svg\";\r\n\r\nimport style from \"./index.module.scss\"\r\nimport classNames from \"classnames\";\r\n\r\nconst Notification = ({id, type, message}) => {\r\n\r\n  const {dequeueNotification} = useContext(NotificationsContext)\r\n\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handleRemove = () => dequeueNotification(id)\r\n\r\n  useEffect(() => {\r\n    setShow(true)\r\n  }, [])\r\n\r\n  return (\r\n    //<Toast className={`${style.toast}`} show={show} delay={5000} onClose={handleRemove} >\r\n    <Toast className={classNames(style.toast, type === 'Error' ? style.toastError : '')} show={show} delay={5000} onClose={handleRemove} autohide>\r\n\r\n      <Toast.Header className={style.toastHeader}>\r\n        {type === 'Error' ?\r\n          <Error className={style.toastIcon} /> :\r\n          <Success className={style.toastIcon} />\r\n        }\r\n        {type !== 'Error' ?? <strong className={classNames(style.toastHeaderTitle, 'me-auto')}>{type}</strong>}\r\n      </Toast.Header>\r\n      <Toast.Body className={style.toastBody}>\r\n        {message}\r\n      </Toast.Body>\r\n\r\n    </Toast>\r\n  )\r\n}\r\n\r\nconst NotificationsContainer = () => {\r\n\r\n  const {notificationsQueue} = useContext(NotificationsContext)\r\n\r\n  return (\r\n    <ToastContainer position=\"bottom-end\" className=\"p-3\">\r\n      {\r\n        notificationsQueue.map(notification => (\r\n          <Notification\r\n            key={notification.id}\r\n            id={notification.id}\r\n            type={notification.type}\r\n            message={notification.message}\r\n          />\r\n        ))\r\n      }\r\n    </ToastContainer>\r\n  )\r\n}\r\n\r\nconst NotificationsProvider = ({children}) => {\r\n\r\n  const [notificationsQueue, setNotificationsQueue] = useState([])\r\n\r\n  const add = (type, message) => {\r\n    const notification = { id: Date.now(), type, message }\r\n    setNotificationsQueue(notifications => [...notifications, notification])\r\n  }\r\n  const remove = (id) => {\r\n    setNotificationsQueue(queue => [...queue.filter(notification => notification.id !== id)])\r\n  }\r\n\r\n  return (\r\n    <NotificationsContext.Provider value={{\r\n      enqueueNotification: add,\r\n      dequeueNotification: remove,\r\n      notificationsQueue,\r\n      setNotificationsQueue\r\n    }}>\r\n\r\n      {children}\r\n\r\n      { notificationsQueue &&\r\n        <NotificationsContainer />\r\n      }\r\n\r\n    </NotificationsContext.Provider>\r\n  )\r\n}\r\n\r\nexport default NotificationsProvider","import { combineReducers } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { appReducer } from \"./reducers/app.reducer\";\r\nimport { secretaryDashboardReducer } from \"./reducers/secretaryDashboard.reducer\";\r\nimport { newPatientsDashboardReducer } from \"./reducers/newPatientsDashboard.reducer\";\r\nimport { supervisorDashboardReducer } from \"./reducers/supervisorDashboard.reducer\";\r\nimport { reauthorizationRequestsDashboardReducer } from \"./reducers/reauthorizationRequestsDashboard.reducer\";\r\nimport { doctorsRequestsDashboard } from \"./reducers/doctorsRequestsDashboard.reducer\";\r\nimport { patientTransfersDashboardReducerReducer } from \"./reducers/patientTransfersDashboard.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    app: appReducer,\r\n    secretaryDashboard: secretaryDashboardReducer,\r\n    newPatientsDashboard: newPatientsDashboardReducer,\r\n    supervisorDashboard: supervisorDashboardReducer,\r\n    reauthorizationRequestsDashboard: reauthorizationRequestsDashboardReducer,\r\n    doctorsRequestsDashboard: doctorsRequestsDashboard,\r\n    patientTransfersDashboard: patientTransfersDashboardReducerReducer,\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({ serializableCheck: false }).prepend(\r\n            thunkMiddleware,\r\n        ),\r\n});\r\n\r\nwindow.store = store;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom/client\"\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport { Provider } from 'react-redux';\r\n\r\nimport \"./assets/styles/common.scss\"\r\n\r\nimport App from \"./App\"\r\nimport NotificationsProvider from \"./components/Notifications\"\r\nimport { store } from \"./store/store\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"))\r\nroot.render(\r\n  <BrowserRouter>\r\n    <NotificationsProvider>\r\n      <Provider store={store}>\r\n      <App/>\r\n      </Provider>\r\n    </NotificationsProvider>\r\n  </BrowserRouter>\r\n)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formCheck\":\"MoveToAppointmentScheduledStageModal_formCheck__3u8qw\",\"formLabel\":\"MoveToAppointmentScheduledStageModal_formLabel__2IjNj\",\"formInput\":\"MoveToAppointmentScheduledStageModal_formInput__1zaqh\",\"formListInputBtn\":\"MoveToAppointmentScheduledStageModal_formListInputBtn__2yDg-\",\"hidden\":\"MoveToAppointmentScheduledStageModal_hidden__2rgAd\",\"formTagList\":\"MoveToAppointmentScheduledStageModal_formTagList__1y1dN\",\"formTagListItem\":\"MoveToAppointmentScheduledStageModal_formTagListItem__3VXB_\",\"formTag\":\"MoveToAppointmentScheduledStageModal_formTag__1owYf\",\"formTagText\":\"MoveToAppointmentScheduledStageModal_formTagText__a-elg\",\"formTagRemove\":\"MoveToAppointmentScheduledStageModal_formTagRemove__3hO37\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"badge\":\"CustomBadge_badge__2UzKp\",\"red\":\"CustomBadge_red__35C8y\",\"yellow\":\"CustomBadge_yellow__q4g-Z\",\"green\":\"CustomBadge_green__YwU6X\",\"gray\":\"CustomBadge_gray__xCeXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cross\":\"ReauthorizationRequestsDashboard_cross__2WiRb\",\"submittedBySelect\":\"ReauthorizationRequestsDashboard_submittedBySelect__OJGt8\",\"submittedByCross\":\"ReauthorizationRequestsDashboard_submittedByCross__kys9C\",\"searchCross\":\"ReauthorizationRequestsDashboard_searchCross__2ALnT\",\"btnFetchTableData\":\"ReauthorizationRequestsDashboard_btnFetchTableData__1v7bB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"AssigneeForm_formWrapper__M7kHt\",\"title\":\"AssigneeForm_title__3gaM7\",\"patientSearch\":\"AssigneeForm_patientSearch__lt9FU\",\"patientSearchClear\":\"AssigneeForm_patientSearchClear__1GNqE\",\"input\":\"AssigneeForm_input__1noje\",\"list\":\"AssigneeForm_list__2-TnA\",\"stepTwo\":\"AssigneeForm_stepTwo__2W2yd\",\"buttonBack\":\"AssigneeForm_buttonBack__2up_l\",\"patient\":\"AssigneeForm_patient__BSk53\",\"textareaBox\":\"AssigneeForm_textareaBox__1O1G2\",\"textarea\":\"AssigneeForm_textarea__3sWtq\",\"checkbox\":\"AssigneeForm_checkbox__28Mnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalDialog\":\"ConfirmSendingDocumentRequestModal_modalDialog__3lVlf\",\"unordered\":\"ConfirmSendingDocumentRequestModal_unordered__1WvSc\",\"formGroup\":\"ConfirmSendingDocumentRequestModal_formGroup__qW47v\",\"formInput\":\"ConfirmSendingDocumentRequestModal_formInput__1XTTp\",\"formLabel\":\"ConfirmSendingDocumentRequestModal_formLabel__2CSpz\",\"formGroupHasError\":\"ConfirmSendingDocumentRequestModal_formGroupHasError__1s3zN\",\"formErrors\":\"ConfirmSendingDocumentRequestModal_formErrors__jeuzJ\"};"],"sourceRoot":""}